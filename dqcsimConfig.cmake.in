set(Python_FIND_VIRTUALENV FIRST)
set(Python_FIND_FRAMEWORK LAST)
set(Python_FIND_STRATEGY LOCATION)
find_package(Python COMPONENTS Development)
if(Python_FOUND)
	string(FIND ${Python_INCLUDE_DIRS} include Python_INCLUDE_DIRS_PREFIX_LENGTH REVERSE)
	string(SUBSTRING ${Python_INCLUDE_DIRS} 0 ${Python_INCLUDE_DIRS_PREFIX_LENGTH} Python_INCLUDE_DIRS_PREFIX)
endif()


find_library(DQCSIM_LIBRARY
	dqcsim
	HINTS ENV DQCSIM_LIB
	HINTS ENV DQCSIM_PREFIX
	HINTS ${Python_LIBRARY_DIRS}
	PATH_SUFFIXES lib lib64
	REQUIRED
)

find_path(DQCSIM_INCLUDE_DIR
	NAMES dqcsim.h cdqcsim
	HINTS ENV DQCSIM_INC
	HINTS ENV DQCSIM_PREFIX
	HINTS ${Python_INCLUDE_DIRS_PREFIX}
	PATH_SUFFIXES include
	REQUIRED
)

mark_as_advanced(DQCSIM_LIBRARY DQCSIM_INCLUDE_DIR)
set(DQCSIM_LIBRARIES ${DQCSIM_LIBRARY})
set(DQCSIM_INCLUDE_DIRS ${DQCSIM_INCLUDE_DIR})

if(NOT DQCSIM_LIBRARY OR NOT DQCSIM_INCLUDE_DIR)
	set(DQCSIM_FOUND FALSE)
else()
	set(DQCSIM_FOUND TRUE)
	add_library(dqcsim SHARED IMPORTED GLOBAL)
	set_target_properties(dqcsim PROPERTIES
		IMPORTED_LOCATION ${DQCSIM_LIBRARY}
		IMPORTED_NO_SONAME YES
		INTERFACE_INCLUDE_DIRECTORIES ${DQCSIM_INCLUDE_DIR}
		INTERFACE_SYSTEM_INCLUDE_DIRECTORIES ${DQCSIM_INCLUDE_DIR}
	)
endif()
