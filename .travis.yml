language: rust
sudo: false
cache: cargo

os:
  - linux
  - osx

rust:
  - stable
  - nightly

matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly

branches:
  only:
    - master

addons:
  apt:
    packages:
    # dqcsim
    - python3
    - python3-dev
    - python3-setuptools
    - swig
    # kcov
    - libcurl4-openssl-dev
    - libelf-dev
    - libdw-dev
    - cmake
    - gcc
    - binutils-dev
    - libiberty-dev
  homebrew:
    packages:
    # dqcsim
    - python3
    - swig

env:
  global:
    - DQCSIM_HOME=$HOME/.dqcsim

install:
  - rustup component add clippy --toolchain="$TRAVIS_RUST_VERSION" || cargo install --git https://github.com/rust-lang/rust-clippy/ --force clippy
  - rustup component add rustfmt
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - (test -x $HOME/.cargo/bin/mdbook || cargo install mdbook)
  - (test -x $HOME/.cargo/bin/cargo-make || cargo install cargo-make)
  - cargo install-update -a

script:
  - cargo fmt -- --check
  - make build
  - make kcov-test
  - cargo clippy -- -Dwarnings

after_success: |
  [ "$TRAVIS_OS_NAME" = "linux" ] &&
  [ "$TRAVIS_RUST_VERSION" = "stable" ] &&
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/{dqcsim,simulation,enum}*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  for file in `find dqcsim-api/cpp/build/test_* -executable -and -type f`; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"

before_deploy:
  - cargo doc
  - cd book && mdbook build && mdbook test
  - cp -R $TRAVIS_BUILD_DIR/target/doc/ $TRAVIS_BUILD_DIR/book/book/doc_

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  local-dir: book/book
  keep-history: false
  on:
    branch: master
    rust: stable
    condition: $TRAVIS_OS_NAME = linux
