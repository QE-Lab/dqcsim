sudo: false

matrix:
  include:
    - name: Docs
      os: linux
      dist: xenial
      sudo: true
      language: rust
      rust: stable
      cache:
        directories:
          - $HOME/.cargo
      before_cache:
        - rm -rf $HOME/.cargo/registry
      addons:
        apt:
          packages:
            - python3-pip
      env:
        - DQCSIM_DEBUG=""
      install:
        - sudo add-apt-repository -y ppa:timsc/swig-3.0.12
        - sudo apt-get update
        - sudo apt-get install -y swig
        - mdbook --version || cargo install --debug mdbook --vers "0.2.3"
        - pip3 install setuptools wheel
        - pip3 install pdoc3
      script:
        - cargo doc --no-deps --all-features
        - python3 setup.py bdist_wheel
        - sudo pip3 install target/python/dist/*.whl
      before_deploy:
        - cd doc && mdbook build && mdbook test
        - cp -R $TRAVIS_BUILD_DIR/target/doc/ $TRAVIS_BUILD_DIR/doc/book/rust_
        - pdoc3 --html --output-dir $TRAVIS_BUILD_DIR/doc/book/py_ dqcsim
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN
        local-dir: doc/book
        keep-history: false
        on:
          branch: master

    - &coverage
      name: Coverage Rust
      os: linux
      dist: xenial
      sudo: true
      language: rust
      rust: stable
      cache:
        directories:
          - $HOME/.cargo
          - $HOME/kcov
      env:
        - RUSTFLAGS="-C link-dead-code"
        - PATH=$PATH:$HOME/kcov/bin/
        - DQCSIM_DEBUG=""
      addons:
        apt:
          packages:
            # python
            - python3-pip
            # kcov
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev
            - libiberty-dev
      before_install:
        - |
          ( kcov --version ||
            (
              wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
              tar xzf master.tar.gz
              mkdir -p kcov-build
              cd kcov-build
              cmake -DCMAKE_INSTALL_PREFIX=$HOME/kcov ../kcov-master
              make -j
              make install
              cd ..
            )
          ) || echo "Skipping kcov install"
      script:
        - cargo test --all-targets
        - |
          for file in target/debug/{dqcsim-*,core-*}; do
            [ -x "${file}" ] || continue; 
            mkdir -p "target/cov/$(basename $file)"; 
            kcov --exclude-pattern=/.cargo,/usr/lib,/tests/ --exclude-region='#[cfg(test)]' --verify "target/cov/$(basename $file)" "$file";
          done
      after_success:
        # Upload to codecov
        - bash <(curl -s https://codecov.io/bash)

    - <<: *coverage
      name: Coverage Python
      install: &python-install
        - sudo add-apt-repository -y ppa:timsc/swig-3.0.12
        - sudo apt-get update
        - sudo apt-get install -y swig
        - pip3 install setuptools wheel
      script:
        - python3 setup.py build
        - kcov --python-parser=python3 --include-pattern=/python/dqcsim/ --exclude-pattern=/tests --exclude-line=no_kcoverage target/cov setup.py test

    - <<: *coverage
      name: "Coverage C++"
      install: *python-install
      script:
        - python3 setup.py bdist_wheel
        - sudo pip3 install target/python/dist/*.whl
        - |
          mkdir build &&
          cd build &&
          cmake ../cpp &&
          make -j &&
          cd .. &&
          for file in `find build/test_* -executable -and -type f`; 
            do [ -x "${file}" ] || continue;
            mkdir -p "target/cov/$(basename $file)";
            LD_LIBRARY_PATH=target/debug/ kcov --exclude-pattern=/.cargo,/usr,/cpp --verify "target/cov/$(basename $file)" "$file";
          done

    - &manylinux-wheels
      name: Manylinux wheels
      language: generic
      os: linux
      env:
        MANYLINUX_VERSION: 1
      script:
        - cd python/tools
        - docker build --build-arg MANYLINUX=$MANYLINUX_VERSION -t dqcsim-py-manylinux -f Dockerfile .
        - cd ../..
        - docker run --rm -e DQCSIM_DEBUG= -v `pwd`:/io dqcsim-py-manylinux
    - <<: *manylinux-wheels
      env:
        MANYLINUX_VERSION: 2010
