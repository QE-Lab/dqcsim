initSidebarItems({"struct":[["ConverterMap","K: user-defined key for identifying which converter to use I: detector input = constructor output O: detector output = constructor input"],["CustomGateConverter","Lambda-based converter implementation for unitary gate matrices."],["FixedMatrixConverter","Matrix converter object for fixed matrices."],["MeasurementGateConverter","Converter implementation for measurement gates."],["PhaseKMatrixConverter","Matrix converter object for the phase submatrix using θ = π/2^k​."],["PhaseMatrixConverter","Matrix converter object for the phase submatrix."],["PrepGateConverter","Converter implementation for prep gates."],["RMatrixConverter","Matrix converter object for the R (= IBM U) gate."],["RxMatrixConverter","Matrix converter object for the RX matrix."],["RyMatrixConverter","Matrix converter object for the RY matrix."],["RzMatrixConverter","Matrix converter object for the RZ matrix."],["UMatrixConverter","Matrix converter object for any matrix of a certain size - simply has the matrix itself as its parameter type."],["UnitaryConverter","Converter implementation for regular unitary gate matrices."],["UnitaryGateConverter","Converter implementation for unitary gates based on a matrix converter."]],"trait":[["Converter","A type that can be used as a Converter."],["FromArb","A type that can be constructed from (part of) an ArbData object."],["MatrixConverter","A type that represents a possibly parameterized matrix form, allowing conversion between the parameters and the complete matrix."],["MatrixConverterArb","A type that represents a possibly parameterized matrix form, allowing conversion between parameters wrapped into an ArbData and the complete matrix."],["ToArb","A type that can be converted into (part of) an ArbData object."]]});