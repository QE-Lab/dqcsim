var N=null,E="",T="t",U="u",searchIndex={};
var R=["Sender","Receiver","The message type of the channel.","result","dqcsim::common","compat","context","LogError","qubitref","Returns an arbitrary Y rotation gate. Theta is the…","This loglevel is to be used for reporting debugging…","callback","dqcsim::common::log","logrecord","loglevel","messages","ArbRequest","Requests execution of the given `ArbCmd` by the plugin.","arbdata","configuration","dqcsim::host","verbosity","Specifies the verbosity of the messages sent to DQCsim.","tee_files","Represents the complete configuration for a plugin running…","plugin_type","init_cmds","log_configuration","Configuration for the logging subsystem of the plugin.","dqcsim::host::configuration","dqcsim::host::configuration::EnvMod","pluginreproduction","dqcsim::host::plugin","Implementation of the plugin trait for running the plugin…","plugintype","pluginlogconfiguration","plugintosimulator","Name of the plugin, used to refer to the plugin by the log…","executable","The executable filename of the plugin.","If specified, the executable is expected to be an…","functional","The functional configuration of the plugin, i.e. the…","Specifies the tee file configuration for this plugin.","stdout_mode","Specifies how the stdout stream of the plugin should be…","stderr_mode","Specifies how the stderr stream of the plugin should be…","accept_timeout","Specifies the timeout for connecting to the plugin after…","shutdown_timeout","The random seed for the simulation.","The plugin configurations, from front to back.","simulation","Simulator","Upstream","Downstream","dqcsim::plugin","Indicates that the given handle belongs to a set of qubit…","Indicates that the given handle belongs to a frontend…","Indicates that the given handle belongs to an operator…","Indicates that the given handle belongs to a backend…","Indicates that the given handle belongs to a simulator…","Enumeration of the three types of plugins.","This loglevel is to be used for reporting a fatal error,…","This loglevel is to be used for reporting or propagating a…","This loglevel is to be used for reporting that a called…","This loglevel is to be used for reporting information…","This loglevel is to be used for reporting information NOT…","The function has failed. More information may be obtained…","Error value used to indicate that something went wrong.","Specifies that paths should be saved the same way they…","Specifies that all paths should be saved relative to…","Specifies that all paths should be saved canonically, i.e.…","dqcs_handle_type_t","dqcs_handle_t","dqcs_return_t","Sets the JSON/CBOR object of an `ArbData` object by means…","Returns the JSON/CBOR object of an `ArbData` object in the…","ssize_t","size_t","Replaces the unstructured argument at the specified index…","Returns the unstructured string argument at the specified…","dqcs_bool_return_t","dqcs_qubit_t","Returns a handle to a new qubit reference set containing…","dqcs_measurement_t","dqcs_loglevel_t","dqcs_plugin_type_t","Creates a new plugin process configuration object using…","Returns the configured timeout for the plugin process to…","Creates a new plugin thread configuration object from a…","Appends an `ArbCmd` to the list of initialization commands…","Configures the logging verbosity for the given plugin…","Returns the configured verbosity for the given plugin…","option","dqcs_path_style_t","Sends an `ArbCmd` message to one of the plugins,…","Queries the implementation name of a plugin, referenced by…","dqcs_plugin_state_t","dqcs_cycle_t","pluginstate","streamcapturemode","loglevelfilter","dqcsim::common::error","to_string","borrow_mut","dqcsim::common::gates","try_from","try_into","into_iter","clone_into","to_owned","type_id","dqcsim::common::log::callback","dqcsim::common::log::proxy","dqcsim::common::log::tee_file","dqcsim::common::log::thread","dqcsim::common::protocol","dqcsim::common::types","dqcsim::host::plugin::process","dqcsim::host::plugin::thread","dqcsim::host::reproduction","dqcsim::host::simulation","dqcsim::host::simulator","dqcsim::plugin::connection","dqcsim::plugin::definition","dqcsim::plugin::state","dqcsim::bindings","Starts a program on the accelerator.","Waits for the accelerator to finish its current program.","Sends a message to the accelerator.","Waits for the accelerator to send a message to us.","instantiate","get_log_configuration","get_reproduction","reproductionpathstyle","limit_verbosity","set_default_name","get_type","logthread","simulatortoplugin","pluginconfiguration","qubitmeasurementvalue","errorkind","size_hint","next_back","pluginprocessconfiguration","reproduction","pluginprocessfunctionalconfiguration","default","pluginprocessnonfunctionalconfiguration","teefileerror","teefileconfiguration","pluginuserinitializerequest","frontendrunrequest","plugininitializeresponse","frontendrunresponse","gatestreamdown","pipelinedgatestreamdown","gatestreamup","sequencenumber","qubitmeasurementresult","pluginmetadata","pluginprocessspecification","hostcall","incomingmessage","outgoingmessage","partial_cmp","ordering","formatter","cycledelta","from_str","serialize","deserialize","backtrace","type_name","short_type_name","logleveliter","loglevelfilteriter","logcallback","ipcsender","Converts the type-safe Rust representation of a qubit…","Construct an `ArbData` from a CBOR object and binary…","Provides a reference to the binary argument vector.","Constructs an ArbCmd.","timeout","Creates a new plugin configuration.","pluginthreadconfiguration","get_name","simulatorconfiguration","initialize","accelerator","Returns a reference to the metadata object belonging to…","simulator","connection","accept_upstream","plugindefinition","Returns the plugin type.","get_metadata","allocate","Returns the latest measurement of the given downstream…","Returns the number of downstream cycles since the latest…","Returns the number of downstream cycles between the last…","Tells the downstream plugin to run for the specified…","Generates a random unsigned 64-bit number using the…","Generates a random floating point number using the…","ResultExt","ErrorKind","LoglevelFilter","LogCallback","TeeFileConfiguration","TeeFileError","FrontendRunRequest","PluginInitializeRequest","PluginUserInitializeRequest","FrontendRunResponse","PluginInitializeResponse","SimulatorToPlugin","PluginToSimulator","GatestreamDown","PipelinedGatestreamDown","GatestreamUp","QubitMeasurementResult","QubitMeasurementValue","PluginType","Accelerator","PluginLogConfiguration","PluginProcessConfiguration","PluginProcessFunctionalConfiguration","PluginProcessNonfunctionalConfiguration","PluginProcessSpecification","PluginThreadConfiguration","SimulatorConfiguration","StreamCaptureMode","ReproductionPathStyle","PluginConfiguration","PluginReproduction","PluginModification","Reproduction","IncomingMessage","OutgoingMessage","PluginDefinition","LoglevelIter","LoglevelFilterIter","LogRecord","LogThread","PluginAcceptUpstreamRequest","SequenceNumber","SequenceNumberGenerator","QubitRefGenerator","PluginMetadata","PluginProcess","PluginThread","Simulation","Connection","PluginState"];

searchIndex["dqcsim"]={"doc":"DQCsim: the Delft Quantum & Classical simulator","i":[[0,"common","dqcsim","Core modules common to both the plugin and host side of…",N,N],[0,"channel",R[4],"Channel abstractions.",N,N],[6,"CrossbeamChannel","dqcsim::common::channel",E,N,N],[6,"IpcChannel",E,E,N,N],[6,"SimulatorChannel",E,E,N,N],[6,"PluginChannel",E,E,N,N],[6,"UpstreamChannel",E,E,N,N],[6,"DownstreamChannel",E,E,N,N],[8,"Channel",E,"Channel abstraction.",N,N],[16,"SenderItem",E,"The message type of the sender.",0,N],[16,"ReceiverItem",E,"The message type of the receiver.",0,N],[16,R[0],E,"Sender side.",0,N],[16,R[1],E,"Receiver side;",0,N],[8,R[0],E,"Sender side of a channel.",N,N],[16,"Item",E,R[2],1,N],[16,"Error",E,"The error type of the Result returned by the send function.",1,N],[10,"send",E,"Send a message.",1,[[["self"]],[R[3]]]],[8,R[1],E,"Receiver side of a channel.",N,N],[16,"Item",E,R[2],2,N],[16,"Error",E,"The error type of the Result returned by the recv function.",2,N],[10,"recv",E,"Receive a message.",2,[[["self"]],[R[3]]]],[0,"error",R[4],"Error-handling.",N,N],[8,R[207],R[104],"Re-export the [`ResultExt`] trait which adds the…",N,N],[10,R[5],E,"Wraps the error in `Compat` to make it compatible with…",3,[[],[[R[3],[R[5]]],[R[5]]]]],[10,R[6],E,"Wraps the error type in a context type.",3,[[["d"]],[[R[3],[R[6]]],[R[6]]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",3,[[["f"]],[[R[3],[R[6]]],[R[6]]]]],[3,"Error",E,"[`Error`] type for this crate.",N,N],[4,R[208],E,E,N,N],[13,R[7],E,R[7],4,N],[13,"InvalidArgument",E,"Generic invalid argument: use when a function is called in…",4,N],[13,"InvalidOperation",E,"Generic invalid operation: use when a function is called…",4,N],[13,"Other",E,"Generic error: use when an error doesn't fit in the above…",4,N],[13,"Multiple",E,"Wraps multiple errors that occurred asynchronously.",4,N],[13,"ITCError",E,"For propagating crossbeam_channel errors.",4,N],[13,"IPCError",E,"For propagating ipc_channel errors.",4,N],[13,"IoError",E,"For propagating std::io::Error errors.",4,N],[13,"TermError",E,"For propagating term::Error errors.",4,N],[5,"log_err",E,"Shorthand for producing a LogError.",N,[[],[R[3]]]],[5,"oe_log_err",E,"Shorthand for producing a LogError in an or_else function.",N,[[]]],[5,"inv_arg",E,"Shorthand for producing an invalid argument error.",N,[[],[R[3]]]],[5,"oe_inv_arg",E,"Shorthand for producing an invalid argument error in an…",N,[[]]],[5,"inv_op",E,"Shorthand for producing an invalid operation error.",N,[[],[R[3]]]],[5,"oe_inv_op",E,"Shorthand for producing an invalid operation error in an…",N,[[]]],[5,"err",E,"Shorthand for producing an error that does not fit in any…",N,[[],[R[3]]]],[5,"oe_err",E,"err() but for or_else() functions.",N,[[]]],[6,"Result",E,"Internal [`Result`] type which uses the crate's [`Error`]…",N,N],[0,"gates",R[4],"Helper functions for common quantum Gates",N,N],[4,"Gates",R[107],"Enumeration of predefined quantum gates.",N,N],[13,"I",E,E,5,N],[13,"RX",E,E,5,N],[13,"RY",E,E,5,N],[13,"RZ",E,E,5,N],[13,"SWAP",E,E,5,N],[13,"SQSWAP",E,E,5,N],[13,"X",E,E,5,N],[13,"X90",E,E,5,N],[13,"MX90",E,E,5,N],[13,"Y",E,E,5,N],[13,"Y90",E,E,5,N],[13,"MY90",E,E,5,N],[13,"Z",E,E,5,N],[13,"Z90",E,E,5,N],[13,"MZ90",E,E,5,N],[13,"S",E,E,5,N],[13,"SDAG",E,E,5,N],[13,"T",E,E,5,N],[13,"TDAG",E,E,5,N],[13,"H",E,E,5,N],[13,"CNOT",E,E,5,N],[13,"TOFFOLI",E,E,5,N],[13,"FREDKIN",E,E,5,N],[5,"i_gate",E,"Returns an I gate.",N,[[[R[8]]],["gate"]]],[5,"rx_gate",E,"Returns an arbitrary X rotation gate. Theta is the…",N,[[["f64"],[R[8]]],["gate"]]],[5,"ry_gate",E,R[9],N,[[["f64"],[R[8]]],["gate"]]],[5,"rz_gate",E,R[9],N,[[["f64"],[R[8]]],["gate"]]],[5,"swap_gate",E,"Returns a swap gate on provided target qubits a and b.",N,[[[R[8]]],["gate"]]],[5,"sqswap_gate",E,"Returns a square-root-of-swap gate on provided target…",N,[[[R[8]]],["gate"]]],[5,"x_gate",E,"Returns an X gate.",N,[[[R[8]]],["gate"]]],[5,"x90_gate",E,"Returns a 90-degree X gate.",N,[[[R[8]]],["gate"]]],[5,"mx90_gate",E,"Returns a negative 90-degree X gate.",N,[[[R[8]]],["gate"]]],[5,"y_gate",E,"Returns a Y gate.",N,[[[R[8]]],["gate"]]],[5,"y90_gate",E,"Returns a 90-degree Y gate.",N,[[[R[8]]],["gate"]]],[5,"my90_gate",E,"Returns a negative 90-degree Y gate.",N,[[[R[8]]],["gate"]]],[5,"z_gate",E,"Returns a Z gate.",N,[[[R[8]]],["gate"]]],[5,"z90_gate",E,"Returns a 90-degree Z gate.",N,[[[R[8]]],["gate"]]],[5,"mz90_gate",E,"Returns a negative 90-degree Z gate.",N,[[[R[8]]],["gate"]]],[5,"s_gate",E,"Returns an S gate.",N,[[[R[8]]],["gate"]]],[5,"sdag_gate",E,"Returns an S-dagger gate.",N,[[[R[8]]],["gate"]]],[5,"t_gate",E,"Returns a T gate.",N,[[[R[8]]],["gate"]]],[5,"tdag_gate",E,"Returns a T-dagger gate.",N,[[[R[8]]],["gate"]]],[5,"h_gate",E,"Returns a Hadamard gate.",N,[[[R[8]]],["gate"]]],[5,"cnot_gate",E,"Returns a CNOT gate.",N,[[[R[8]]],["gate"]]],[5,"toffoli_gate",E,"Returns a Toffoli gate.",N,[[[R[8]]],["gate"]]],[5,"fredkin_gate",E,"Returns a Fredking gate.",N,[[[R[8]]],["gate"]]],[0,"log",R[4],"A log thread and thread-local log proxy combination.",N,N],[3,R[243],R[12],E,N,N],[3,R[244],E,E,N,N],[3,"Metadata",E,"Log record metadata.",N,N],[3,R[245],E,"A log record.",N,N],[4,"Loglevel",E,"Loglevel for log records.",N,N],[13,"Fatal",E,R[64],6,N],[13,"Error",E,R[65],6,N],[13,"Warn",E,R[66],6,N],[13,"Note",E,R[67],6,N],[13,"Info",E,R[68],6,N],[13,"Debug",E,R[10],6,N],[13,"Trace",E,R[10],6,N],[4,R[209],E,"LoglevelFilter for implementors of the Log trait.",N,N],[13,"Off",E,"A level lower than all log levels.",7,N],[13,"Fatal",E,"Corresponds to the `Fatal` log level.",7,N],[13,"Error",E,"Corresponds to the `Error` log level.",7,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",7,N],[13,"Note",E,"Corresponds to the `Note` log level.",7,N],[13,"Info",E,"Corresponds to the `Info` log level.",7,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",7,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",7,N],[5,"init",E,"Initialize the thread-local loggers.",N,[[["vec",["box"]],["box",["log"]]],[R[3]]]],[5,"deinit",E,"Deinitialize the thread-local loggers.",N,[[],[R[3]]]],[0,R[11],E,E,N,N],[3,R[210],R[114],"Log callback function structure.",N,N],[12,R[11],E,"The callback function to call.",8,N],[12,"filter",E,"Verbosity level for calling the log callback function.",8,N],[0,"proxy",R[12],"A generic log proxy implementation.",N,N],[3,"LogProxy",R[115],"A [`LogProxy`] is a logger implementation (`Log`) which…",N,N],[0,"stdio",R[12],"Utility function to spawn a log proxy implementation to…",N,N],[5,"proxy_stdio","dqcsim::common::log::stdio","Forward standard i/o to log channel.",N,[[["read"],["box",["read"]],["sender",[R[13]]],[R[13]],[R[14]]],["joinhandle"]]],[0,"tee_file",R[12],E,N,N],[3,R[211],R[116],"Represents a tee file configuration for the logging system.",N,N],[12,"filter",E,E,9,N],[12,"file",E,E,9,N],[3,"TeeFile",E,"TeeFile is the combination of a TeeFileConfiguration and a…",N,N],[12,R[19],E,"The TeeFileConfiguration",10,N],[4,R[212],E,"Error structure used for reporting TeeFile errors.",N,N],[13,"ParseError",E,E,11,N],[0,"thread",R[12],"A log thread implementation.",N,N],[3,R[246],R[117],E,N,N],[17,"LOGGERS",R[12],"The thread-local loggers.",N,N],[8,"Log",E,"The Log trait.",N,N],[10,"name",E,"Returns the name of this logger",12,[[["self"]],["str"]]],[10,"enabled",E,"Returns true if the provided loglevel is enabled",12,[[[R[14]],["self"]],["bool"]]],[10,"log",E,"Log the incoming record",12,[[["self"],[R[13]]]]],[0,"protocol",R[4],"Defines the protocols for all forms of communication.",N,N],[3,R[213],R[118],"Frontend run request. See `SimulatorToPlugin::RunRequest`.",N,N],[12,"start",E,"When specified, the frontend's `run()` callback must be…",13,N],[12,R[15],E,"Messages queued up through the host's `send()` function,…",13,N],[3,R[247],E,E,N,N],[3,R[214],E,"Plugin initialization request. See…",N,N],[12,"downstream",E,"Gatestream endpoint for the downstream plugin to connect to.",14,N],[12,R[25],E,"The expected plugin type.",14,N],[12,"seed",E,"Random seed.",14,N],[12,R[27],E,R[28],14,N],[12,"log_channel",E,"Sender side of the log channel. Can be used by a Plugin to…",14,N],[3,R[215],E,"Plugin user initialization request. See…",N,N],[12,R[26],E,"Vec with initialization commands.",15,N],[3,R[216],E,"Frontend run response.",N,N],[12,"return_value",E,"When specified, the frontend's `run()` callback terminated…",16,N],[12,R[15],E,"Messages queued up through the frontend's `send()`…",16,N],[3,R[217],E,"Initialization response.",N,N],[12,"upstream",E,"Gatestream endpoint for the upstream plugin to connect to.",17,N],[12,"metadata",E,"Plugin metadata information from the `PluginDefinition`…",17,N],[4,R[218],E,"Simulator/host to plugin requests.",N,N],[13,"Initialize",E,"Request to initialize the plugin.",18,N],[13,"AcceptUpstream",E,"Request to complete the connection with the upstream plugin.",18,N],[13,"UserInitialize",E,"Request to run user initialization code.",18,N],[13,"Abort",E,"Request to abort the simulation and stop the plugin.",18,N],[13,"RunRequest",E,"Passes control from the host to the frontend plugin.",18,N],[13,R[16],E,R[17],18,N],[4,R[219],E,"Plugin to simulator responses.",N,N],[13,"Success",E,"Success response to requests that don't return data..",19,N],[13,"Failure",E,"Failure response to any request, containing an error…",19,N],[13,"Initialized",E,"Success response to `SimulatorToPlugin::Initialize`.",19,N],[13,"RunResponse",E,"Success response to `SimulatorToPlugin::RunRequest`.",19,N],[13,"ArbResponse",E,"Success response to `SimulatorToPlugin::ArbRequest`.",19,N],[4,R[220],E,"Gatestream requests/downstream messages.",N,N],[13,"Pipelined",E,"A pipelined gatestream request.",20,N],[13,R[16],E,R[17],20,N],[4,R[221],E,"Enumeration of pipelined gatestream messages.",N,N],[13,"Allocate",E,"Requests allocation of a number of qubits.",21,N],[13,"Free",E,"Requests that one or more qubits be freed.",21,N],[13,"Gate",E,"Requests execution of a gate.",21,N],[13,"Advance",E,"Advances the simulation by the specified number of cycles.",21,N],[4,R[222],E,"Gatestream responses/upstream messages.",N,N],[13,"CompletedUpTo",E,"Acknowledges one or more requests.",22,N],[13,"Failure",E,"Indicates that the message with the specified sequence…",22,N],[13,"Measured",E,"Specifies that the specified qubit was measured.",22,N],[13,"Advanced",E,"Indicates that the simulation was advanced by the…",22,N],[13,"ArbSuccess",E,"Indicates that a `GatestreamDown::ArbRequest` was executed…",22,N],[13,"ArbFailure",E,"Indicates that a `GatestreamDown::ArbRequest` failed.",22,N],[6,"PluginToLogThread",E,E,N,N],[0,"types",R[4],"This module defines some types that are shared between…",N,N],[3,R[248],R[119],"Represents a sequence number used within a gate stream.",N,N],[3,R[249],E,"Struct used to generate sequence numbers.",N,N],[3,"Cycle",E,"Represents a simulation cycle.",N,N],[3,"QubitRef",E,"Represents a reference to a qubit.",N,N],[3,R[250],E,"Struct used to generate new qubit references.",N,N],[3,"ArbData",E,"Represents an ArbData structure, consisting of an…",N,N],[3,"ArbCmd",E,"Represents an ArbCmd structure, consisting of interface…",N,N],[3,"Gate",E,"Represents a quantum gate.",N,N],[12,"data",E,"User-defined classical data to pass along with the gate.",23,N],[3,R[223],E,"Represents a qubit measurement result.",N,N],[12,"qubit",E,"The measured qubit.",24,N],[12,"value",E,"The measured value.",24,N],[12,"data",E,"Implementation-specific additional data, such as the…",24,N],[3,R[251],E,"Contains information about a plugin implementation.",N,N],[4,R[224],E,E,N,N],[13,"Undefined",E,"The value is unknown because the qubit has not been…",25,N],[13,"Zero",E,"The qubit was measured to be zero.",25,N],[13,"One",E,"The qubit was measured to be one.",25,N],[4,R[225],E,R[63],N,N],[13,"Frontend",E,E,26,N],[13,"Operator",E,E,26,N],[13,"Backend",E,E,26,N],[6,"CycleDelta",E,"Represents a cycle difference.",N,N],[6,"Cycles",E,"Represents a number of cycles to advance by.",N,N],[0,"util",R[4],"Utility functions that don't belong elsewhere.",N,N],[5,"friendly_name","dqcsim::common::util","Splits a CamelCase name into space-separated lowercase…",N,[[],["string"]]],[5,"friendly_enumerate",E,"Turns a string list into its natural language equivalent.",N,[[["str"],[R[95],["str"]]],["string"]]],[5,"friendly_enum_parse",E,"Parses a string representing an enum variant into the…",N,[[["str"]],[R[3]]]],[0,"host","dqcsim","Core modules used by the host side of DQCsim.",N,N],[0,R[192],R[20],"Host API interface trait (start, wait, send, recv).",N,N],[8,R[226],"dqcsim::host::accelerator","Trait containing the primitive operations for an…",N,N],[10,"start",E,R[129],27,[[["self"]],[R[3]]]],[10,"wait",E,R[130],27,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[10,"send",E,R[131],27,[[["self"]],[R[3]]]],[10,"recv",E,R[132],27,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[0,R[19],R[20],"Configuration structures for the plugins and simulator.",N,N],[3,"Seed",R[29],"Represents a 64-bit random seed. Can be converted to and…",N,N],[12,"value",E,"The random seed.",28,N],[3,R[227],E,"Configuration structure for the plugin logging system.",N,N],[12,"name",E,"Instance name of the plugin used to identify it in log…",29,N],[12,R[21],E,R[22],29,N],[12,R[23],E,"Specifies the tee file configurations for this plugin.",29,N],[3,R[228],E,R[24],N,N],[12,"name",E,R[37],30,N],[12,"specification",E,"Plugin specification, i.e. the plugin executable and…",30,N],[12,R[41],E,R[42],30,N],[12,"nonfunctional",E,"The nonfunctional configuration of the plugin, i.e. any…",30,N],[3,R[229],E,"Structure describing the functional configuration of a…",N,N],[12,"init",E,"ArbCmd objects passed to the plugin initialization RPC.",31,N],[12,"env",E,"Environment variable overrides for the plugin process.",31,N],[12,"work",E,"The working directory for the plugin process.",31,N],[3,R[230],E,"Structure describing the NONfunctional configuration of a…",N,N],[12,R[21],E,R[22],32,N],[12,R[23],E,R[43],32,N],[12,R[44],E,R[45],32,N],[12,R[46],E,R[47],32,N],[12,R[48],E,R[49],32,N],[12,R[50],E,"Specifies the timeout duration to wait for the plugin to…",32,N],[3,R[231],E,"Plugin specification, consisting of the executable…",N,N],[12,R[38],E,R[39],33,N],[12,"script",E,R[40],33,N],[12,"typ",E,"Plugin type.",33,N],[3,R[232],E,R[24],N,N],[12,"closure",E,"The closure that's called from within the plugin thread.…",34,N],[12,R[25],E,"The type of plugin that the closure is expected to start.",34,N],[12,R[26],E,"The vector of `ArbCmd`s passed to the `initialize()`…",34,N],[12,R[27],E,R[28],34,N],[3,R[233],E,"The complete configuration for a DQCsim run.",N,N],[12,"seed",E,R[51],35,N],[12,"stderr_level",E,"The verbosity for logging messages to stderr.",35,N],[12,R[23],E,"Logs messages to the specified file in addition to stderr.…",35,N],[12,"log_callback",E,"Optional log callback function.",35,N],[12,"dqcsim_level",E,"The verbosity for DQCsim itself.",35,N],[12,"plugins",E,R[52],35,N],[12,"reproduction_path_style",E,"The path style used when writing the reproduction file.",35,N],[4,"EnvMod",E,"Represents an environment variable modification.",N,N],[13,"Set",E,"Sets the environment variable `key` to `value`.",36,N],[12,"key",R[30],E,36,N],[12,"value",E,E,36,N],[13,"Remove",R[29],"Clears (undefines) the environment variable `key`.",36,N],[12,"key",R[30],E,36,N],[4,R[234],R[29],"Stream capture mode.",N,N],[13,"Pass",E,"Don't capture the stream. That is, let it pass through to…",37,N],[13,"Null",E,"Disable the stream by piping it to /dev/null (or by…",37,N],[13,"Capture",E,"Capture the stream to turn each line into a log message…",37,N],[4,"Timeout",E,"Represents a timeout parameter, which may be infinite.",N,N],[13,"Duration",E,"The duration specifies the maximum timeout.",38,N],[13,"Infinite",E,"The timeout is infinite.",38,N],[4,R[235],E,"Represents the style for storing paths in a reproduction…",N,N],[13,"Keep",E,R[71],39,N],[13,"Relative",E,R[72],39,N],[13,"Absolute",E,R[73],39,N],[8,R[236],E,"Trait for types of configurations. The only thing that…",N,N],[10,R[133],E,"Instantiates the plugin.",40,[[["box"]],[["box",["plugin"]],["plugin"]]]],[10,R[134],E,"Returns the log configuratin of the plugin. Note that this…",40,[[["self"]],[R[35]]]],[10,R[139],E,R[198],40,[[["self"]],[R[34]]]],[10,R[135],E,"Returns the PluginReproduction when possible. Otherwise…",40,[[["self"],[R[136]]],[[R[3],[R[31]]],[R[31]]]]],[10,R[137],E,"Limits the verbosity of the messages reported to the…",40,[[["self"],[R[103]]]]],[10,R[138],E,"Sets the default name for this plugin.",40,[[["self"],["string"]]]],[0,"plugin",R[20],"Contains structs that manage the lifetime and connections…",N,N],[0,"process",R[32],R[33],N,N],[3,R[252],R[120],"A Plugin running in a child process.",N,N],[0,"thread",R[32],R[33],N,N],[3,R[253],R[121],E,N,N],[6,"PluginThreadClosure",E,E,N,N],[8,"Plugin",R[32],"The Plugin trait, implemented by all Plugins used in a…",N,N],[10,"spawn",E,"Spawn the Plugin. The Plugin should spawn the actual…",41,[[[R[140]],["self"]],[R[3]]]],[10,R[25],E,"Returns the PluginType of this plugin.",41,[[["self"]],[R[34]]]],[10,R[26],E,"Returns the vector of `ArbCmd`s that are to be passed to…",41,[[["self"]],[["arbcmd"],["vec",["arbcmd"]]]]],[10,R[27],E,"Returns the logging configuration for this plugin.",41,[[["self"]],[R[35]]]],[10,"rpc",E,"Send the SimulatorToPlugin message to the plugin.",41,[[["self"],[R[141]]],[[R[3],[R[36]]],[R[36]]]]],[0,R[148],R[20],"Simulation run reproduction functionality.",N,N],[3,R[237],R[122],"The contents of a plugin configuration in a reproduction…",N,N],[12,"name",E,R[37],42,N],[12,R[38],E,R[39],42,N],[12,"script",E,R[40],42,N],[12,R[41],E,R[42],42,N],[3,R[238],E,"Represents a nonfunctional configuration modification for…",N,N],[12,"name",E,"Name of the referenced plugin.",43,N],[12,R[21],E,"Specifies the verbosity of the messages sent to DQCsim. If…",43,N],[12,R[23],E,R[43],43,N],[12,R[44],E,R[45],43,N],[12,R[46],E,R[47],43,N],[12,R[48],E,R[49],43,N],[12,R[50],E,R[49],43,N],[3,R[239],E,"The contents of a reproduction file.",N,N],[12,"seed",E,R[51],44,N],[12,"plugins",E,R[52],44,N],[12,"host_calls",E,"The sequence of host calls to make.",44,N],[12,"hostname",E,"The host on which the run was performed, if available.",44,N],[12,"username",E,"The user that performed the run.",44,N],[12,"workdir",E,"The working directory that the run was performed in.",44,N],[4,"HostCall",E,"Represents a host API call.",N,N],[13,"Start",E,E,45,N],[13,"Wait",E,E,45,N],[13,"Send",E,E,45,N],[13,"Recv",E,E,45,N],[13,"Yield",E,E,45,N],[13,"Arb",E,E,45,N],[0,R[53],R[20],"Simulation instance: launches, connects, communicates…",N,N],[3,R[254],R[123],"Simulation instance.",N,N],[6,"Pipeline",E,"Type alias for a pipeline of Plugin trait objects.",N,N],[0,R[194],R[20],"Simulator driver: wraps a `Simulation` and a `LogThread`.",N,N],[3,R[54],R[124],"Simulator driver instance.",N,N],[12,R[53],E,"The Simulation driven by this Simulator.",46,N],[0,"plugin","dqcsim","Core modules used by the plugin side of DQCsim.",N,N],[0,R[195],R[57],"Plugin to simulator connection wrapper.",N,N],[3,R[255],R[125],"Plugin to Simulator connection wrapper.",N,N],[4,R[240],E,"Incoming messages variants.",N,N],[13,R[54],E,E,47,N],[13,R[55],E,E,47,N],[13,R[56],E,E,47,N],[4,R[241],E,"Outgoing messages variants.",N,N],[13,R[54],E,E,48,N],[13,R[55],E,E,48,N],[13,R[56],E,E,48,N],[0,"definition",R[57],"Module containing the structures used to define a plugin…",N,N],[3,R[242],R[126],"Defines a plugin.",N,N],[12,R[191],E,"Initialization callback.",49,N],[12,"drop",E,"Finalization callback.",49,N],[12,"run",E,"Run callback for frontends.",49,N],[12,R[200],E,"Qubit allocation callback for operators and backends.",49,N],[12,"free",E,"Qubit deallocation callback for operators and backends.",49,N],[12,"gate",E,"Gate execution callback for operators and backends.",49,N],[12,"modify_measurement",E,"Measurement modification callback for operators.",49,N],[12,"advance",E,"Callback for advancing time for operators and backends.",49,N],[12,"upstream_arb",E,"Callback function for handling an arb from upstream for…",49,N],[12,"host_arb",E,"Callback function for handling an arb from the host.",49,N],[0,"log",R[57],"Utility function to setup logging for a Plugin instance.",N,N],[5,"setup_logging","dqcsim::plugin::log","Setup logging for a Plugin instance.",N,[[[R[35]],[R[181],[R[13]]],[R[13]]],[R[3]]]],[0,"state",R[57],"Module containing the runtime structures of a plugin.",N,N],[3,R[256],R[127],"Structure representing the state of a plugin.",N,N],[0,"bindings","dqcsim","This module provides a C interface to the DQCsim simulator.",N,N],[3,R[99],R[128],"Type for a plugin state. > > This is an opaque type that…",N,N],[4,R[74],E,"Enumeration of types that can be associated with a handle.",N,N],[13,"DQCS_HTYPE_INVALID",E,"Indicates that the given handle is invalid. > > This…",50,N],[13,"DQCS_HTYPE_ARB_DATA",E,"Indicates that the given handle belongs to an `ArbData`…",50,N],[13,"DQCS_HTYPE_ARB_CMD",E,"Indicates that the given handle belongs to an `ArbCmd`…",50,N],[13,"DQCS_HTYPE_ARB_CMD_QUEUE",E,"Indicates that the given handle belongs to a queue of…",50,N],[13,"DQCS_HTYPE_QUBIT_SET",E,R[58],50,N],[13,"DQCS_HTYPE_GATE",E,"Indicates that the given handle belongs to a quantum gate…",50,N],[13,"DQCS_HTYPE_MEAS",E,"Indicates that the given handle belongs to a qubit…",50,N],[13,"DQCS_HTYPE_MEAS_SET",E,R[58],50,N],[13,"DQCS_HTYPE_FRONT_PROCESS_CONFIG",E,R[59],50,N],[13,"DQCS_HTYPE_OPER_PROCESS_CONFIG",E,R[60],50,N],[13,"DQCS_HTYPE_BACK_PROCESS_CONFIG",E,R[61],50,N],[13,"DQCS_HTYPE_FRONT_THREAD_CONFIG",E,R[59],50,N],[13,"DQCS_HTYPE_OPER_THREAD_CONFIG",E,R[60],50,N],[13,"DQCS_HTYPE_BACK_THREAD_CONFIG",E,R[61],50,N],[13,"DQCS_HTYPE_SIM_CONFIG",E,R[62],50,N],[13,"DQCS_HTYPE_SIM",E,R[62],50,N],[13,"DQCS_HTYPE_FRONT_DEF",E,R[59],50,N],[13,"DQCS_HTYPE_OPER_DEF",E,R[60],50,N],[13,"DQCS_HTYPE_BACK_DEF",E,R[61],50,N],[13,"DQCS_HTYPE_PLUGIN_JOIN",E,"Indicates that the given handle belongs to a plugin thread…",50,N],[4,R[88],E,R[63],N,N],[13,"DQCS_PTYPE_INVALID",E,"Invalid plugin type. Used to indicate failure of an API…",51,N],[13,"DQCS_PTYPE_FRONT",E,"Frontend plugin.",51,N],[13,"DQCS_PTYPE_OPER",E,"Operator plugin.",51,N],[13,"DQCS_PTYPE_BACK",E,"Backend plugin.",51,N],[4,R[87],E,"Enumeration of loglevels and logging modes.",N,N],[13,"DQCS_LOG_INVALID",E,"Invalid loglevel. Used to indicate failure of an API that…",52,N],[13,"DQCS_LOG_OFF",E,"Turns logging off.",52,N],[13,"DQCS_LOG_FATAL",E,R[64],52,N],[13,"DQCS_LOG_ERROR",E,R[65],52,N],[13,"DQCS_LOG_WARN",E,R[66],52,N],[13,"DQCS_LOG_NOTE",E,R[67],52,N],[13,"DQCS_LOG_INFO",E,R[68],52,N],[13,"DQCS_LOG_DEBUG",E,R[10],52,N],[13,"DQCS_LOG_TRACE",E,R[10],52,N],[13,"DQCS_LOG_PASS",E,"This is intended to be used when configuring the…",52,N],[4,R[76],E,"Default return type for functions that don't need to…",N,N],[13,"DQCS_FAILURE",E,R[69],53,N],[13,"DQCS_SUCCESS",E,"The function did what it was supposed to.",53,N],[4,R[83],E,"Return type for functions that normally return a boolean…",N,N],[13,"DQCS_BOOL_FAILURE",E,R[69],54,N],[13,"DQCS_FALSE",E,"The function did what it was supposed to and returned false.",54,N],[13,"DQCS_TRUE",E,"The function did what it was supposed to and returned true.",54,N],[4,R[86],E,"Qubit measurement value.",N,N],[13,"DQCS_MEAS_INVALID",E,R[70],55,N],[13,"DQCS_MEAS_ZERO",E,"Indicates that the qubit was measured to be zero.",55,N],[13,"DQCS_MEAS_ONE",E,"Indicates that the qubit was measured to be one.",55,N],[13,"DQCS_MEAS_UNDEFINED",E,"Indicates that the measurement value is unknown for…",55,N],[4,R[96],E,"Reproduction file path style.",N,N],[13,"DQCS_PATH_STYLE_INVALID",E,R[70],56,N],[13,"DQCS_PATH_STYLE_KEEP",E,R[71],56,N],[13,"DQCS_PATH_STYLE_RELATIVE",E,R[72],56,N],[13,"DQCS_PATH_STYLE_ABSOLUTE",E,R[73],56,N],[5,"dqcs_error_get",E,"Returns a pointer to the latest error message. > > Call…",N,[[]]],[5,"dqcs_error_set",E,"Sets the latest error message string. > > This must be…",N,[[]]],[5,"dqcs_handle_type",E,"Returns the type of object associated with the given handle.",N,[[[R[75]]],[R[74]]]],[5,"dqcs_handle_dump",E,"Returns a debug dump of the object associated with the…",N,[[[R[75]]]]],[5,"dqcs_handle_delete",E,"Destroys the object associated with a handle. > > Returns…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_handle_delete_all",E,"Deletes all handles for the current thread. > > This can…",N,[[],[R[76]]]],[5,"dqcs_handle_leak_check",E,"Succeeds only if there are no live handles in the current…",N,[[],[R[76]]]],[5,"dqcs_arb_new",E,"Creates a new `ArbData` object. > > Returns the handle of…",N,[[],[R[75]]]],[5,"dqcs_arb_json_set",E,R[77],N,[[[R[75]]],[R[76]]]],[5,"dqcs_arb_json_get",E,R[78],N,[[[R[75]]]]],[5,"dqcs_arb_cbor_set",E,R[77],N,[[[R[75]],[R[80]]],[R[76]]]],[5,"dqcs_arb_cbor_get",E,R[78],N,[[[R[80]],[R[75]]],[R[79]]]],[5,"dqcs_arb_push_str",E,"Pushes an unstructured string argument to the back of the…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_arb_push_raw",E,"Pushes an unstructured raw argument to the back of the list.",N,[[[R[75]],[R[80]]],[R[76]]]],[5,"dqcs_arb_pop_str",E,"Pops an unstructured string argument from the back of the…",N,[[[R[75]]]]],[5,"dqcs_arb_pop_raw",E,"Pops an unstructured raw argument from the back of the…",N,[[[R[80]],[R[75]]],[R[79]]]],[5,"dqcs_arb_pop",E,"Pops an unstructured argument from the back of the list…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_arb_insert_str",E,"Inserts an unstructured string argument into the list at…",N,[[[R[75]],[R[79]]],[R[76]]]],[5,"dqcs_arb_insert_raw",E,"Inserts an unstructured raw argument into the list at the…",N,[[[R[79]],[R[75]],[R[80]]],[R[76]]]],[5,"dqcs_arb_remove",E,"Removes the specified unstructured string argument from…",N,[[[R[75]],[R[79]]],[R[76]]]],[5,"dqcs_arb_set_str",E,R[81],N,[[[R[75]],[R[79]]],[R[76]]]],[5,"dqcs_arb_set_raw",E,R[81],N,[[[R[79]],[R[75]],[R[80]]],[R[76]]]],[5,"dqcs_arb_get_str",E,R[82],N,[[[R[75]],[R[79]]]]],[5,"dqcs_arb_get_raw",E,R[82],N,[[[R[79]],[R[75]],[R[80]]],[R[79]]]],[5,"dqcs_arb_get_size",E,"Returns the size in bytes of the unstructured string…",N,[[[R[75]],[R[79]]],[R[79]]]],[5,"dqcs_arb_len",E,"Returns the number of unstructured arguments, or -1 to…",N,[[[R[75]]],[R[79]]]],[5,"dqcs_arb_clear",E,"Clears the unstructured argument list.",N,[[[R[75]]],[R[76]]]],[5,"dqcs_arb_assign",E,"Copies the data from one object to another.",N,[[[R[75]]],[R[76]]]],[5,"dqcs_cmd_new",E,"Creates a new `ArbCmd` object. > > Returns the handle of…",N,[[],[R[75]]]],[5,"dqcs_cmd_iface_get",E,"Returns the interface ID of an `ArbCmd`. > > On success,…",N,[[[R[75]]]]],[5,"dqcs_cmd_iface_cmp",E,"Compares the interface ID of an `ArbCmd` with the given…",N,[[[R[75]]],[R[83]]]],[5,"dqcs_cmd_oper_get",E,"Returns the operation ID of an `ArbCmd`. > > On success,…",N,[[[R[75]]]]],[5,"dqcs_cmd_oper_cmp",E,"Compares the operation ID of an `ArbCmd` with the given…",N,[[[R[75]]],[R[83]]]],[5,"dqcs_cq_new",E,"Creates a new `ArbCmd` queue object. > > Returns the…",N,[[],[R[75]]]],[5,"dqcs_cq_push",E,"Pushes an `ArbCmd` object into the given `ArbCmd` queue. >…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_cq_next",E,"Advances an `ArbCmd` queue to the next command. > > Use…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_cq_len",E,"Returns the number of `ArbCmd` objects in the given…",N,[[[R[75]]],[R[79]]]],[5,"dqcs_qbset_new",E,"Creates a new set of qubit references. > > Returns the…",N,[[],[R[75]]]],[5,"dqcs_qbset_contains",E,"Returns whether the given qubit set contains the given…",N,[[[R[75]],[R[84]]],[R[83]]]],[5,"dqcs_qbset_push",E,"Pushes a qubit reference into a qubit reference set. > >…",N,[[[R[75]],[R[84]]],[R[76]]]],[5,"dqcs_qbset_pop",E,"Pops a qubit reference off of a qubit reference set. > >…",N,[[[R[75]]],[R[84]]]],[5,"dqcs_qbset_len",E,"Returns the number of qubits in the given set. > > This…",N,[[[R[75]]],[R[79]]]],[5,"dqcs_qbset_copy",E,"Returns a copy of the given qubit set, intended for…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_gate_new_unitary",E,"Constructs a new unitary gate. > > `targets` must be a…",N,[[[R[80]],[R[75]]],[R[75]]]],[5,"dqcs_gate_new_measurement",E,"Constructs a new measurement gate. > > `measures` must be…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_gate_new_custom",E,"Constructs a new custom gate. > > The functionality of…",N,[[[R[80]],[R[75]]],[R[75]]]],[5,"dqcs_gate_is_custom",E,"Returns whether the specified gate is a custom gate. > >…",N,[[[R[75]]],[R[83]]]],[5,"dqcs_gate_name",E,"Returns the name of a custom gate. > > This function fails…",N,[[[R[75]]]]],[5,"dqcs_gate_has_targets",E,"Returns whether the specified gate has target qubits.",N,[[[R[75]]],[R[83]]]],[5,"dqcs_gate_targets",E,R[85],N,[[[R[75]]],[R[75]]]],[5,"dqcs_gate_has_controls",E,"Returns whether the specified gate has control qubits.",N,[[[R[75]]],[R[83]]]],[5,"dqcs_gate_controls",E,R[85],N,[[[R[75]]],[R[75]]]],[5,"dqcs_gate_has_measures",E,"Returns whether the specified gate measures any qubits.",N,[[[R[75]]],[R[83]]]],[5,"dqcs_gate_measures",E,R[85],N,[[[R[75]]],[R[75]]]],[5,"dqcs_gate_has_matrix",E,"Returns whether a unitary matrix is associated with this…",N,[[[R[75]]],[R[83]]]],[5,"dqcs_gate_matrix",E,"Returns a copy of the unitary matrix associated with this…",N,[[[R[75]]]]],[5,"dqcs_gate_matrix_len",E,"Returns the size of the gate matrix associated with this…",N,[[[R[75]]],[R[79]]]],[5,"dqcs_meas_new",E,"Constructs a new measurement object. > > `qubit` must be…",N,[[[R[86]],[R[84]]],[R[75]]]],[5,"dqcs_meas_qubit_get",E,"Returns the qubit reference associated with a measurement…",N,[[[R[75]]],[R[84]]]],[5,"dqcs_meas_qubit_set",E,"Sets the qubit reference associated with a measurement…",N,[[[R[75]],[R[84]]],[R[76]]]],[5,"dqcs_meas_value_get",E,"Returns the measurement value associated with a…",N,[[[R[75]]],[R[86]]]],[5,"dqcs_meas_value_set",E,"Sets the measurement value associated with a measurement…",N,[[[R[86]],[R[75]]],[R[76]]]],[5,"dqcs_mset_new",E,"Creates a new set of qubit measurement results. > >…",N,[[],[R[75]]]],[5,"dqcs_mset_len",E,"Returns the number of qubits measurements in the given…",N,[[[R[75]]],[R[79]]]],[5,"dqcs_mset_contains",E,"Returns whether the given qubit measurement set contains…",N,[[[R[75]],[R[84]]],[R[83]]]],[5,"dqcs_mset_set",E,"Adds a measurement result to a measurement result set. > >…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_mset_get",E,"Returns a copy of the measurement result for the given…",N,[[[R[75]],[R[84]]],[R[75]]]],[5,"dqcs_mset_take",E,"Returns the measurement result for the given qubit from a…",N,[[[R[75]],[R[84]]],[R[75]]]],[5,"dqcs_mset_remove",E,"Removes the measurement result for the given qubit from a…",N,[[[R[75]],[R[84]]],[R[76]]]],[5,"dqcs_mset_take_any",E,"Returns the measurement result for any of the qubits…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_log_raw",E,"Primitive API for sending a log message using the current…",N,[[["u32"],[R[87]]],[R[76]]]],[5,"dqcs_pcfg_new",E,R[89],N,[[[R[88]]],[R[75]]]],[5,"dqcs_pcfg_new_raw",E,R[89],N,[[[R[88]]],[R[75]]]],[5,"dqcs_pcfg_type",E,"Returns the type of the given plugin process configuration.",N,[[[R[75]]],[R[88]]]],[5,"dqcs_pcfg_name",E,"Returns the configured name for the given plugin process.…",N,[[[R[75]]]]],[5,"dqcs_pcfg_executable",E,"Returns the configured executable path for the given…",N,[[[R[75]]]]],[5,"dqcs_pcfg_script",E,"Returns the configured script path for the given plugin…",N,[[[R[75]]]]],[5,"dqcs_pcfg_init_cmd",E,R[92],N,[[[R[75]]],[R[76]]]],[5,"dqcs_pcfg_env_set",E,"Overrides an environment variable for the plugin process.…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_pcfg_env_unset",E,"Removes/unsets an environment variable for the plugin…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_pcfg_work_set",E,"Overrides the working directory for the plugin process.",N,[[[R[75]]],[R[76]]]],[5,"dqcs_pcfg_work_get",E,"Returns the configured working directory for the given…",N,[[[R[75]]]]],[5,"dqcs_pcfg_verbosity_set",E,R[93],N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_pcfg_verbosity_get",E,R[94],N,[[[R[75]]],[R[87]]]],[5,"dqcs_pcfg_tee",E,"Configures a plugin process to also output its log…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_pcfg_stdout_mode_set",E,"Configures the capture mode for the stdout stream of the…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_pcfg_stdout_mode_get",E,"Returns the configured stdout capture mode for the…",N,[[[R[75]]],[R[87]]]],[5,"dqcs_pcfg_stderr_mode_set",E,"Configures the capture mode for the stderr stream of the…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_pcfg_stderr_mode_get",E,"Returns the configured stderr capture mode for the…",N,[[[R[75]]],[R[87]]]],[5,"dqcs_pcfg_accept_timeout_set",E,"Configures the timeout for the plugin process to connect…",N,[[["f64"],[R[75]]],[R[76]]]],[5,"dqcs_pcfg_accept_timeout_get",E,R[90],N,[[[R[75]]],["f64"]]],[5,"dqcs_pcfg_shutdown_timeout_set",E,"Configures the timeout for the plugin process to shut down…",N,[[["f64"],[R[75]]],[R[76]]]],[5,"dqcs_pcfg_shutdown_timeout_get",E,R[90],N,[[[R[75]]],["f64"]]],[5,"dqcs_tcfg_new",E,R[91],N,[[[R[75]]],[R[75]]]],[5,"dqcs_tcfg_new_raw",E,R[91],N,[[[R[95]],[R[95]],[R[88]]],[R[75]]]],[5,"dqcs_tcfg_type",E,"Returns the type of the given plugin thread configuration.",N,[[[R[75]]],[R[88]]]],[5,"dqcs_tcfg_name",E,"Returns the configured name for the given plugin thread. >…",N,[[[R[75]]]]],[5,"dqcs_tcfg_init_cmd",E,R[92],N,[[[R[75]]],[R[76]]]],[5,"dqcs_tcfg_verbosity_set",E,R[93],N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_tcfg_verbosity_get",E,R[94],N,[[[R[75]]],[R[87]]]],[5,"dqcs_tcfg_tee",E,"Configures a plugin thread to also output its log messages…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_scfg_new",E,"Constructs an empty simulation configuration. > > Before…",N,[[],[R[75]]]],[5,"dqcs_scfg_push_plugin",E,"Appends a plugin to a simulation configuration. > > Both…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_scfg_seed_set",E,"Configures the random seed that the simulation should use.…",N,[[[R[75]],["u64"]],[R[76]]]],[5,"dqcs_scfg_seed_get",E,"Returns the configured random seed. > > This function will…",N,[[[R[75]]],["u64"]]],[5,"dqcs_scfg_stderr_verbosity_set",E,"Configures the stderr sink verbosity for a simulation. > >…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_scfg_stderr_verbosity_get",E,"Returns the configured stderr sink verbosity for a…",N,[[[R[75]]],[R[87]]]],[5,"dqcs_scfg_tee",E,"Configures DQCsim to also output its log messages to a…",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_scfg_log_callback",E,"Configures DQCsim to also output its log messages to…",N,[[[R[95]],[R[87]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_scfg_dqcsim_verbosity_set",E,"Configures the logging verbosity for DQCsim's own messages.",N,[[[R[75]],[R[87]]],[R[76]]]],[5,"dqcs_scfg_dqcsim_verbosity_get",E,"Returns the configured verbosity for DQCsim's own messages.",N,[[[R[75]]],[R[87]]]],[5,"dqcs_scfg_repro_path_style_set",E,"Sets the path style used when writing reproduction files.",N,[[[R[96]],[R[75]]],[R[76]]]],[5,"dqcs_scfg_repro_path_style_get",E,"Returns the path style used when writing reproduction files.",N,[[[R[75]]],[R[96]]]],[5,"dqcs_scfg_repro_disable",E,"Disables the reproduction logging system. > > Calling this…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_sim_new",E,"Constructs a DQCsim simulation. > > The provided handle is…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_sim_start",E,"Starts a program on the simulated accelerator. > > This is…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_sim_wait",E,"Waits for the simulated accelerator to finish its current…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_sim_send",E,"Sends a message to the simulated accelerator. > > This is…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_sim_recv",E,"Waits for the simulated accelerator to send a message to…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_sim_yield",E,"Yields to the simulator. > > The simulation runs until it…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_sim_arb",E,R[97],N,[[[R[75]]],[R[75]]]],[5,"dqcs_sim_arb_idx",E,R[97],N,[[[R[75]],[R[79]]],[R[75]]]],[5,"dqcs_sim_get_name",E,R[98],N,[[[R[75]]]]],[5,"dqcs_sim_get_name_idx",E,R[98],N,[[[R[75]],[R[79]]]]],[5,"dqcs_sim_get_author",E,"Queries the author of a plugin, referenced by instance…",N,[[[R[75]]]]],[5,"dqcs_sim_get_author_idx",E,"Queries the author of a plugin, referenced by index. > >…",N,[[[R[75]],[R[79]]]]],[5,"dqcs_sim_get_version",E,"Queries the version of a plugin, referenced by instance…",N,[[[R[75]]]]],[5,"dqcs_sim_get_version_idx",E,"Queries the version of a plugin, referenced by index. > >…",N,[[[R[75]],[R[79]]]]],[5,"dqcs_sim_write_reproduction_file",E,"Writes a reproduction file for the simulation so far.",N,[[[R[75]]],[R[76]]]],[5,"dqcs_pdef_new",E,"Creates a new `PluginDefinition` object. > > Plugin…",N,[[[R[88]]],[R[75]]]],[5,"dqcs_pdef_type",E,"Returns the plugin type for the given plugin definition…",N,[[[R[75]]],[R[88]]]],[5,"dqcs_pdef_name",E,"Returns the plugin name for the given plugin definition…",N,[[[R[75]]]]],[5,"dqcs_pdef_author",E,"Returns the plugin author for the given plugin definition…",N,[[[R[75]]]]],[5,"dqcs_pdef_version",E,"Returns the plugin version for the given plugin definition…",N,[[[R[75]]]]],[5,"dqcs_pdef_set_initialize_cb",E,"Sets the user logic initialization callback. > > This is…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_drop_cb",E,"Sets the user logic drop/cleanup callback. > > This is…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_run_cb",E,"Sets the run callback for frontends. > > This is called in…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_allocate_cb",E,"Sets the qubit allocation callback for operators and…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_free_cb",E,"Sets the qubit deallocation callback for operators and…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_gate_cb",E,"Sets the gate execution callback for operators and…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_modify_measurement_cb",E,"Sets the measurement modification callback for operators.…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_advance_cb",E,"Sets the callback for advancing time for operators and…",N,[[[R[95]],[R[75]],[R[95]]],[R[76]]]],[5,"dqcs_pdef_set_upstream_arb_cb",E,"Sets the callback function for handling an arb from…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_pdef_set_host_arb_cb",E,"Sets the callback function function for handling an arb…",N,[[[R[95]],[R[95]],[R[75]]],[R[76]]]],[5,"dqcs_plugin_run",E,"Executes a plugin in the current thread. > > `pdef` must…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_plugin_start",E,"Executes a plugin in a worker thread. > > This function…",N,[[[R[75]]],[R[75]]]],[5,"dqcs_plugin_wait",E,"Waits for a plugin worker thread to finish executing. > >…",N,[[[R[75]]],[R[76]]]],[5,"dqcs_plugin_send",E,"Sends a message to the host. > > It is only legal to call…",N,[[[R[99]],[R[75]]],[R[76]]]],[5,"dqcs_plugin_recv",E,"Waits for a message from the host. > > It is only legal to…",N,[[[R[99]]],[R[75]]]],[5,"dqcs_plugin_allocate",E,"Allocate the given number of downstream qubits. > >…",N,[[[R[99]],["usize"],[R[75]]],[R[75]]]],[5,"dqcs_plugin_free",E,"Free the given downstream qubits. > > Backend plugins are…",N,[[[R[99]],[R[75]]],[R[76]]]],[5,"dqcs_plugin_gate",E,"Tells the downstream plugin to execute a gate. > > Backend…",N,[[[R[99]],[R[75]]],[R[76]]]],[5,"dqcs_plugin_get_measurement",E,R[201],N,[[[R[99]],[R[84]]],[R[75]]]],[5,"dqcs_plugin_get_cycles_since_measure",E,R[202],N,[[[R[99]],[R[84]]],[R[100]]]],[5,"dqcs_plugin_get_cycles_between_measures",E,R[203],N,[[[R[99]],[R[84]]],[R[100]]]],[5,"dqcs_plugin_advance",E,R[204],N,[[[R[99]],[R[100]]],[R[100]]]],[5,"dqcs_plugin_get_cycle",E,"Returns the current value of the downstream cycle counter.…",N,[[[R[99]]],[R[100]]]],[5,"dqcs_plugin_arb",E,"Sends an arbitrary command downstream. > > Backend plugins…",N,[[[R[99]],[R[75]]],[R[75]]]],[5,"dqcs_plugin_random_u64",E,R[205],N,[[[R[99]]],[R[75]]]],[5,"dqcs_plugin_random_f64",E,R[206],N,[[[R[99]]],["c_double"]]],[11,"resolve",E,E,57,[[],[[R[3],[R[101]]],[R[101]]]]],[11,"into_capture_mode",E,E,52,[[],[[R[3],[R[102]]],[R[102]]]]],[11,"into_loglevel",E,E,52,[[],[[R[3],[R[14]]],[R[14]]]]],[11,"into_loglevel_filter",E,E,52,[[],[[R[3],[R[103]]],[R[103]]]]],[6,R[75],E,"Type for a handle. > > Handles are like pointers into…",N,N],[6,R[84],E,"Type for a qubit reference. > > Qubit references are…",N,N],[6,R[100],E,"Type for a simulation cycle timestamp. > > Timestamps…",N,N],[14,"log","dqcsim",E,N,N],[14,"fatal",E,E,N,N],[14,"error",E,E,N,N],[14,"warn",E,E,N,N],[14,"note",E,E,N,N],[14,"info",E,E,N,N],[14,"debug",E,E,N,N],[14,"trace",E,E,N,N],[14,"checked_rpc",E,E,N,N],[11,"into",R[104],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[105],E,E,58,[[["self"]],["string"]]],[11,R[108],E,E,58,[[[U]],[R[3]]]],[11,R[109],E,E,58,[[],[R[3]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[106],E,E,58,[[["self"]],[T]]],[11,R[113],E,E,58,[[["self"]],["typeid"]]],[11,"vzip",E,E,58,[[],["v"]]],[11,"as_fail",E,E,58,[[["self"]],["fail"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[105],E,E,4,[[["self"]],["string"]]],[11,R[108],E,E,4,[[[U]],[R[3]]]],[11,R[109],E,E,4,[[],[R[3]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[106],E,E,4,[[["self"]],[T]]],[11,R[113],E,E,4,[[["self"]],["typeid"]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"as_fail",E,E,4,[[["self"]],["fail"]]],[11,"into",R[107],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[108],E,E,5,[[[U]],[R[3]]]],[11,R[109],E,E,5,[[],[R[3]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[106],E,E,5,[[["self"]],[T]]],[11,R[113],E,E,5,[[["self"]],["typeid"]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[12],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[110],E,E,59,[[],["i"]]],[11,R[112],E,E,59,[[["self"]],[T]]],[11,R[111],E,E,59,[[["self"],[T]]]],[11,R[108],E,E,59,[[[U]],[R[3]]]],[11,R[109],E,E,59,[[],[R[3]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[106],E,E,59,[[["self"]],[T]]],[11,R[113],E,E,59,[[["self"]],["typeid"]]],[11,"vzip",E,E,59,[[],["v"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[110],E,E,60,[[],["i"]]],[11,R[112],E,E,60,[[["self"]],[T]]],[11,R[111],E,E,60,[[["self"],[T]]]],[11,R[108],E,E,60,[[[U]],[R[3]]]],[11,R[109],E,E,60,[[],[R[3]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[106],E,E,60,[[["self"]],[T]]],[11,R[113],E,E,60,[[["self"]],["typeid"]]],[11,"vzip",E,E,60,[[],["v"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[112],E,E,61,[[["self"]],[T]]],[11,R[111],E,E,61,[[["self"],[T]]]],[11,R[108],E,E,61,[[[U]],[R[3]]]],[11,R[109],E,E,61,[[],[R[3]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[106],E,E,61,[[["self"]],[T]]],[11,R[113],E,E,61,[[["self"]],["typeid"]]],[11,"vzip",E,E,61,[[],["v"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[112],E,E,62,[[["self"]],[T]]],[11,R[111],E,E,62,[[["self"],[T]]]],[11,R[105],E,E,62,[[["self"]],["string"]]],[11,R[108],E,E,62,[[[U]],[R[3]]]],[11,R[109],E,E,62,[[],[R[3]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[106],E,E,62,[[["self"]],[T]]],[11,R[113],E,E,62,[[["self"]],["typeid"]]],[11,"vzip",E,E,62,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[112],E,E,6,[[["self"]],[T]]],[11,R[111],E,E,6,[[["self"],[T]]]],[11,R[105],E,E,6,[[["self"]],["string"]]],[11,R[108],E,E,6,[[[U]],[R[3]]]],[11,R[109],E,E,6,[[],[R[3]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[106],E,E,6,[[["self"]],[T]]],[11,R[113],E,E,6,[[["self"]],["typeid"]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[112],E,E,7,[[["self"]],[T]]],[11,R[111],E,E,7,[[["self"],[T]]]],[11,R[105],E,E,7,[[["self"]],["string"]]],[11,R[108],E,E,7,[[[U]],[R[3]]]],[11,R[109],E,E,7,[[],[R[3]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[106],E,E,7,[[["self"]],[T]]],[11,R[113],E,E,7,[[["self"]],["typeid"]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[114],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[108],E,E,8,[[[U]],[R[3]]]],[11,R[109],E,E,8,[[],[R[3]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[106],E,E,8,[[["self"]],[T]]],[11,R[113],E,E,8,[[["self"]],["typeid"]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[115],E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[108],E,E,63,[[[U]],[R[3]]]],[11,R[109],E,E,63,[[],[R[3]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[106],E,E,63,[[["self"]],[T]]],[11,R[113],E,E,63,[[["self"]],["typeid"]]],[11,"vzip",E,E,63,[[],["v"]]],[11,"into",R[116],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[112],E,E,9,[[["self"]],[T]]],[11,R[111],E,E,9,[[["self"],[T]]]],[11,R[105],E,E,9,[[["self"]],["string"]]],[11,R[108],E,E,9,[[[U]],[R[3]]]],[11,R[109],E,E,9,[[],[R[3]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[106],E,E,9,[[["self"]],[T]]],[11,R[113],E,E,9,[[["self"]],["typeid"]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[108],E,E,10,[[[U]],[R[3]]]],[11,R[109],E,E,10,[[],[R[3]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[106],E,E,10,[[["self"]],[T]]],[11,R[113],E,E,10,[[["self"]],["typeid"]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[105],E,E,11,[[["self"]],["string"]]],[11,R[108],E,E,11,[[[U]],[R[3]]]],[11,R[109],E,E,11,[[],[R[3]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[106],E,E,11,[[["self"]],[T]]],[11,R[113],E,E,11,[[["self"]],["typeid"]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"as_fail",E,E,11,[[["self"]],["fail"]]],[11,"into",R[117],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[108],E,E,64,[[[U]],[R[3]]]],[11,R[109],E,E,64,[[],[R[3]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[106],E,E,64,[[["self"]],[T]]],[11,R[113],E,E,64,[[["self"]],["typeid"]]],[11,"vzip",E,E,64,[[],["v"]]],[11,"into",R[118],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[108],E,E,14,[[[U]],[R[3]]]],[11,R[109],E,E,14,[[],[R[3]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[106],E,E,14,[[["self"]],[T]]],[11,R[113],E,E,14,[[["self"]],["typeid"]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[108],E,E,65,[[[U]],[R[3]]]],[11,R[109],E,E,65,[[],[R[3]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[106],E,E,65,[[["self"]],[T]]],[11,R[113],E,E,65,[[["self"]],["typeid"]]],[11,"vzip",E,E,65,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[108],E,E,15,[[[U]],[R[3]]]],[11,R[109],E,E,15,[[],[R[3]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[106],E,E,15,[[["self"]],[T]]],[11,R[113],E,E,15,[[["self"]],["typeid"]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[108],E,E,13,[[[U]],[R[3]]]],[11,R[109],E,E,13,[[],[R[3]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[106],E,E,13,[[["self"]],[T]]],[11,R[113],E,E,13,[[["self"]],["typeid"]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[108],E,E,18,[[[U]],[R[3]]]],[11,R[109],E,E,18,[[],[R[3]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[106],E,E,18,[[["self"]],[T]]],[11,R[113],E,E,18,[[["self"]],["typeid"]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[108],E,E,17,[[[U]],[R[3]]]],[11,R[109],E,E,17,[[],[R[3]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[106],E,E,17,[[["self"]],[T]]],[11,R[113],E,E,17,[[["self"]],["typeid"]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[108],E,E,16,[[[U]],[R[3]]]],[11,R[109],E,E,16,[[],[R[3]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[106],E,E,16,[[["self"]],[T]]],[11,R[113],E,E,16,[[["self"]],["typeid"]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[108],E,E,19,[[[U]],[R[3]]]],[11,R[109],E,E,19,[[],[R[3]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[106],E,E,19,[[["self"]],[T]]],[11,R[113],E,E,19,[[["self"]],["typeid"]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[108],E,E,20,[[[U]],[R[3]]]],[11,R[109],E,E,20,[[],[R[3]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[106],E,E,20,[[["self"]],[T]]],[11,R[113],E,E,20,[[["self"]],["typeid"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[108],E,E,21,[[[U]],[R[3]]]],[11,R[109],E,E,21,[[],[R[3]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[106],E,E,21,[[["self"]],[T]]],[11,R[113],E,E,21,[[["self"]],["typeid"]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[108],E,E,22,[[[U]],[R[3]]]],[11,R[109],E,E,22,[[],[R[3]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[106],E,E,22,[[["self"]],[T]]],[11,R[113],E,E,22,[[["self"]],["typeid"]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",R[119],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[112],E,E,66,[[["self"]],[T]]],[11,R[111],E,E,66,[[["self"],[T]]]],[11,R[105],E,E,66,[[["self"]],["string"]]],[11,R[108],E,E,66,[[[U]],[R[3]]]],[11,R[109],E,E,66,[[],[R[3]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[106],E,E,66,[[["self"]],[T]]],[11,R[113],E,E,66,[[["self"]],["typeid"]]],[11,"vzip",E,E,66,[[],["v"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[108],E,E,67,[[[U]],[R[3]]]],[11,R[109],E,E,67,[[],[R[3]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[106],E,E,67,[[["self"]],[T]]],[11,R[113],E,E,67,[[["self"]],["typeid"]]],[11,"vzip",E,E,67,[[],["v"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[112],E,E,68,[[["self"]],[T]]],[11,R[111],E,E,68,[[["self"],[T]]]],[11,R[105],E,E,68,[[["self"]],["string"]]],[11,R[108],E,E,68,[[[U]],[R[3]]]],[11,R[109],E,E,68,[[],[R[3]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[106],E,E,68,[[["self"]],[T]]],[11,R[113],E,E,68,[[["self"]],["typeid"]]],[11,"vzip",E,E,68,[[],["v"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[112],E,E,69,[[["self"]],[T]]],[11,R[111],E,E,69,[[["self"],[T]]]],[11,R[105],E,E,69,[[["self"]],["string"]]],[11,R[108],E,E,69,[[[U]],[R[3]]]],[11,R[109],E,E,69,[[],[R[3]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[106],E,E,69,[[["self"]],[T]]],[11,R[113],E,E,69,[[["self"]],["typeid"]]],[11,"vzip",E,E,69,[[],["v"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[108],E,E,70,[[[U]],[R[3]]]],[11,R[109],E,E,70,[[],[R[3]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[106],E,E,70,[[["self"]],[T]]],[11,R[113],E,E,70,[[["self"]],["typeid"]]],[11,"vzip",E,E,70,[[],["v"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[112],E,E,71,[[["self"]],[T]]],[11,R[111],E,E,71,[[["self"],[T]]]],[11,R[105],E,E,71,[[["self"]],["string"]]],[11,R[108],E,E,71,[[[U]],[R[3]]]],[11,R[109],E,E,71,[[],[R[3]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[106],E,E,71,[[["self"]],[T]]],[11,R[113],E,E,71,[[["self"]],["typeid"]]],[11,"vzip",E,E,71,[[],["v"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[112],E,E,72,[[["self"]],[T]]],[11,R[111],E,E,72,[[["self"],[T]]]],[11,R[105],E,E,72,[[["self"]],["string"]]],[11,R[108],E,E,72,[[[U]],[R[3]]]],[11,R[109],E,E,72,[[],[R[3]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[106],E,E,72,[[["self"]],[T]]],[11,R[113],E,E,72,[[["self"]],["typeid"]]],[11,"vzip",E,E,72,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[112],E,E,23,[[["self"]],[T]]],[11,R[111],E,E,23,[[["self"],[T]]]],[11,R[108],E,E,23,[[[U]],[R[3]]]],[11,R[109],E,E,23,[[],[R[3]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[106],E,E,23,[[["self"]],[T]]],[11,R[113],E,E,23,[[["self"]],["typeid"]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[112],E,E,24,[[["self"]],[T]]],[11,R[111],E,E,24,[[["self"],[T]]]],[11,R[108],E,E,24,[[[U]],[R[3]]]],[11,R[109],E,E,24,[[],[R[3]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[106],E,E,24,[[["self"]],[T]]],[11,R[113],E,E,24,[[["self"]],["typeid"]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[112],E,E,25,[[["self"]],[T]]],[11,R[111],E,E,25,[[["self"],[T]]]],[11,R[105],E,E,25,[[["self"]],["string"]]],[11,R[108],E,E,25,[[[U]],[R[3]]]],[11,R[109],E,E,25,[[],[R[3]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[106],E,E,25,[[["self"]],[T]]],[11,R[113],E,E,25,[[["self"]],["typeid"]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[112],E,E,26,[[["self"]],[T]]],[11,R[111],E,E,26,[[["self"],[T]]]],[11,R[108],E,E,26,[[[U]],[R[3]]]],[11,R[109],E,E,26,[[],[R[3]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[106],E,E,26,[[["self"]],[T]]],[11,R[113],E,E,26,[[["self"]],["typeid"]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[112],E,E,73,[[["self"]],[T]]],[11,R[111],E,E,73,[[["self"],[T]]]],[11,R[105],E,E,73,[[["self"]],["string"]]],[11,R[108],E,E,73,[[[U]],[R[3]]]],[11,R[109],E,E,73,[[],[R[3]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[106],E,E,73,[[["self"]],[T]]],[11,R[113],E,E,73,[[["self"]],["typeid"]]],[11,"vzip",E,E,73,[[],["v"]]],[11,"into",R[29],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[112],E,E,36,[[["self"]],[T]]],[11,R[111],E,E,36,[[["self"],[T]]]],[11,R[105],E,E,36,[[["self"]],["string"]]],[11,R[108],E,E,36,[[[U]],[R[3]]]],[11,R[109],E,E,36,[[],[R[3]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[106],E,E,36,[[["self"]],[T]]],[11,R[113],E,E,36,[[["self"]],["typeid"]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[112],E,E,37,[[["self"]],[T]]],[11,R[111],E,E,37,[[["self"],[T]]]],[11,R[108],E,E,37,[[[U]],[R[3]]]],[11,R[109],E,E,37,[[],[R[3]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[106],E,E,37,[[["self"]],[T]]],[11,R[113],E,E,37,[[["self"]],["typeid"]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[112],E,E,28,[[["self"]],[T]]],[11,R[111],E,E,28,[[["self"],[T]]]],[11,R[105],E,E,28,[[["self"]],["string"]]],[11,R[108],E,E,28,[[[U]],[R[3]]]],[11,R[109],E,E,28,[[],[R[3]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[106],E,E,28,[[["self"]],[T]]],[11,R[113],E,E,28,[[["self"]],["typeid"]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[112],E,E,38,[[["self"]],[T]]],[11,R[111],E,E,38,[[["self"],[T]]]],[11,R[105],E,E,38,[[["self"]],["string"]]],[11,R[108],E,E,38,[[[U]],[R[3]]]],[11,R[109],E,E,38,[[],[R[3]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[106],E,E,38,[[["self"]],[T]]],[11,R[113],E,E,38,[[["self"]],["typeid"]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[112],E,E,29,[[["self"]],[T]]],[11,R[111],E,E,29,[[["self"],[T]]]],[11,R[108],E,E,29,[[[U]],[R[3]]]],[11,R[109],E,E,29,[[],[R[3]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[106],E,E,29,[[["self"]],[T]]],[11,R[113],E,E,29,[[["self"]],["typeid"]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[112],E,E,33,[[["self"]],[T]]],[11,R[111],E,E,33,[[["self"],[T]]]],[11,R[108],E,E,33,[[[U]],[R[3]]]],[11,R[109],E,E,33,[[],[R[3]]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[106],E,E,33,[[["self"]],[T]]],[11,R[113],E,E,33,[[["self"]],["typeid"]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[112],E,E,31,[[["self"]],[T]]],[11,R[111],E,E,31,[[["self"],[T]]]],[11,R[108],E,E,31,[[[U]],[R[3]]]],[11,R[109],E,E,31,[[],[R[3]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[106],E,E,31,[[["self"]],[T]]],[11,R[113],E,E,31,[[["self"]],["typeid"]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[112],E,E,32,[[["self"]],[T]]],[11,R[111],E,E,32,[[["self"],[T]]]],[11,R[108],E,E,32,[[[U]],[R[3]]]],[11,R[109],E,E,32,[[],[R[3]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[106],E,E,32,[[["self"]],[T]]],[11,R[113],E,E,32,[[["self"]],["typeid"]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[112],E,E,30,[[["self"]],[T]]],[11,R[111],E,E,30,[[["self"],[T]]]],[11,R[108],E,E,30,[[[U]],[R[3]]]],[11,R[109],E,E,30,[[],[R[3]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[106],E,E,30,[[["self"]],[T]]],[11,R[113],E,E,30,[[["self"]],["typeid"]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[108],E,E,34,[[[U]],[R[3]]]],[11,R[109],E,E,34,[[],[R[3]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[106],E,E,34,[[["self"]],[T]]],[11,R[113],E,E,34,[[["self"]],["typeid"]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[112],E,E,39,[[["self"]],[T]]],[11,R[111],E,E,39,[[["self"],[T]]]],[11,R[105],E,E,39,[[["self"]],["string"]]],[11,R[108],E,E,39,[[[U]],[R[3]]]],[11,R[109],E,E,39,[[],[R[3]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[106],E,E,39,[[["self"]],[T]]],[11,R[113],E,E,39,[[["self"]],["typeid"]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[108],E,E,35,[[[U]],[R[3]]]],[11,R[109],E,E,35,[[],[R[3]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[106],E,E,35,[[["self"]],[T]]],[11,R[113],E,E,35,[[["self"]],["typeid"]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",R[120],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[108],E,E,74,[[[U]],[R[3]]]],[11,R[109],E,E,74,[[],[R[3]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[106],E,E,74,[[["self"]],[T]]],[11,R[113],E,E,74,[[["self"]],["typeid"]]],[11,"vzip",E,E,74,[[],["v"]]],[11,"into",R[121],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[108],E,E,75,[[[U]],[R[3]]]],[11,R[109],E,E,75,[[],[R[3]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[106],E,E,75,[[["self"]],[T]]],[11,R[113],E,E,75,[[["self"]],["typeid"]]],[11,"vzip",E,E,75,[[],["v"]]],[11,"into",R[122],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[112],E,E,42,[[["self"]],[T]]],[11,R[111],E,E,42,[[["self"],[T]]]],[11,R[108],E,E,42,[[[U]],[R[3]]]],[11,R[109],E,E,42,[[],[R[3]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[106],E,E,42,[[["self"]],[T]]],[11,R[113],E,E,42,[[["self"]],["typeid"]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[108],E,E,43,[[[U]],[R[3]]]],[11,R[109],E,E,43,[[],[R[3]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[106],E,E,43,[[["self"]],[T]]],[11,R[113],E,E,43,[[["self"]],["typeid"]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[112],E,E,44,[[["self"]],[T]]],[11,R[111],E,E,44,[[["self"],[T]]]],[11,R[108],E,E,44,[[[U]],[R[3]]]],[11,R[109],E,E,44,[[],[R[3]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[106],E,E,44,[[["self"]],[T]]],[11,R[113],E,E,44,[[["self"]],["typeid"]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[112],E,E,45,[[["self"]],[T]]],[11,R[111],E,E,45,[[["self"],[T]]]],[11,R[105],E,E,45,[[["self"]],["string"]]],[11,R[108],E,E,45,[[[U]],[R[3]]]],[11,R[109],E,E,45,[[],[R[3]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[106],E,E,45,[[["self"]],[T]]],[11,R[113],E,E,45,[[["self"]],["typeid"]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",R[123],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[108],E,E,76,[[[U]],[R[3]]]],[11,R[109],E,E,76,[[],[R[3]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[106],E,E,76,[[["self"]],[T]]],[11,R[113],E,E,76,[[["self"]],["typeid"]]],[11,"vzip",E,E,76,[[],["v"]]],[11,"into",R[124],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[108],E,E,46,[[[U]],[R[3]]]],[11,R[109],E,E,46,[[],[R[3]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[106],E,E,46,[[["self"]],[T]]],[11,R[113],E,E,46,[[["self"]],["typeid"]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",R[125],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[108],E,E,77,[[[U]],[R[3]]]],[11,R[109],E,E,77,[[],[R[3]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[106],E,E,77,[[["self"]],[T]]],[11,R[113],E,E,77,[[["self"]],["typeid"]]],[11,"vzip",E,E,77,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[108],E,E,47,[[[U]],[R[3]]]],[11,R[109],E,E,47,[[],[R[3]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[106],E,E,47,[[["self"]],[T]]],[11,R[113],E,E,47,[[["self"]],["typeid"]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[108],E,E,48,[[[U]],[R[3]]]],[11,R[109],E,E,48,[[],[R[3]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[106],E,E,48,[[["self"]],[T]]],[11,R[113],E,E,48,[[["self"]],["typeid"]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",R[126],E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[108],E,E,49,[[[U]],[R[3]]]],[11,R[109],E,E,49,[[],[R[3]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[106],E,E,49,[[["self"]],[T]]],[11,R[113],E,E,49,[[["self"]],["typeid"]]],[11,"vzip",E,E,49,[[],["v"]]],[11,"into",R[127],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[108],E,E,78,[[[U]],[R[3]]]],[11,R[109],E,E,78,[[],[R[3]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[106],E,E,78,[[["self"]],[T]]],[11,R[113],E,E,78,[[["self"]],["typeid"]]],[11,"vzip",E,E,78,[[],["v"]]],[11,"into",R[128],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[112],E,E,57,[[["self"]],[T]]],[11,R[111],E,E,57,[[["self"],[T]]]],[11,R[108],E,E,57,[[[U]],[R[3]]]],[11,R[109],E,E,57,[[],[R[3]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[106],E,E,57,[[["self"]],[T]]],[11,R[113],E,E,57,[[["self"]],["typeid"]]],[11,"vzip",E,E,57,[[],["v"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[112],E,E,50,[[["self"]],[T]]],[11,R[111],E,E,50,[[["self"],[T]]]],[11,R[108],E,E,50,[[[U]],[R[3]]]],[11,R[109],E,E,50,[[],[R[3]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[106],E,E,50,[[["self"]],[T]]],[11,R[113],E,E,50,[[["self"]],["typeid"]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[112],E,E,51,[[["self"]],[T]]],[11,R[111],E,E,51,[[["self"],[T]]]],[11,R[108],E,E,51,[[[U]],[R[3]]]],[11,R[109],E,E,51,[[],[R[3]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[106],E,E,51,[[["self"]],[T]]],[11,R[113],E,E,51,[[["self"]],["typeid"]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[112],E,E,52,[[["self"]],[T]]],[11,R[111],E,E,52,[[["self"],[T]]]],[11,R[108],E,E,52,[[[U]],[R[3]]]],[11,R[109],E,E,52,[[],[R[3]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[106],E,E,52,[[["self"]],[T]]],[11,R[113],E,E,52,[[["self"]],["typeid"]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[112],E,E,53,[[["self"]],[T]]],[11,R[111],E,E,53,[[["self"],[T]]]],[11,R[108],E,E,53,[[[U]],[R[3]]]],[11,R[109],E,E,53,[[],[R[3]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[106],E,E,53,[[["self"]],[T]]],[11,R[113],E,E,53,[[["self"]],["typeid"]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[112],E,E,54,[[["self"]],[T]]],[11,R[111],E,E,54,[[["self"],[T]]]],[11,R[108],E,E,54,[[[U]],[R[3]]]],[11,R[109],E,E,54,[[],[R[3]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[106],E,E,54,[[["self"]],[T]]],[11,R[113],E,E,54,[[["self"]],["typeid"]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[112],E,E,55,[[["self"]],[T]]],[11,R[111],E,E,55,[[["self"],[T]]]],[11,R[108],E,E,55,[[[U]],[R[3]]]],[11,R[109],E,E,55,[[],[R[3]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[106],E,E,55,[[["self"]],[T]]],[11,R[113],E,E,55,[[["self"]],["typeid"]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[112],E,E,56,[[["self"]],[T]]],[11,R[111],E,E,56,[[["self"],[T]]]],[11,R[108],E,E,56,[[[U]],[R[3]]]],[11,R[109],E,E,56,[[],[R[3]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[106],E,E,56,[[["self"]],[T]]],[11,R[113],E,E,56,[[["self"]],["typeid"]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"name",R[114],E,8,[[["self"]],["str"]]],[11,"enabled",E,E,8,[[[R[14]],["self"]],["bool"]]],[11,"log",E,E,8,[[["self"],[R[13]]]]],[11,"name",R[115],E,63,[[["self"]],["str"]]],[11,"enabled",E,E,63,[[[R[14]],["self"]],["bool"]]],[11,"log",E,E,63,[[["self"],[R[13]]]]],[11,"name",R[116],E,10,[[["self"]],["str"]]],[11,"enabled",E,E,10,[[[R[14]],["self"]],["bool"]]],[11,"log",E,E,10,[[["self"],[R[13]]]]],[11,"start",R[123],R[129],76,[[["self"]],[R[3]]]],[11,"wait",E,R[130],76,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,"send",E,R[131],76,[[["self"]],[R[3]]]],[11,"recv",E,R[132],76,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,R[133],R[29],E,30,[[["box"]],[["box",["plugin"]],["plugin"]]]],[11,R[134],E,E,30,[[["self"]],[R[35]]]],[11,R[139],E,E,30,[[["self"]],[R[34]]]],[11,R[135],E,E,30,[[["self"],[R[136]]],[[R[3],[R[31]]],[R[31]]]]],[11,R[137],E,E,30,[[["self"],[R[103]]]]],[11,R[138],E,E,30,[[["self"],["string"]]]],[11,R[133],E,E,34,[[["box"]],[["box",["plugin"]],["plugin"]]]],[11,R[134],E,E,34,[[["self"]],[R[35]]]],[11,R[139],E,E,34,[[["self"]],[R[34]]]],[11,R[135],E,E,34,[[["self"],[R[136]]],[[R[3],[R[31]]],[R[31]]]]],[11,R[137],E,E,34,[[["self"],[R[103]]]]],[11,R[138],E,E,34,[[["self"],["string"]]]],[11,"spawn",R[120],"Spawn the child process based on the plugin configuration.…",74,[[[R[140]],["self"]],[R[3]]]],[11,R[25],E,E,74,[[["self"]],[R[34]]]],[11,R[26],E,E,74,[[["self"]],[["arbcmd"],["vec",["arbcmd"]]]]],[11,R[27],E,E,74,[[["self"]],[R[35]]]],[11,"rpc",E,E,74,[[["self"],[R[141]]],[[R[3],[R[36]]],[R[36]]]]],[11,"spawn",R[121],E,75,[[[R[140]],["self"]],[R[3]]]],[11,"rpc",E,E,75,[[["self"],[R[141]]],[[R[3],[R[36]]],[R[36]]]]],[11,R[25],E,E,75,[[["self"]],[R[34]]]],[11,R[26],E,E,75,[[["self"]],[["arbcmd"],["vec",["arbcmd"]]]]],[11,R[27],E,E,75,[[["self"]],[R[35]]]],[11,"drop",R[117],E,64,[[["self"]]]],[11,"drop",R[120],E,74,[[["self"]]]],[11,"drop",R[121],E,75,[[["self"]]]],[11,"drop",R[123],E,76,[[["self"]]]],[11,"drop",R[124],E,46,[[["self"]]]],[11,"drop",R[125],E,77,[[["self"]]]],[11,"into",R[107],E,5,[[],["gate"]]],[11,"into",R[12],E,6,[[],["color"]]],[11,"into",R[119],E,72,[[],[R[141]]]],[11,"into",R[118],E,14,[[],[R[141]]]],[11,"into",E,E,65,[[],[R[141]]]],[11,"into",E,E,15,[[],[R[141]]]],[11,"into",E,E,13,[[],[R[141]]]],[11,"into",R[119],E,68,[[],["u64"]]],[11,"into",E,E,68,[[],["i64"]]],[11,"into",E,E,69,[[],["string"]]],[11,"into",E,E,72,[[],[R[18]]]],[11,"into",E,E,25,[[],[[R[95],["bool"]],["bool"]]]],[11,"into",R[29],E,37,[[],["stdio"]]],[11,"into",E,"Returns the embedded seed.",28,[[],["u64"]]],[11,"into",E,E,30,[[],[[R[142]],["box",[R[142]]]]]],[11,"into",E,E,34,[[],[[R[142]],["box",[R[142]]]]]],[11,"into",R[128],"Convert the FFI representation of a plugin state back to a…",57,[[],[R[101]]]],[11,"into",E,E,51,[[],[[R[34]],[R[3],[R[34]]]]]],[11,"into",E,E,52,[[],[[R[3],[R[102]]],[R[102]]]]],[11,"into",E,E,55,[[],[[R[95],[R[143]]],[R[143]]]]],[11,"into",E,E,56,[[],[[R[95],[R[136]]],[R[136]]]]],[11,"from",R[104],E,58,[[[R[144]]],["error"]]],[11,"from",E,E,58,[[["string"],[R[6],["string"]]],["error"]]],[11,"from",E,E,58,[[[R[6],[R[144]]],[R[144]]],["error"]]],[11,"from",E,E,58,[[["error"]],["error"]]],[11,"from",E,E,58,[[["error"]],["error"]]],[11,"from",E,E,58,[[["senderror"]],["error"]]],[11,"from",E,E,58,[[["error"]],["error"]]],[11,"from",E,E,58,[[["parseerror"]],["error"]]],[11,"from",E,E,58,[[["error"]],["error"]]],[11,"from",E,E,58,[[["error"]],["error"]]],[11,"from",E,E,58,[[["utf8error"]],["error"]]],[11,"from",E,E,58,[[["fromutf8error"]],["error"]]],[11,"from",E,E,58,[[["nulerror"]],["error"]]],[11,"from",E,E,58,[[["recverror"]],["error"]]],[11,"from",R[12],E,7,[[[R[14]]],[R[103]]]],[11,"from",R[119],E,25,[[[R[95],["bool"]],["bool"]],[R[143]]]],[11,"from",E,E,25,[[["bool"]],[R[143]]]],[11,"from",R[29],"Turns a string into a seed. The string is parsed as a u64…",28,[[["str"]],["self"]]],[11,"from",E,E,29,[[[R[147]]],[R[35]]]],[11,"from",R[128],"Convert a plugin state reference to its FFI representation.",57,[[[R[101]]],[R[99]]]],[11,"from",E,E,51,[[[R[34]]],["self"]]],[11,"from",E,E,52,[[[R[102]]],["self"]]],[11,"from",E,E,52,[[[R[14]]],["self"]]],[11,"from",E,E,52,[[[R[103]]],["self"]]],[11,"from",E,E,54,[[["bool"]],["self"]]],[11,"from",E,E,55,[[[R[143]]],[R[86]]]],[11,"from",E,E,56,[[[R[136]]],[R[96]]]],[11,"next",R[12],E,59,[[["self"]],[R[95]]]],[11,R[145],E,E,59,[[["self"]]]],[11,"nth",E,E,59,[[["self"],["usize"]],[R[95]]]],[11,"next",E,E,60,[[["self"]],[R[95]]]],[11,R[145],E,E,60,[[["self"]]]],[11,"nth",E,E,60,[[["self"],["usize"]],[R[95]]]],[11,R[146],E,E,59,[[["self"]],[R[95]]]],[11,"nth_back",E,E,59,[[["self"],["usize"]],[R[95]]]],[11,R[146],E,E,60,[[["self"]],[R[95]]]],[11,"nth_back",E,E,60,[[["self"],["usize"]],[R[95]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,"clone",R[116],E,9,[[["self"]],[R[153]]]],[11,"clone",R[12],E,6,[[["self"]],[R[14]]]],[11,"clone",E,E,59,[[["self"]],[R[178]]]],[11,"clone",E,E,7,[[["self"]],[R[103]]]],[11,"clone",E,E,60,[[["self"]],[R[179]]]],[11,"clone",E,E,61,[[["self"]],["metadata"]]],[11,"clone",E,E,62,[[["self"]],[R[13]]]],[11,"clone",R[119],E,66,[[["self"]],[R[161]]]],[11,"clone",E,E,68,[[["self"]],["cycle"]]],[11,"clone",E,E,69,[[["self"]],[R[8]]]],[11,"clone",E,E,71,[[["self"]],[R[18]]]],[11,"clone",E,E,72,[[["self"]],["arbcmd"]]],[11,"clone",E,E,23,[[["self"]],["gate"]]],[11,"clone",E,E,25,[[["self"]],[R[143]]]],[11,"clone",E,E,24,[[["self"]],[R[162]]]],[11,"clone",E,E,26,[[["self"]],[R[34]]]],[11,"clone",E,E,73,[[["self"]],[R[163]]]],[11,"clone",R[29],E,36,[[["self"]],["envmod"]]],[11,"clone",E,E,37,[[["self"]],[R[102]]]],[11,"clone",E,E,28,[[["self"]],["seed"]]],[11,"clone",E,E,38,[[["self"]],[R[186]]]],[11,"clone",E,E,29,[[["self"]],[R[35]]]],[11,"clone",E,E,33,[[["self"]],[R[164]]]],[11,"clone",E,E,31,[[["self"]],[R[149]]]],[11,"clone",E,E,32,[[["self"]],[R[151]]]],[11,"clone",E,E,30,[[["self"]],[R[147]]]],[11,"clone",E,E,39,[[["self"]],[R[136]]]],[11,"clone",R[122],E,45,[[["self"]],[R[165]]]],[11,"clone",E,E,42,[[["self"]],[R[31]]]],[11,"clone",E,E,44,[[["self"]],[R[148]]]],[11,"clone",R[128],E,57,[[["self"]],[R[99]]]],[11,"clone",E,E,50,[[["self"]],[R[74]]]],[11,"clone",E,E,51,[[["self"]],[R[88]]]],[11,"clone",E,E,52,[[["self"]],[R[87]]]],[11,"clone",E,E,53,[[["self"]],[R[76]]]],[11,"clone",E,E,54,[[["self"]],[R[83]]]],[11,"clone",E,E,55,[[["self"]],[R[86]]]],[11,"clone",E,E,56,[[["self"]],[R[96]]]],[11,R[150],R[119],E,67,[[],["self"]]],[11,R[150],E,E,70,[[],["self"]]],[11,R[150],E,"Constructs an ArbData with JSON object {} and zero…",71,[[],["self"]]],[11,R[150],R[29],"Returns a randomly generated seed using the random crate.",28,[[],["self"]]],[11,R[150],E,E,31,[[],[R[149]]]],[11,R[150],E,E,32,[[],[R[151]]]],[11,R[150],E,"Generates a default configuration.",35,[[],[R[190]]]],[11,"eq",R[104],E,4,[[["self"],[R[144]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[144]]],["bool"]]],[11,"eq",R[116],E,11,[[[R[152]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[152]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[153]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[153]],["self"]],["bool"]]],[11,"eq",R[12],E,6,[[["self"],[R[14]]],["bool"]]],[11,"eq",E,E,7,[[[R[103]],["self"]],["bool"]]],[11,"eq",R[118],E,18,[[["self"],[R[141]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[141]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["plugininitializerequest"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[154]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[154]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[155]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[155]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[36]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[36]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[156]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[156]]],["bool"]]],[11,"eq",E,E,16,[[[R[157]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[157]],["self"]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[158]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[158]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[159]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[159]]],["bool"]]],[11,"eq",E,E,22,[[[R[160]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[160]],["self"]],["bool"]]],[11,"eq",R[119],E,66,[[["self"],[R[161]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[161]]],["bool"]]],[11,"eq",E,E,68,[[["self"],["cycle"]],["bool"]]],[11,"ne",E,E,68,[[["self"],["cycle"]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[8]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[8]]],["bool"]]],[11,"eq",E,E,71,[[[R[18]],["self"]],["bool"]]],[11,"ne",E,E,71,[[[R[18]],["self"]],["bool"]]],[11,"eq",E,E,72,[[["self"],["arbcmd"]],["bool"]]],[11,"ne",E,E,72,[[["self"],["arbcmd"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["gate"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["gate"]],["bool"]]],[11,"eq",E,E,25,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,24,[[[R[162]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[162]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[34]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[163]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[163]]],["bool"]]],[11,"eq",R[29],E,36,[[["envmod"],["self"]],["bool"]]],[11,"ne",E,E,36,[[["envmod"],["self"]],["bool"]]],[11,"eq",E,E,37,[[[R[102]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[102]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["seed"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["seed"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[186]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[186]]],["bool"]]],[11,"eq",E,E,29,[[[R[35]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[35]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[164]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[164]],["self"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[149]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[149]]],["bool"]]],[11,"eq",E,E,32,[[[R[151]],["self"]],["bool"]]],[11,"ne",E,E,32,[[[R[151]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[147]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[147]]],["bool"]]],[11,"eq",E,E,39,[[[R[136]],["self"]],["bool"]]],[11,"eq",R[122],E,45,[[["self"],[R[165]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[165]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[31]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[31]]],["bool"]]],[11,"eq",E,E,44,[[[R[148]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[148]],["self"]],["bool"]]],[11,"eq",R[125],E,47,[[[R[166]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[166]],["self"]],["bool"]]],[11,"eq",E,E,48,[[[R[167]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[167]],["self"]],["bool"]]],[11,"eq",R[128],E,50,[[["self"],[R[74]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[88]]],["bool"]]],[11,"eq",E,E,52,[[[R[87]],["self"]],["bool"]]],[11,"eq",E,E,53,[[[R[76]],["self"]],["bool"]]],[11,"eq",E,E,54,[[[R[83]],["self"]],["bool"]]],[11,"eq",E,E,55,[[[R[86]],["self"]],["bool"]]],[11,"eq",E,E,56,[[[R[96]],["self"]],["bool"]]],[11,R[168],R[12],E,6,[[["self"],[R[14]]],[[R[169]],[R[95],[R[169]]]]]],[11,R[168],E,E,7,[[[R[103]],["self"]],[[R[169]],[R[95],[R[169]]]]]],[11,"fmt",R[104],E,4,[[[R[170]],["self"]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[116],E,11,[[[R[170]],["self"]],[R[3]]]],[11,"fmt",E,"Turns the TeeFile object into a string representation that…",9,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[12],E,6,[[["self"],[R[170]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[170]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,62,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[119],E,66,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,"Turns the ArbData object into a string representation that…",71,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,"Turns the ArbCmd object into a string representation that…",72,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[29],"Turns the EnvMod object into a string representation that…",36,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,"Turns the Timeout object into a string representation that…",38,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[170]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[122],"Turns the HostCall object into a string representation…",45,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[104],E,58,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[114],E,8,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[115],E,63,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[116],E,11,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[117],E,64,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[12],E,6,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[118],E,18,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[119],E,66,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[29],E,36,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[120],E,74,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[121],E,75,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[122],E,45,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[123],E,76,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[124],E,46,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[125],E,47,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[126],E,49,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",R[128],E,50,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[170]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[170]]],[R[3]]]],[11,"sub",R[119],E,68,[[[R[171]]],["cycle"]]],[11,"sub",E,E,68,[[["cycle"]],[R[171]]]],[11,R[172],R[116],"Constructs a TeeFile from its string representation, which…",9,[[["str"]],[R[3]]]],[11,R[172],R[12],E,6,[[["str"]],[[R[3],[R[14]]],[R[14]]]]],[11,R[172],E,E,7,[[["str"]],[[R[103]],[R[3],[R[103]]]]]],[11,R[172],R[119],"Constructs an ArgData from its string representation.",71,[[["str"]],[R[3]]]],[11,R[172],E,"Constructs an ArbCmd from its string representation. The…",72,[[["str"]],[R[3]]]],[11,R[172],R[29],"Constructs an EnvMod from its string representation, which…",36,[[["str"]],[R[3]]]],[11,R[172],E,E,37,[[["str"]],[R[3]]]],[11,R[172],E,"Constructs a Timeout from its string representation.",38,[[["str"]],[R[3]]]],[11,R[172],E,E,39,[[["str"]],[[R[3],[R[136]]],[R[136]]]]],[11,R[172],R[122],"Constructs a HostCall from its string representation,…",45,[[["str"]],[R[3]]]],[11,"add",R[119],E,68,[[[R[171]]],["cycle"]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,R[173],R[116],E,9,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[12],E,6,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,7,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,61,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,62,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[118],E,18,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,14,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,15,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,13,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,19,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,17,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,16,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,20,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,21,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,22,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[119],E,66,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,68,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,69,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,71,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,72,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,23,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,25,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,24,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,26,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,73,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[29],E,36,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,37,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,28,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,38,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,29,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,33,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,31,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,32,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,30,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,39,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[122],E,45,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,42,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,44,[[["self"],["__s"]],[R[3]]]],[11,R[174],R[116],E,9,[[["__d"]],[R[3]]]],[11,R[174],R[12],E,6,[[["__d"]],[R[3]]]],[11,R[174],E,E,7,[[["__d"]],[R[3]]]],[11,R[174],E,E,61,[[["__d"]],[R[3]]]],[11,R[174],E,E,62,[[["__d"]],[R[3]]]],[11,R[174],R[118],E,18,[[["__d"]],[R[3]]]],[11,R[174],E,E,14,[[["__d"]],[R[3]]]],[11,R[174],E,E,15,[[["__d"]],[R[3]]]],[11,R[174],E,E,13,[[["__d"]],[R[3]]]],[11,R[174],E,E,19,[[["__d"]],[R[3]]]],[11,R[174],E,E,17,[[["__d"]],[R[3]]]],[11,R[174],E,E,16,[[["__d"]],[R[3]]]],[11,R[174],E,E,20,[[["__d"]],[R[3]]]],[11,R[174],E,E,21,[[["__d"]],[R[3]]]],[11,R[174],E,E,22,[[["__d"]],[R[3]]]],[11,R[174],R[119],E,66,[[["__d"]],[R[3]]]],[11,R[174],E,E,68,[[["__d"]],[R[3]]]],[11,R[174],E,E,69,[[["__d"]],[R[3]]]],[11,R[174],E,E,71,[[["__d"]],[R[3]]]],[11,R[174],E,E,72,[[["__d"]],[R[3]]]],[11,R[174],E,E,23,[[["__d"]],[R[3]]]],[11,R[174],E,E,25,[[["__d"]],[R[3]]]],[11,R[174],E,E,24,[[["__d"]],[R[3]]]],[11,R[174],E,E,26,[[["__d"]],[R[3]]]],[11,R[174],E,E,73,[[["__d"]],[R[3]]]],[11,R[174],R[29],E,36,[[["__d"]],[R[3]]]],[11,R[174],E,E,37,[[["__d"]],[R[3]]]],[11,R[174],E,E,28,[[["__d"]],[R[3]]]],[11,R[174],E,E,38,[[["__d"]],[R[3]]]],[11,R[174],E,E,29,[[["__d"]],[R[3]]]],[11,R[174],E,E,33,[[["__d"]],[R[3]]]],[11,R[174],E,E,31,[[["__d"]],[R[3]]]],[11,R[174],E,E,32,[[["__d"]],[R[3]]]],[11,R[174],E,E,30,[[["__d"]],[R[3]]]],[11,R[174],E,E,39,[[["__d"]],[R[3]]]],[11,R[174],R[122],E,45,[[["__d"]],[R[3]]]],[11,R[174],E,E,42,[[["__d"]],[R[3]]]],[11,R[174],E,E,44,[[["__d"]],[R[3]]]],[11,"name",R[104],E,4,[[["self"]],[["str"],[R[95],["str"]]]]],[11,"cause",E,E,4,[[["self"]],[["fail"],[R[95],["fail"]]]]],[11,R[175],E,E,4,[[["self"]],[[R[95],[R[175]]],[R[175]]]]],[11,"cause",E,E,58,[[["self"]],[["fail"],[R[95],["fail"]]]]],[11,R[175],E,E,58,[[["self"]],[[R[175]],[R[95],[R[175]]]]]],[11,"name",R[116],E,11,[[["self"]],[["str"],[R[95],["str"]]]]],[11,"cause",E,E,11,[[["self"]],[["fail"],[R[95],["fail"]]]]],[11,R[175],E,E,11,[[["self"]],[[R[95],[R[175]]],[R[175]]]]],[11,R[176],R[12],E,6,[[],["str"]]],[11,R[177],E,E,6,[[],["str"]]],[11,R[176],E,E,7,[[],["str"]]],[11,R[177],E,E,7,[[],["str"]]],[11,R[176],R[29],E,39,[[],["str"]]],[11,R[177],E,E,39,[[],["str"]]],[11,"iter",R[12],E,6,[[],[R[178]]]],[11,"iter",E,E,7,[[],[R[179]]]],[11,"iter",R[29],E,39,[[],["reproductionpathstyleiter"]]],[11,"new",R[114],"Constructs a new LogCallback.",8,[[["box",["fn"]],["fn"],[R[103]]],[R[180]]]],[11,"boxed",R[115],"Return a new boxed LogProxy for the provided sender and…",63,[[[T],[R[103]]],[["box",["logproxy"]],["logproxy"]]]],[11,"new",R[116],"Constructs a new TeeFileConfiguration with the provided…",9,[[],[R[153]]]],[11,"new",E,"Constructs a new tee file. Consumes the provided…",10,[[[R[153]]],[["teefile"],[R[3],["teefile"]]]]],[11,"spawn",R[117],"Spawn a [`LogThread`].",64,[[[R[153]],[R[180]],[R[103]],[R[95],[R[180]]],["vec",[R[153]]]],[[R[3],[R[140]]],[R[140]]]]],[11,"get_sender",E,E,64,[[["self"]],[["sender",[R[13]]],[R[13]]]]],[11,"get_ipc_sender",E,E,64,[[["self"]],[[R[181],[R[13]]],[R[13]]]]],[11,R[108],R[12],"Attempt to convert a LoglevelFilter to a Loglevel.",6,[[[R[103]]],[[R[14]],[R[3],[R[14]]]]]],[11,"payload",E,E,62,[[["self"]],["str"]]],[11,"level",E,E,62,[[["self"]],[R[14]]]],[11,"module_path",E,E,62,[[["self"]],[["str"],[R[95],["str"]]]]],[11,"file",E,E,62,[[["self"]],[["str"],[R[95],["str"]]]]],[11,"line",E,E,62,[[["self"]],[["u32"],[R[95],["u32"]]]]],[11,"timestamp",E,E,62,[[["self"]],["systemtime"]]],[11,"process",E,E,62,[[["self"]],["u32"]]],[11,"thread",E,E,62,[[["self"]],["u64"]]],[11,"logger",E,E,62,[[["self"]],["str"]]],[11,"new",E,E,62,[[["u32"],[R[14]],["u64"]],[R[13]]]],[11,"acknowledges",R[119],"Returns true if receiving this sequence number in a…",66,[[[R[161]]],["bool"]]],[11,"after",E,"Returns true if this sequence number comes after the given…",66,[[[R[161]]],["bool"]]],[11,"preceding",E,"Returns the sequence number that comes before this one.",66,[[],[R[161]]]],[11,"none",E,"\"None\" value for sequence numbers, used to indicate that…",66,[[],[R[161]]]],[11,"new",E,"Constructs a new sequence number generator.",67,[[],["sequencenumbergenerator"]]],[11,"get_next",E,"Acquires the next sequence number.",67,[[["self"]],[R[161]]]],[11,"get_previous",E,"Returns the previously acquired sequence number.",67,[[["self"]],[R[161]]]],[11,"t_zero",E,"Returns the first simulation cycle.",68,[[],["cycle"]]],[11,"advance",E,"Advances by the specified number of cycles.",68,[[["cycles"]],["cycle"]]],[11,"from_foreign",E,"Converts the foreign representation of a qubit reference…",69,[[["u64"]],[[R[95],[R[8]]],[R[8]]]]],[11,"to_foreign",E,R[182],69,[[],["u64"]]],[11,"option_to_foreign",E,R[182],69,[[[R[95],[R[8]]],[R[8]]],["u64"]]],[11,"new",E,"Constructs a new reference generator.",70,[[],["qubitrefgenerator"]]],[11,R[200],E,"\"Allocates\" a number of qubit references.",70,[[["self"],["usize"]],[["vec",[R[8]]],[R[8]]]]],[11,"free",E,"\"Frees\" a number of qubit references.",70,[[["self"]]]],[11,"from_str_args_only",E,"Constructs an ArgData from a string containing only one or…",71,[[["str"]],[R[3]]]],[11,"from_args",E,"Construct an `ArbData` with just binary arguments and {}…",71,[[],["self"]]],[11,"from_cbor_unchecked",E,R[183],71,[[],["self"]]],[11,"from_cbor",E,R[183],71,[[],[R[3]]]],[11,"from_json",E,"Construct an `ArbData` from a JSON object and binary…",71,[[],[R[3]]]],[11,"get_json",E,"Returns the JSON/CBOR data field as a JSON string.",71,[[["self"]],[[R[3],["string"]],["string"]]]],[11,"get_cbor",E,"Returns the JSON/CBOR data field as a CBOR string.",71,[[["self"]]]],[11,"get_args",E,R[184],71,[[["self"]]]],[11,"get_args_mut",E,"Provides a mutable reference to the binary argument vector.",71,[[["self"]],["vec"]]],[11,"set_json",E,"Sets the JSON/CBOR data field by means of a JSON string.",71,[[["self"]],[R[3]]]],[11,"set_cbor",E,"Sets the JSON/CBOR data field by means of a CBOR string.",71,[[["self"]],[R[3]]]],[11,"set_cbor_unchecked",E,"Sets the JSON/CBOR data field by means of a CBOR string…",71,[[["self"]]]],[11,"set_args",E,R[184],71,[[["self"]]]],[11,"new",E,R[185],72,[[[R[18]]],["arbcmd"]]],[11,R[108],E,R[185],72,[[[R[18]]],[["arbcmd"],[R[3],["arbcmd"]]]]],[11,"interface_identifier",E,"Returns a reference to the interface identifier for this…",72,[[["self"]],["str"]]],[11,"operation_identifier",E,"Returns a reference to the operation identifier for this…",72,[[["self"]],["str"]]],[11,"data",E,"Returns a reference to the data for this ArbCmd.",72,[[["self"]],[R[18]]]],[11,"data_mut",E,"Returns a mutable reference to the data for this ArbCmd.",72,[[["self"]],[R[18]]]],[11,"new_unitary",E,"Constructs a new unitary gate.",23,[[],[[R[3],["gate"]],["gate"]]]],[11,"new_measurement",E,"Constructs a new measurement gate.",23,[[],[[R[3],["gate"]],["gate"]]]],[11,"new_custom",E,"Constructs a new implementation-defined gate.",23,[[[R[95]]],[[R[3],["gate"]],["gate"]]]],[11,R[189],E,"Returns the name of the gate, if any.",23,[[["self"]],[["str"],[R[95],["str"]]]]],[11,"get_targets",E,"Returns the list of target qubits.",23,[[["self"]]]],[11,"get_controls",E,"Returns the list of control qubits.",23,[[["self"]]]],[11,"get_measures",E,"Returns the list of measured qubits.",23,[[["self"]]]],[11,"get_matrix",E,"Returns the gate matrix.",23,[[["self"]],[[R[95],["vec"]],["vec",["complex64"]]]]],[11,"is_undefined",E,E,25,[[],["bool"]]],[11,"is_zero",E,E,25,[[],["bool"]]],[11,"is_one",E,E,25,[[],["bool"]]],[11,"new",E,E,24,[[],[R[162]]]],[11,"new",E,"Constructs a new plugin metadata record.",73,[[],[R[163]]]],[11,R[189],E,"Returns the name of the plugin implementation.",73,[[["self"]],["str"]]],[11,"get_author",E,"Returns the author of the plugin.",73,[[["self"]],["str"]]],[11,"get_version",E,"Returns the plugin version.",73,[[["self"]],["str"]]],[11,"set",R[29],"Convenience method for building EnvMod::Set.",36,[[],["envmod"]]],[11,"remove",E,"Convenience method for building EnvMod::Remove.",36,[[],["envmod"]]],[11,"from_seconds",E,"Creates a timeout from an integer time in seconds.",38,[[["u64"]],[R[186]]]],[11,"from_millis",E,"Creates a timeout from an integer time in milliseconds.",38,[[["u64"]],[R[186]]]],[11,"infinite",E,"Creates an infinite timeout.",38,[[],[R[186]]]],[11,"try_from_double",E,"Creates a timeout from an floating point time in seconds.",38,[[["f64"]],[[R[186]],[R[3],[R[186]]]]]],[11,"to_double",E,"Returns the timeout as a floating point time in seconds.",38,[[["self"]],["f64"]]],[11,"new",E,"Returns a new PluginLogConfiguration.…",29,[[[R[103]]],[R[35]]]],[11,"new",E,"Constructs a new plugin specification.",33,[[[R[95]]],[R[164]]]],[11,"from_sugar",E,"Constructs a plugin specification from a \"sugared\"…",33,[[[R[34]]],[[R[164]],[R[3],[R[164]]]]]],[11,"new",E,R[187],30,[[[R[164]]],[R[147]]]],[11,"new",E,R[187],34,[[[R[197]],[R[35]]],[R[188]]]],[11,"new_raw",E,"Creates a new plugin through a custom closure.",34,[[["pluginthreadclosure"],[R[34]],[R[35]]],[R[188]]]],[11,"with_init_cmd",E,"Adds an init cmd to the list, builder style.",34,[[],[R[188]]]],[11,R[189],E,E,40,[[["self"]],["string"]]],[11,"convert_path",E,"Converts a path as specified by the underlying…",39,[[["path"]],[[R[3],["pathbuf"]],["pathbuf"]]]],[11,"convert_path_option",E,"Convenience function that applies `convert_path()` on the…",39,[[[R[95]]],[[R[95],["pathbuf"]],[R[3],[R[95]]]]]],[11,"with_seed",E,"Sets the random seed.",35,[[],[R[190]]]],[11,"with_stderr_level",E,"Sets the stderr loglevel.",35,[[],[R[190]]]],[11,"with_tee_file",E,"Adds a tee file.",35,[[],[R[190]]]],[11,"with_log_callback",E,"Sets the log callback.",35,[[],[R[190]]]],[11,"with_dqcsim_level",E,"Sets the verbosity for DQCsim itself.",35,[[],[R[190]]]],[11,"with_plugin",E,"Adds a new plugin to the pipeline.",35,[[],[R[190]]]],[11,"with_reproduction_path_style",E,"Sets the reproduction path style.",35,[[],[R[190]]]],[11,"without_reproduction",E,"Disables the reproduction logging system.",35,[[],[R[190]]]],[11,"without_logging",E,"Disables all logging methods by setting `stderr_level` and…",35,[[],[R[190]]]],[11,"optimize_loglevels",E,"Optimizes the source verbosity levels, such that they are…",35,[[["self"]]]],[11,"check_plugin_list",E,"Verifies that the plugins are specified correctly.",35,[[["self"]],[R[3]]]],[11,"new",R[120],"Constructs a new PluginProcess based on a…",74,[[[R[147]]],["pluginprocess"]]],[11,"new",R[121],"Constructs a plugin thread from a plugin definition and…",75,[[[R[188]]],["pluginthread"]]],[11,"name",R[32],"Returns the name of this plugin from its logging…",41,[[["self"]],["string"]]],[11,R[191],E,"Sends an `PluginInitializeRequest` to this plugin.",41,[[[R[140]],[R[95]],["self"],["u64"]],[[R[156]],[R[3],[R[156]]]]]],[11,R[196],E,"Requests that the plugin waits for the upstream plugin to…",41,[[["self"]],[R[3]]]],[11,"user_initialize",E,"Send user initialize request to the plugin. This invokes…",41,[[["self"]],[R[3]]]],[11,"arb",E,"Sends an `ArbCmd` message to this plugin.",41,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,"apply",R[122],"Applies this plugin modification to a plugin definition…",43,[[["vec"]],[R[3]]]],[11,"new_logger",E,"Constructs a reproduction structure for tracking a…",44,[[[R[190]]],[[R[3],[R[148]]],[R[148]]]]],[11,"record",E,"Records a host call to the reproduction log.",44,[[["self"],[R[165]]]]],[11,"to_run",E,"Turns this reproduction structure into a configuration and…",44,[[["bool"],["self"],[R[190]]],[["vec",[R[165]]],[R[3],["vec"]]]]],[11,"from_file",E,"Constructs a reproduction structure from a file.",44,[[],[[R[3],[R[148]]],[R[148]]]]],[11,"to_file",E,"Writes a reproduction structure to a file.",44,[[["self"]],[R[3]]]],[11,"new",R[123],"Constructs a Simulation from a collection of…",76,[[[R[95],[R[148]]],[R[140]],["seed"],[R[148]],["pipeline"]],[[R[53]],[R[3],[R[53]]]]]],[11,"drop_plugins",E,"Drains the plugin pipeline so their drop() implementations…",76,[[["self"]]]],[11,R[192],E,E,76,[[["self"]],["box"]]],[11,"accelerator_mut",E,E,76,[[["self"]],["box"]]],[11,"yield_to_accelerator",E,"Yields to the accelerator.",76,[[["self"]],[R[3]]]],[11,"arb",E,R[97],76,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,"arb_idx",E,R[97],76,[[["isize"],["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,R[199],E,R[193],76,[[["self"]],[[R[163]],[R[3],[R[163]]]]]],[11,"get_metadata_idx",E,R[193],76,[[["isize"],["self"]],[[R[163]],[R[3],[R[163]]]]]],[11,"write_reproduction_file",E,"Writes a the reproduction log to a file.",76,[[["self"]],[R[3]]]],[11,"new",R[124],"Constructs a Simulator driver.",46,[[[R[190]]],[[R[194]],[R[3],[R[194]]]]]],[11,"new",R[125],"Construct a Connection wrapper instance.",77,[[],[[R[3],[R[195]]],[R[195]]]]],[11,"connect_downstream",E,"Connects to a downstream plugin.",77,[[["self"]],[R[3]]]],[11,"serve_upstream",E,"Creates a one-shot server for an upstream plugin to…",77,[[["self"]],[[R[3],["string"]],["string"]]]],[11,R[196],E,"Waits for an upstream plugin to connect to our one-shot…",77,[[["self"]],[R[3]]]],[11,"send",E,"Send an OutgoingMessage.",77,[[[R[167]],["self"]],[R[3]]]],[11,"next_request",E,"Fetch next request from either the Simulator request…",77,[[["self"]],[[R[95],[R[166]]],[R[3],[R[95]]]]]],[11,"next_downstream_request",E,"Fetch next downstream request.",77,[[["self"]],[[R[95],[R[166]]],[R[3],[R[95]]]]]],[11,"new",R[126],"Constructs a new plugin definition with default callbacks.",49,[[[R[34]]],[R[197]]]],[11,R[139],E,R[198],49,[[["self"]],[R[34]]]],[11,"set_type",E,"Sets the type of the plugin.",49,[[["self"],[R[34]]]]],[11,R[199],E,"Returns the plugin metadata.",49,[[["self"]],[R[163]]]],[11,"run",R[127],"Executes a plugin described by `definition` within the…",78,[[[R[197]]],[R[3]]]],[11,"send",E,"Sends a message to the host.",78,[[["self"],[R[18]]],[R[3]]]],[11,"recv",E,"Waits for a message from the host.",78,[[["self"]],[[R[3],[R[18]]],[R[18]]]]],[11,R[200],E,"Allocate the given number of downstream qubits.",78,[[["usize"],["vec",["arbcmd"]],["self"],["arbcmd"]],[["vec",[R[8]]],[R[3],["vec"]]]]],[11,"free",E,"Free the given downstream qubits.",78,[[["self"],["vec",[R[8]]],[R[8]]],[R[3]]]],[11,"gate",E,"Tells the downstream plugin to execute a gate.",78,[[["self"],["gate"]],[R[3]]]],[11,"get_measurement",E,R[201],78,[[["self"],[R[8]]],[[R[162]],[R[3],[R[162]]]]]],[11,"get_cycles_since_measure",E,R[202],78,[[["self"],[R[8]]],[[R[3],["u64"]],["u64"]]]],[11,"get_cycles_between_measures",E,R[203],78,[[["self"],[R[8]]],[[R[3],["u64"]],["u64"]]]],[11,"advance",E,R[204],78,[[["self"],["cycles"]],[[R[3],["cycle"]],["cycle"]]]],[11,"get_cycle",E,"Returns the current value of the downstream cycle counter.",78,[[["self"]],[[R[3],["cycle"]],["cycle"]]]],[11,"arb",E,"Sends an arbitrary command downstream.",78,[[["self"],["arbcmd"]],[[R[3],[R[18]]],[R[18]]]]],[11,"random_u64",E,R[205],78,[[["self"]],["u64"]]],[11,"random_f64",E,R[206],78,[[["self"]],["f64"]]]],"p":[[8,"Channel"],[8,R[0]],[8,R[1]],[8,R[207]],[4,R[208]],[4,"Gates"],[4,"Loglevel"],[4,R[209]],[3,R[210]],[3,R[211]],[3,"TeeFile"],[4,R[212]],[8,"Log"],[3,R[213]],[3,R[214]],[3,R[215]],[3,R[216]],[3,R[217]],[4,R[218]],[4,R[219]],[4,R[220]],[4,R[221]],[4,R[222]],[3,"Gate"],[3,R[223]],[4,R[224]],[4,R[225]],[8,R[226]],[3,"Seed"],[3,R[227]],[3,R[228]],[3,R[229]],[3,R[230]],[3,R[231]],[3,R[232]],[3,R[233]],[4,"EnvMod"],[4,R[234]],[4,"Timeout"],[4,R[235]],[8,R[236]],[8,"Plugin"],[3,R[237]],[3,R[238]],[3,R[239]],[4,"HostCall"],[3,R[54]],[4,R[240]],[4,R[241]],[3,R[242]],[4,R[74]],[4,R[88]],[4,R[87]],[4,R[76]],[4,R[83]],[4,R[86]],[4,R[96]],[3,R[99]],[3,"Error"],[3,R[243]],[3,R[244]],[3,"Metadata"],[3,R[245]],[3,"LogProxy"],[3,R[246]],[3,R[247]],[3,R[248]],[3,R[249]],[3,"Cycle"],[3,"QubitRef"],[3,R[250]],[3,"ArbData"],[3,"ArbCmd"],[3,R[251]],[3,R[252]],[3,R[253]],[3,R[254]],[3,R[255]],[3,R[256]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);