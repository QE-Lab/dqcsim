var searchIndex = JSON.parse('{\
"dqcsim":{"doc":"DQCsim: the Delft Quantum & Classical simulator","i":[[0,"common","dqcsim","Core modules common to both the plugin and host side of…",null,null],[0,"util","dqcsim::common","Utility functions that don\'t belong elsewhere.",null,null],[5,"log_2","dqcsim::common::util","Returns the log2 for a usize as an Option.",null,[[],["option",4]]],[5,"friendly_name","","Splits a CamelCase name into space-separated lowercase…",null,[[],["string",3]]],[5,"friendly_enumerate","","Turns a string list into its natural language equivalent.",null,[[["option",4]],["string",3]]],[5,"friendly_enum_parse","","Parses a string representing an enum variant into the…",null,[[],["result",6]]],[0,"channel","dqcsim::common","Channel abstractions.",null,null],[6,"CrossbeamChannel","dqcsim::common::channel","",null,null],[6,"IpcChannel","","",null,null],[6,"SimulatorChannel","","",null,null],[6,"PluginChannel","","",null,null],[6,"UpstreamChannel","","",null,null],[6,"DownstreamChannel","","",null,null],[8,"Channel","","Channel abstraction.",null,null],[16,"SenderItem","","The message type of the sender.",0,null],[16,"ReceiverItem","","The message type of the receiver.",0,null],[16,"Sender","","Sender side.",0,null],[16,"Receiver","","Receiver side;",0,null],[8,"Sender","","Sender side of a channel.",null,null],[16,"Item","","The message type of the channel.",1,null],[16,"Error","","The error type of the Result returned by the send function.",1,null],[10,"send","","Send a message.",1,[[],["result",4]]],[8,"Receiver","","Receiver side of a channel.",null,null],[16,"Item","","The message type of the channel.",2,null],[16,"Error","","The error type of the Result returned by the recv function.",2,null],[10,"recv","","Receive a message.",2,[[],["result",4]]],[0,"converter","dqcsim::common","Converter trait and ConverterMap collection.",null,null],[3,"FixedMatrixConverter","dqcsim::common::converter","Matrix converter object for fixed matrices.",null,null],[3,"RxMatrixConverter","","Matrix converter object for the RX matrix.",null,null],[3,"RyMatrixConverter","","Matrix converter object for the RY matrix.",null,null],[3,"RzMatrixConverter","","Matrix converter object for the RZ matrix.",null,null],[3,"PhaseMatrixConverter","","Matrix converter object for the phase submatrix.",null,null],[3,"PhaseKMatrixConverter","","Matrix converter object for the phase submatrix using θ =…",null,null],[3,"RMatrixConverter","","Matrix converter object for the R (= IBM U) gate.",null,null],[3,"UMatrixConverter","","Matrix converter object for any matrix of a certain size -…",null,null],[3,"UnitaryConverter","","Converter implementation for regular unitary gate matrices.",null,null],[3,"UnitaryGateConverter","","Converter implementation for unitary gates based on a…",null,null],[3,"MeasurementGateConverter","","Converter implementation for measurement gates.",null,null],[3,"PrepGateConverter","","Converter implementation for prep gates.",null,null],[3,"CustomGateConverter","","Lambda-based converter implementation for unitary gate…",null,null],[3,"ConverterMap","","K: user-defined key for identifying which converter to use…",null,null],[8,"FromArb","","A type that can be constructed from (part of) an ArbData…",null,null],[10,"from_arb","","Construct from the given ArbData, taking the parameters…",3,[[["arbdata",3]],["result",6]]],[8,"ToArb","","A type that can be converted into (part of) an ArbData…",null,null],[10,"to_arb","","Convert self to ArbData parameters and add them to the…",4,[[["arbdata",3]]]],[8,"Converter","","A type that can be used as a Converter.",null,null],[16,"Input","","The more generic detector input type = constructor output…",5,null],[16,"Output","","The more specific detector output type = constructor input…",5,null],[10,"detect","","The detect function implements the detector function. The…",5,[[],[["option",4],["result",6]]]],[10,"construct","","The construct function implements the opposite of the…",5,[[],["result",6]]],[8,"MatrixConverter","","A type that represents a possibly parameterized matrix…",null,null],[16,"Parameters","","For parameterized matrices, this is the type of the…",6,null],[10,"detect_matrix","","Detects whether the given matrix has a recognized form and…",6,[[["matrix",3]],[["result",6],["option",4]]]],[10,"construct_matrix","","Constructs a matrix from the given parameter set.",6,[[],[["matrix",3],["result",6]]]],[8,"MatrixConverterArb","","A type that represents a possibly parameterized matrix…",null,null],[10,"detect_matrix_arb","","Detects whether the given matrix has a recognized form and…",7,[[["arbdata",3],["matrix",3]],["result",6]]],[10,"construct_matrix_arb","","Constructs a matrix by taking information from the given…",7,[[["arbdata",3]],[["matrix",3],["result",6]]]],[0,"error","dqcsim::common","Error-handling.",null,null],[8,"ResultExt","dqcsim::common::error","Re-export the [`ResultExt`] trait which adds the…",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",8,[[],[["compat",3],["result",4]]]],[10,"context","","Wraps the error type in a context type.",8,[[],[["context",3],["result",4]]]],[10,"with_context","","Wraps the error type in a context type generated by…",8,[[],[["context",3],["result",4]]]],[3,"Error","","[`Error`] type for this crate.",null,null],[4,"ErrorKind","","",null,null],[13,"LogError","","LogError",9,null],[13,"InvalidArgument","","Generic invalid argument: use when a function is called in…",9,null],[13,"InvalidOperation","","Generic invalid operation: use when a function is called…",9,null],[13,"Other","","Generic error: use when an error doesn\'t fit in the above…",9,null],[13,"Multiple","","Wraps multiple errors that occurred asynchronously.",9,null],[13,"ITCError","","For propagating crossbeam_channel errors.",9,null],[13,"IPCError","","For propagating ipc_channel errors.",9,null],[13,"IoError","","For propagating std::io::Error errors.",9,null],[13,"TermError","","For propagating term::Error errors.",9,null],[5,"log_err","","Shorthand for producing a LogError.",null,[[],["result",6]]],[5,"oe_log_err","","Shorthand for producing a LogError in an or_else function.",null,[[]]],[5,"inv_arg","","Shorthand for producing an invalid argument error.",null,[[],["result",6]]],[5,"oe_inv_arg","","Shorthand for producing an invalid argument error in an…",null,[[]]],[5,"inv_op","","Shorthand for producing an invalid operation error.",null,[[],["result",6]]],[5,"oe_inv_op","","Shorthand for producing an invalid operation error in an…",null,[[]]],[5,"err","","Shorthand for producing an error that does not fit in any…",null,[[],["result",6]]],[5,"oe_err","","err() but for or_else() functions.",null,[[]]],[6,"Result","","Internal [`Result`] type which uses the crate\'s [`Error`]…",null,null],[0,"gates","dqcsim::common","Gate types and definitions.",null,null],[4,"UnitaryGateType","dqcsim::common::gates","An abstract gate type.",null,null],[13,"I","","Identity.",10,null],[13,"X","","Pauli-X.",10,null],[13,"Y","","Pauli-Y.",10,null],[13,"Z","","Pauli-Z.",10,null],[13,"H","","Hadamard.",10,null],[13,"S","","Phase.",10,null],[13,"SDAG","","S† (conjugate transpose of S).",10,null],[13,"T","","T.",10,null],[13,"TDAG","","T† (conjugate transpose of T).",10,null],[13,"RX90","","90 degree rotation around X-axis.",10,null],[13,"RXM90","","minus 90 degree rotation around X-axis.",10,null],[13,"RX180","","180 degree rotation around X-axis.",10,null],[13,"RY90","","90 degree rotation around Y-axis.",10,null],[13,"RYM90","","minus 90 degree rotation around Y-axis.",10,null],[13,"RY180","","180 degree rotation around Y-axis.",10,null],[13,"RZ90","","90 degree rotation around Y-axis.",10,null],[13,"RZM90","","minus 90 degree rotation around Z-axis.",10,null],[13,"RZ180","","180 degree rotation around Z-axis.",10,null],[13,"RX","","Arbitrary rotation around X-axis.",10,null],[13,"RY","","Arbitrary rotation around Y-axis.",10,null],[13,"RZ","","Arbitrary rotation around Z-axis.",10,null],[13,"Phase","","Arbitrary rotation around Z-axis, global phase chosen such…",10,null],[13,"PhaseK","","Same as Phase, but with θ = π/2^k​.",10,null],[13,"R","","Arbitrary rotation around X-, Y- and Z-axis.",10,null],[13,"SWAP","","Swap.",10,null],[13,"SQSWAP","","Square root of Swap.",10,null],[13,"U","","Abstract unitary gate with number of target qubits…",10,null],[4,"UnboundUnitaryGate","","An unbound gate type.",null,null],[13,"I","","Identity.",11,null],[13,"X","","Pauli-X.",11,null],[13,"Y","","Pauli-Y.",11,null],[13,"Z","","Pauli-Z.",11,null],[13,"H","","Hadamard.",11,null],[13,"S","","Phase.",11,null],[13,"SDAG","","S† (conjugate transpose of S).",11,null],[13,"T","","T.",11,null],[13,"TDAG","","T† (conjugate transpose of T).",11,null],[13,"RX90","","90 degree rotation around X-axis.",11,null],[13,"RXM90","","minus 90 degree rotation around X-axis.",11,null],[13,"RX180","","180 degree rotation around X-axis.",11,null],[13,"RY90","","90 degree rotation around Y-axis.",11,null],[13,"RYM90","","minus 90 degree rotation around Y-axis.",11,null],[13,"RY180","","180 degree rotation around Y-axis.",11,null],[13,"RZ90","","90 degree rotation around Y-axis.",11,null],[13,"RZM90","","minus 90 degree rotation around Z-axis.",11,null],[13,"RZ180","","180 degree rotation around Z-axis.",11,null],[13,"RX","","Arbitrary rotation around X-axis with specified angle (θ).",11,null],[13,"RY","","Arbitrary rotation around Y-axis with specified angle (θ).",11,null],[13,"RZ","","Arbitrary rotation around Z-axis with specified angle (θ).",11,null],[13,"Phase","","Arbitrary rotation around Z-axis, global phase chosen such…",11,null],[13,"PhaseK","","Same as Phase, but with θ = π/2^k​.",11,null],[13,"R","","Arbitrary rotation around X-, Y- and Z-axis with specified…",11,null],[13,"SWAP","","Swap.",11,null],[13,"SQSWAP","","Square root of Swap.",11,null],[13,"U","","Abstract unitary gate with a reference to specified…",11,null],[4,"BoundUnitaryGate","","A bound gate type.",null,null],[13,"I","","Identity with specified qubit target.",12,null],[13,"X","","Pauli-X with specified qubit target.",12,null],[13,"Y","","Pauli-Y with specified qubit target.",12,null],[13,"Z","","Pauli-Z with specified qubit target.",12,null],[13,"H","","Hadamard with specified qubit target.",12,null],[13,"S","","Phase with specified qubit target.",12,null],[13,"SDAG","","S† (conjugate transpose of S) with specified qubit target.",12,null],[13,"T","","T with specified qubit target.",12,null],[13,"TDAG","","T† (conjugate transpose of T) with specified qubit target.",12,null],[13,"RX90","","90 degree rotation around X-axis with specified qubit…",12,null],[13,"RXM90","","minus 90 degree rotation around X-axi with specified qubit…",12,null],[13,"RX180","","180 degree rotation around X-axis with specified qubit…",12,null],[13,"RY90","","90 degree rotation around Y-axis with specified qubit…",12,null],[13,"RYM90","","minus 90 degree rotation around Y-axis with specified…",12,null],[13,"RY180","","180 degree rotation around Y-axis with specified qubit…",12,null],[13,"RZ90","","90 degree rotation around Y-axis with specified qubit…",12,null],[13,"RZM90","","minus 90 degree rotation around Z-axis with specified…",12,null],[13,"RZ180","","180 degree rotation around Z-axis with specified qubit…",12,null],[13,"RX","","Arbitrary rotation around X-axis with specified angle (θ)…",12,null],[13,"RY","","Arbitrary rotation around Y-axis with specified angle (θ)…",12,null],[13,"RZ","","Arbitrary rotation around Z-axis with specified angle (θ)…",12,null],[13,"Phase","","Arbitrary rotation around Z-axis, global phase chosen such…",12,null],[13,"PhaseK","","Same as Phase, but with θ = π/2^k​.",12,null],[13,"R","","Arbitrary rotation around X-, Y- and Z-axis with specified…",12,null],[13,"SWAP","","Swap with specified qubit targets.",12,null],[13,"SQSWAP","","Square root of Swap with specified qubit targets.",12,null],[13,"U","","Abstract unitary gate with a reference to specified…",12,null],[0,"log","dqcsim::common","A log thread and thread-local log proxy combination.",null,null],[3,"LoglevelIter","dqcsim::common::log","",null,null],[3,"LoglevelFilterIter","","",null,null],[3,"Metadata","","Log record metadata.",null,null],[3,"LogRecord","","A log record.",null,null],[4,"Loglevel","","Loglevel for log records.",null,null],[13,"Fatal","","This loglevel is to be used for reporting a fatal error,…",13,null],[13,"Error","","This loglevel is to be used for reporting or propagating a…",13,null],[13,"Warn","","This loglevel is to be used for reporting that a called…",13,null],[13,"Note","","This loglevel is to be used for reporting information…",13,null],[13,"Info","","This loglevel is to be used for reporting information NOT…",13,null],[13,"Debug","","This loglevel is to be used for reporting debugging…",13,null],[13,"Trace","","This loglevel is to be used for reporting debugging…",13,null],[4,"LoglevelFilter","","LoglevelFilter for implementors of the Log trait.",null,null],[13,"Off","","A level lower than all log levels.",14,null],[13,"Fatal","","Corresponds to the `Fatal` log level.",14,null],[13,"Error","","Corresponds to the `Error` log level.",14,null],[13,"Warn","","Corresponds to the `Warn` log level.",14,null],[13,"Note","","Corresponds to the `Note` log level.",14,null],[13,"Info","","Corresponds to the `Info` log level.",14,null],[13,"Debug","","Corresponds to the `Debug` log level.",14,null],[13,"Trace","","Corresponds to the `Trace` log level.",14,null],[5,"init","","Initialize the thread-local loggers.",null,[[["box",3],["vec",3]],["result",6]]],[5,"deinit","","Deinitialize the thread-local loggers.",null,[[],["result",6]]],[0,"callback","","",null,null],[3,"LogCallback","dqcsim::common::log::callback","Log callback function structure.",null,null],[12,"callback","","The callback function to call.",15,null],[12,"filter","","Verbosity level for calling the log callback function.",15,null],[0,"proxy","dqcsim::common::log","A generic log proxy implementation.",null,null],[3,"LogProxy","dqcsim::common::log::proxy","A [`LogProxy`] is a logger implementation (`Log`) which…",null,null],[0,"stdio","dqcsim::common::log","Utility function to spawn a log proxy implementation to…",null,null],[5,"proxy_stdio","dqcsim::common::log::stdio","Forward standard i/o to log channel.",null,[[["logrecord",3],["sender",3],["box",3],["loglevel",4],["read",8]],["joinhandle",3]]],[0,"tee_file","dqcsim::common::log","",null,null],[3,"TeeFileConfiguration","dqcsim::common::log::tee_file","Represents a tee file configuration for the logging system.",null,null],[12,"filter","","",16,null],[12,"file","","",16,null],[3,"TeeFile","","TeeFile is the combination of a TeeFileConfiguration and a…",null,null],[12,"configuration","","The TeeFileConfiguration",17,null],[4,"TeeFileError","","Error structure used for reporting TeeFile errors.",null,null],[13,"ParseError","","",18,null],[0,"thread","dqcsim::common::log","A log thread implementation.",null,null],[3,"LogThread","dqcsim::common::log::thread","",null,null],[17,"LOGGERS","dqcsim::common::log","The thread-local loggers.",null,null],[8,"Log","","The Log trait.",null,null],[10,"name","","Returns the name of this logger",19,[[]]],[10,"enabled","","Returns true if the provided loglevel is enabled",19,[[["loglevel",4]]]],[10,"log","","Log the incoming record",19,[[["logrecord",3]]]],[0,"protocol","dqcsim::common","Defines the protocols for all forms of communication.",null,null],[3,"FrontendRunRequest","dqcsim::common::protocol","Frontend run request. See `SimulatorToPlugin::RunRequest`.",null,null],[12,"start","","When specified, the frontend\'s `run()` callback must be…",20,null],[12,"messages","","Messages queued up through the host\'s `send()` function,…",20,null],[3,"PluginAcceptUpstreamRequest","","",null,null],[3,"PluginInitializeRequest","","Plugin initialization request. See…",null,null],[12,"downstream","","Gatestream endpoint for the downstream plugin to connect to.",21,null],[12,"plugin_type","","The expected plugin type.",21,null],[12,"seed","","Random seed.",21,null],[12,"log_configuration","","Configuration for the logging subsystem of the plugin.",21,null],[12,"log_channel","","Sender side of the log channel. Can be used by a Plugin to…",21,null],[3,"PluginUserInitializeRequest","","Plugin user initialization request. See…",null,null],[12,"init_cmds","","Vec with initialization commands.",22,null],[3,"FrontendRunResponse","","Frontend run response.",null,null],[12,"return_value","","When specified, the frontend\'s `run()` callback terminated…",23,null],[12,"messages","","Messages queued up through the frontend\'s `send()`…",23,null],[3,"PluginInitializeResponse","","Initialization response.",null,null],[12,"upstream","","Gatestream endpoint for the upstream plugin to connect to.",24,null],[12,"metadata","","Plugin metadata information from the `PluginDefinition`…",24,null],[4,"SimulatorToPlugin","","Simulator/host to plugin requests.",null,null],[13,"Initialize","","Request to initialize the plugin.",25,null],[13,"AcceptUpstream","","Request to complete the connection with the upstream plugin.",25,null],[13,"UserInitialize","","Request to run user initialization code.",25,null],[13,"Abort","","Request to abort the simulation and stop the plugin.",25,null],[13,"RunRequest","","Passes control from the host to the frontend plugin.",25,null],[13,"ArbRequest","","Requests execution of the given `ArbCmd` by the plugin.",25,null],[4,"PluginToSimulator","","Plugin to simulator responses.",null,null],[13,"Success","","Success response to requests that don\'t return data..",26,null],[13,"Failure","","Failure response to any request, containing an error…",26,null],[13,"Initialized","","Success response to `SimulatorToPlugin::Initialize`.",26,null],[13,"RunResponse","","Success response to `SimulatorToPlugin::RunRequest`.",26,null],[13,"ArbResponse","","Success response to `SimulatorToPlugin::ArbRequest`.",26,null],[4,"GatestreamDown","","Gatestream requests/downstream messages.",null,null],[13,"Pipelined","","A pipelined gatestream request.",27,null],[13,"ArbRequest","","Requests execution of the given `ArbCmd` by the plugin.",27,null],[4,"PipelinedGatestreamDown","","Enumeration of pipelined gatestream messages.",null,null],[13,"Allocate","","Requests allocation of a number of qubits.",28,null],[13,"Free","","Requests that one or more qubits be freed.",28,null],[13,"Gate","","Requests execution of a gate.",28,null],[13,"Advance","","Advances the simulation by the specified number of cycles.",28,null],[4,"GatestreamUp","","Gatestream responses/upstream messages.",null,null],[13,"CompletedUpTo","","Acknowledges one or more requests.",29,null],[13,"Failure","","Indicates that the message with the specified sequence…",29,null],[13,"Measured","","Specifies that the specified qubit was measured.",29,null],[13,"Advanced","","Indicates that the simulation was advanced by the…",29,null],[13,"ArbSuccess","","Indicates that a `GatestreamDown::ArbRequest` was executed…",29,null],[13,"ArbFailure","","Indicates that a `GatestreamDown::ArbRequest` failed.",29,null],[6,"PluginToLogThread","","",null,null],[0,"types","dqcsim::common","This module defines some types that are shared between…",null,null],[3,"SequenceNumber","dqcsim::common::types","Represents a sequence number used within a gate stream.",null,null],[3,"SequenceNumberGenerator","","Struct used to generate sequence numbers.",null,null],[3,"Cycle","","Represents a simulation cycle.",null,null],[3,"QubitRef","","Represents a reference to a qubit.",null,null],[3,"QubitRefGenerator","","Struct used to generate new qubit references.",null,null],[3,"ArbData","","Represents an ArbData structure, consisting of an…",null,null],[3,"ArbCmd","","Represents an ArbCmd structure, consisting of interface…",null,null],[3,"Gate","","Represents a type of quantum or mixed quantum-classical…",null,null],[12,"data","","User-defined classical data to pass along with the gate.",30,null],[3,"QubitMeasurementResult","","Represents a qubit measurement result.",null,null],[12,"qubit","","The measured qubit.",31,null],[12,"value","","The measured value.",31,null],[12,"data","","Implementation-specific additional data, such as the…",31,null],[3,"PluginMetadata","","Contains information about a plugin implementation.",null,null],[3,"Matrix","","Matrix wrapper for `Gate` matrices.",null,null],[4,"GateType","","Represents a type of quantum or mixed quantum-classical…",null,null],[13,"Unitary","","Unitary gates have one or more target qubits, zero or more…",32,null],[13,"Measurement","","Measurement gates have one or more measured qubits and a…",32,null],[13,"Prep","","Prep gates have one or more target qubits and a 2x2…",32,null],[13,"Custom","","Custom gates perform a user-defined mixed…",32,null],[4,"QubitMeasurementValue","","",null,null],[13,"Undefined","","The value is unknown because the qubit has not been…",33,null],[13,"Zero","","The qubit was measured to be zero.",33,null],[13,"One","","The qubit was measured to be one.",33,null],[4,"PluginType","","Enumeration of the three types of plugins.",null,null],[13,"Frontend","","",34,null],[13,"Operator","","",34,null],[13,"Backend","","",34,null],[4,"Basis","","Predefined measurement/prep bases.",null,null],[13,"X","","",35,null],[13,"Y","","",35,null],[13,"Z","","",35,null],[6,"CycleDelta","","Represents a cycle difference.",null,null],[6,"Cycles","","Represents a number of cycles to advance by.",null,null],[0,"host","dqcsim","Core modules used by the host side of DQCsim.",null,null],[0,"accelerator","dqcsim::host","Host API interface trait (start, wait, send, recv).",null,null],[8,"Accelerator","dqcsim::host::accelerator","Trait containing the primitive operations for an…",null,null],[10,"start","","Starts a program on the accelerator.",36,[[],["result",6]]],[10,"wait","","Waits for the accelerator to finish its current program.",36,[[],[["arbdata",3],["result",6]]]],[10,"send","","Sends a message to the accelerator.",36,[[],["result",6]]],[10,"recv","","Waits for the accelerator to send a message to us.",36,[[],[["arbdata",3],["result",6]]]],[0,"configuration","dqcsim::host","Configuration structures for the plugins and simulator.",null,null],[3,"Seed","dqcsim::host::configuration","Represents a 64-bit random seed. Can be converted to and…",null,null],[12,"value","","The random seed.",37,null],[3,"PluginLogConfiguration","","Configuration structure for the plugin logging system.",null,null],[12,"name","","Instance name of the plugin used to identify it in log…",38,null],[12,"verbosity","","Specifies the verbosity of the messages sent to DQCsim.",38,null],[12,"tee_files","","Specifies the tee file configurations for this plugin.",38,null],[3,"PluginProcessConfiguration","","Represents the complete configuration for a plugin running…",null,null],[12,"name","","Name of the plugin, used to refer to the plugin by the log…",39,null],[12,"specification","","Plugin specification, i.e. the plugin executable and…",39,null],[12,"functional","","The functional configuration of the plugin, i.e. the…",39,null],[12,"nonfunctional","","The nonfunctional configuration of the plugin, i.e. any…",39,null],[3,"PluginProcessFunctionalConfiguration","","Structure describing the functional configuration of a…",null,null],[12,"init","","ArbCmd objects passed to the plugin initialization RPC.",40,null],[12,"env","","Environment variable overrides for the plugin process.",40,null],[12,"work","","The working directory for the plugin process.",40,null],[3,"PluginProcessNonfunctionalConfiguration","","Structure describing the NONfunctional configuration of a…",null,null],[12,"verbosity","","Specifies the verbosity of the messages sent to DQCsim.",41,null],[12,"tee_files","","Specifies the tee file configuration for this plugin.",41,null],[12,"stdout_mode","","Specifies how the stdout stream of the plugin should be…",41,null],[12,"stderr_mode","","Specifies how the stderr stream of the plugin should be…",41,null],[12,"accept_timeout","","Specifies the timeout for connecting to the plugin after…",41,null],[12,"shutdown_timeout","","Specifies the timeout duration to wait for the plugin to…",41,null],[3,"PluginProcessSpecification","","Plugin specification, consisting of the executable…",null,null],[12,"executable","","The executable filename of the plugin.",42,null],[12,"script","","If specified, the executable is expected to be an…",42,null],[12,"typ","","Plugin type.",42,null],[3,"PluginThreadConfiguration","","Represents the complete configuration for a plugin running…",null,null],[12,"closure","","The closure that\'s called from within the plugin thread.…",43,null],[12,"plugin_type","","The type of plugin that the closure is expected to start.",43,null],[12,"init_cmds","","The vector of `ArbCmd`s passed to the `initialize()`…",43,null],[12,"log_configuration","","Configuration for the logging subsystem of the plugin.",43,null],[3,"SimulatorConfiguration","","The complete configuration for a DQCsim run.",null,null],[12,"seed","","The random seed for the simulation.",44,null],[12,"stderr_level","","The verbosity for logging messages to stderr.",44,null],[12,"tee_files","","Logs messages to the specified file in addition to stderr.…",44,null],[12,"log_callback","","Optional log callback function.",44,null],[12,"dqcsim_level","","The verbosity for DQCsim itself.",44,null],[12,"plugins","","The plugin configurations, from front to back.",44,null],[12,"reproduction_path_style","","The path style used when writing the reproduction file.",44,null],[4,"EnvMod","","Represents an environment variable modification.",null,null],[13,"Set","","Sets the environment variable `key` to `value`.",45,null],[12,"key","dqcsim::host::configuration::EnvMod","",46,null],[12,"value","","",46,null],[13,"Remove","dqcsim::host::configuration","Clears (undefines) the environment variable `key`.",45,null],[12,"key","dqcsim::host::configuration::EnvMod","",47,null],[4,"StreamCaptureMode","dqcsim::host::configuration","Stream capture mode.",null,null],[13,"Pass","","Don\'t capture the stream. That is, let it pass through to…",48,null],[13,"Null","","Disable the stream by piping it to /dev/null (or by…",48,null],[13,"Capture","","Capture the stream to turn each line into a log message…",48,null],[4,"Timeout","","Represents a timeout parameter, which may be infinite.",null,null],[13,"Duration","","The duration specifies the maximum timeout.",49,null],[13,"Infinite","","The timeout is infinite.",49,null],[4,"ReproductionPathStyle","","Represents the style for storing paths in a reproduction…",null,null],[13,"Keep","","Specifies that paths should be saved the same way they…",50,null],[13,"Relative","","Specifies that all paths should be saved relative to…",50,null],[13,"Absolute","","Specifies that all paths should be saved canonically, i.e.…",50,null],[8,"PluginConfiguration","","Trait for types of configurations. The only thing that…",null,null],[10,"instantiate","","Instantiates the plugin.",51,[[["box",3]],[["plugin",8],["box",3]]]],[10,"get_log_configuration","","Returns the log configuratin of the plugin. Note that this…",51,[[],["pluginlogconfiguration",3]]],[10,"get_type","","Returns the plugin type.",51,[[],["plugintype",4]]],[10,"get_reproduction","","Returns the PluginReproduction when possible. Otherwise…",51,[[["reproductionpathstyle",4]],[["pluginreproduction",3],["result",6]]]],[10,"limit_verbosity","","Limits the verbosity of the messages reported to the…",51,[[["loglevelfilter",4]]]],[10,"set_default_name","","Sets the default name for this plugin.",51,[[["string",3]]]],[0,"plugin","dqcsim::host","Contains structs that manage the lifetime and connections…",null,null],[0,"process","dqcsim::host::plugin","Implementation of the plugin trait for running the plugin…",null,null],[3,"PluginProcess","dqcsim::host::plugin::process","A Plugin running in a child process.",null,null],[0,"thread","dqcsim::host::plugin","Implementation of the plugin trait for running the plugin…",null,null],[3,"PluginThread","dqcsim::host::plugin::thread","",null,null],[6,"PluginThreadClosure","","",null,null],[8,"Plugin","dqcsim::host::plugin","The Plugin trait, implemented by all Plugins used in a…",null,null],[10,"spawn","","Spawn the Plugin. The Plugin should spawn the actual…",52,[[["logthread",3]],["result",6]]],[10,"plugin_type","","Returns the PluginType of this plugin.",52,[[],["plugintype",4]]],[10,"init_cmds","","Returns the vector of `ArbCmd`s that are to be passed to…",52,[[],[["vec",3],["arbcmd",3]]]],[10,"log_configuration","","Returns the logging configuration for this plugin.",52,[[],["pluginlogconfiguration",3]]],[10,"rpc","","Send the SimulatorToPlugin message to the plugin.",52,[[["simulatortoplugin",4]],[["result",6],["plugintosimulator",4]]]],[0,"reproduction","dqcsim::host","Simulation run reproduction functionality.",null,null],[3,"PluginReproduction","dqcsim::host::reproduction","The contents of a plugin configuration in a reproduction…",null,null],[12,"name","","Name of the plugin, used to refer to the plugin by the log…",53,null],[12,"executable","","The executable filename of the plugin.",53,null],[12,"script","","If specified, the executable is expected to be an…",53,null],[12,"functional","","The functional configuration of the plugin, i.e. the…",53,null],[3,"PluginModification","","Represents a nonfunctional configuration modification for…",null,null],[12,"name","","Name of the referenced plugin.",54,null],[12,"verbosity","","Specifies the verbosity of the messages sent to DQCsim. If…",54,null],[12,"tee_files","","Specifies the tee file configuration for this plugin.",54,null],[12,"stdout_mode","","Specifies how the stdout stream of the plugin should be…",54,null],[12,"stderr_mode","","Specifies how the stderr stream of the plugin should be…",54,null],[12,"accept_timeout","","Specifies the timeout for connecting to the plugin after…",54,null],[12,"shutdown_timeout","","Specifies the timeout for connecting to the plugin after…",54,null],[3,"Reproduction","","The contents of a reproduction file.",null,null],[12,"seed","","The random seed for the simulation.",55,null],[12,"plugins","","The plugin configurations, from front to back.",55,null],[12,"host_calls","","The sequence of host calls to make.",55,null],[12,"hostname","","The host on which the run was performed, if available.",55,null],[12,"username","","The user that performed the run.",55,null],[12,"workdir","","The working directory that the run was performed in.",55,null],[4,"HostCall","","Represents a host API call.",null,null],[13,"Start","","",56,null],[13,"Wait","","",56,null],[13,"Send","","",56,null],[13,"Recv","","",56,null],[13,"Yield","","",56,null],[13,"Arb","","",56,null],[0,"simulation","dqcsim::host","Simulation instance: launches, connects, communicates…",null,null],[3,"Simulation","dqcsim::host::simulation","Simulation instance.",null,null],[6,"Pipeline","","Type alias for a pipeline of Plugin trait objects.",null,null],[0,"simulator","dqcsim::host","Simulator driver: wraps a `Simulation` and a `LogThread`.",null,null],[3,"Simulator","dqcsim::host::simulator","Simulator driver instance.",null,null],[12,"simulation","","The Simulation driven by this Simulator.",57,null],[0,"plugin","dqcsim","Core modules used by the plugin side of DQCsim.",null,null],[0,"connection","dqcsim::plugin","Plugin to simulator connection wrapper.",null,null],[3,"Connection","dqcsim::plugin::connection","Plugin to Simulator connection wrapper.",null,null],[4,"IncomingMessage","","Incoming messages variants.",null,null],[13,"Simulator","","",58,null],[13,"Upstream","","",58,null],[13,"Downstream","","",58,null],[4,"OutgoingMessage","","Outgoing messages variants.",null,null],[13,"Simulator","","",59,null],[13,"Upstream","","",59,null],[13,"Downstream","","",59,null],[0,"definition","dqcsim::plugin","Module containing the structures used to define a plugin…",null,null],[3,"PluginDefinition","dqcsim::plugin::definition","Defines a plugin.",null,null],[12,"initialize","","Initialization callback.",60,null],[12,"drop","","Finalization callback.",60,null],[12,"run","","Run callback for frontends.",60,null],[12,"allocate","","Qubit allocation callback for operators and backends.",60,null],[12,"free","","Qubit deallocation callback for operators and backends.",60,null],[12,"gate","","Gate execution callback for operators and backends.",60,null],[12,"modify_measurement","","Measurement modification callback for operators.",60,null],[12,"advance","","Callback for advancing time for operators and backends.",60,null],[12,"upstream_arb","","Callback function for handling an arb from upstream for…",60,null],[12,"host_arb","","Callback function for handling an arb from the host.",60,null],[0,"log","dqcsim::plugin","Utility function to setup logging for a Plugin instance.",null,null],[5,"setup_logging","dqcsim::plugin::log","Setup logging for a Plugin instance.",null,[[["ipcsender",3],["pluginlogconfiguration",3],["logrecord",3]],["result",6]]],[0,"state","dqcsim::plugin","Module containing the runtime structures of a plugin.",null,null],[3,"PluginState","dqcsim::plugin::state","Structure representing the state of a plugin.",null,null],[0,"bindings","dqcsim","This module provides a C interface to the DQCsim simulator.",null,null],[3,"dqcs_plugin_state_t","dqcsim::bindings","Type for a plugin state.",null,null],[4,"dqcs_handle_type_t","","Enumeration of types that can be associated with a handle.",null,null],[13,"DQCS_HTYPE_INVALID","","Indicates that the given handle is invalid.",61,null],[13,"DQCS_HTYPE_ARB_DATA","","Indicates that the given handle belongs to an `ArbData`…",61,null],[13,"DQCS_HTYPE_ARB_CMD","","Indicates that the given handle belongs to an `ArbCmd`…",61,null],[13,"DQCS_HTYPE_ARB_CMD_QUEUE","","Indicates that the given handle belongs to a queue of…",61,null],[13,"DQCS_HTYPE_QUBIT_SET","","Indicates that the given handle belongs to a set of qubit…",61,null],[13,"DQCS_HTYPE_GATE","","Indicates that the given handle belongs to a quantum gate…",61,null],[13,"DQCS_HTYPE_MEAS","","Indicates that the given handle belongs to a qubit…",61,null],[13,"DQCS_HTYPE_MEAS_SET","","Indicates that the given handle belongs to a set of qubit…",61,null],[13,"DQCS_HTYPE_MATRIX","","Indicates that the given handle belongs to a matrix. > >…",61,null],[13,"DQCS_HTYPE_GATE_MAP","","Indicates that the given handle belongs to a gate map. > >…",61,null],[13,"DQCS_HTYPE_FRONT_PROCESS_CONFIG","","Indicates that the given handle belongs to a frontend…",61,null],[13,"DQCS_HTYPE_OPER_PROCESS_CONFIG","","Indicates that the given handle belongs to an operator…",61,null],[13,"DQCS_HTYPE_BACK_PROCESS_CONFIG","","Indicates that the given handle belongs to a backend…",61,null],[13,"DQCS_HTYPE_FRONT_THREAD_CONFIG","","Indicates that the given handle belongs to a frontend…",61,null],[13,"DQCS_HTYPE_OPER_THREAD_CONFIG","","Indicates that the given handle belongs to an operator…",61,null],[13,"DQCS_HTYPE_BACK_THREAD_CONFIG","","Indicates that the given handle belongs to a backend…",61,null],[13,"DQCS_HTYPE_SIM_CONFIG","","Indicates that the given handle belongs to a simulator…",61,null],[13,"DQCS_HTYPE_SIM","","Indicates that the given handle belongs to a simulator…",61,null],[13,"DQCS_HTYPE_FRONT_DEF","","Indicates that the given handle belongs to a frontend…",61,null],[13,"DQCS_HTYPE_OPER_DEF","","Indicates that the given handle belongs to an operator…",61,null],[13,"DQCS_HTYPE_BACK_DEF","","Indicates that the given handle belongs to a backend…",61,null],[13,"DQCS_HTYPE_PLUGIN_JOIN","","Indicates that the given handle belongs to a plugin thread…",61,null],[4,"dqcs_plugin_type_t","","Enumeration of the three types of plugins.",null,null],[13,"DQCS_PTYPE_INVALID","","Invalid plugin type. Used to indicate failure of an API…",62,null],[13,"DQCS_PTYPE_FRONT","","Frontend plugin.",62,null],[13,"DQCS_PTYPE_OPER","","Operator plugin.",62,null],[13,"DQCS_PTYPE_BACK","","Backend plugin.",62,null],[4,"dqcs_loglevel_t","","Enumeration of loglevels and logging modes.",null,null],[13,"DQCS_LOG_INVALID","","Invalid loglevel. Used to indicate failure of an API that…",63,null],[13,"DQCS_LOG_OFF","","Turns logging off.",63,null],[13,"DQCS_LOG_FATAL","","This loglevel is to be used for reporting a fatal error,…",63,null],[13,"DQCS_LOG_ERROR","","This loglevel is to be used for reporting or propagating a…",63,null],[13,"DQCS_LOG_WARN","","This loglevel is to be used for reporting that a called…",63,null],[13,"DQCS_LOG_NOTE","","This loglevel is to be used for reporting information…",63,null],[13,"DQCS_LOG_INFO","","This loglevel is to be used for reporting information NOT…",63,null],[13,"DQCS_LOG_DEBUG","","This loglevel is to be used for reporting debugging…",63,null],[13,"DQCS_LOG_TRACE","","This loglevel is to be used for reporting debugging…",63,null],[13,"DQCS_LOG_PASS","","This is intended to be used when configuring the…",63,null],[4,"dqcs_return_t","","Default return type for functions that don\'t need to…",null,null],[13,"DQCS_FAILURE","","The function has failed. More information may be obtained…",64,null],[13,"DQCS_SUCCESS","","The function did what it was supposed to.",64,null],[4,"dqcs_bool_return_t","","Return type for functions that normally return a boolean…",null,null],[13,"DQCS_BOOL_FAILURE","","The function has failed. More information may be obtained…",65,null],[13,"DQCS_FALSE","","The function did what it was supposed to and returned false.",65,null],[13,"DQCS_TRUE","","The function did what it was supposed to and returned true.",65,null],[4,"dqcs_measurement_t","","Qubit measurement value.",null,null],[13,"DQCS_MEAS_INVALID","","Error value used to indicate that something went wrong.",66,null],[13,"DQCS_MEAS_ZERO","","Indicates that the qubit was measured to be zero.",66,null],[13,"DQCS_MEAS_ONE","","Indicates that the qubit was measured to be one.",66,null],[13,"DQCS_MEAS_UNDEFINED","","Indicates that the measurement value is unknown for…",66,null],[4,"dqcs_path_style_t","","Reproduction file path style.",null,null],[13,"DQCS_PATH_STYLE_INVALID","","Error value used to indicate that something went wrong.",67,null],[13,"DQCS_PATH_STYLE_KEEP","","Specifies that paths should be saved the same way they…",67,null],[13,"DQCS_PATH_STYLE_RELATIVE","","Specifies that all paths should be saved relative to…",67,null],[13,"DQCS_PATH_STYLE_ABSOLUTE","","Specifies that all paths should be saved canonically, i.e.…",67,null],[4,"dqcs_predefined_gate_t","","Enumeration of gates defined by DQCsim.",null,null],[13,"DQCS_GATE_INVALID","","Invalid gate. Used as an error return value.",68,null],[13,"DQCS_GATE_PAULI_I","","The identity gate for a single qubit.",68,null],[13,"DQCS_GATE_PAULI_X","","The Pauli X matrix.",68,null],[13,"DQCS_GATE_PAULI_Y","","The Pauli Y matrix.",68,null],[13,"DQCS_GATE_PAULI_Z","","The Pauli Z matrix.",68,null],[13,"DQCS_GATE_H","","The hadamard gate matrix. That is, a 180-degree Y…",68,null],[13,"DQCS_GATE_S","","The S matrix, also known as a 90 degree Z rotation.",68,null],[13,"DQCS_GATE_S_DAG","","The S-dagger matrix, also known as a negative 90 degree Z…",68,null],[13,"DQCS_GATE_T","","The T matrix, also known as a 45 degree Z rotation.",68,null],[13,"DQCS_GATE_T_DAG","","The T-dagger matrix, also known as a negative 45 degree Z…",68,null],[13,"DQCS_GATE_RX_90","","Rx(90°) gate.",68,null],[13,"DQCS_GATE_RX_M90","","Rx(-90°) gate.",68,null],[13,"DQCS_GATE_RX_180","","Rx(180°) gate.",68,null],[13,"DQCS_GATE_RY_90","","Ry(90°) gate.",68,null],[13,"DQCS_GATE_RY_M90","","Ry(-90°) gate.",68,null],[13,"DQCS_GATE_RY_180","","Ry(180°) gate.",68,null],[13,"DQCS_GATE_RZ_90","","Rz(90°) gate.",68,null],[13,"DQCS_GATE_RZ_M90","","Rz(-90°) gate.",68,null],[13,"DQCS_GATE_RZ_180","","Rz(180°) gate.",68,null],[13,"DQCS_GATE_RX","","The matrix for an arbitrary X rotation.",68,null],[13,"DQCS_GATE_RY","","The matrix for an arbitrary Y rotation.",68,null],[13,"DQCS_GATE_RZ","","The matrix for an arbitrary Z rotation.",68,null],[13,"DQCS_GATE_PHASE_K","","The matrix for a Z rotation with angle π/2^k.",68,null],[13,"DQCS_GATE_PHASE","","The matrix for an arbitrary Z rotation.",68,null],[13,"DQCS_GATE_U1","","Any single-qubit unitary gate, parameterized as a full…",68,null],[13,"DQCS_GATE_R","","Arbitrary rotation matrix.",68,null],[13,"DQCS_GATE_SWAP","","The swap gate matrix.",68,null],[13,"DQCS_GATE_SQRT_SWAP","","The square-root of a swap gate matrix.",68,null],[13,"DQCS_GATE_U2","","Any two-qubit unitary gate, parameterized as a full…",68,null],[13,"DQCS_GATE_U3","","Any three-qubit unitary gate, parameterized as a full…",68,null],[4,"dqcs_basis_t","","Enumeration of Pauli bases.",null,null],[13,"DQCS_BASIS_INVALID","","Invalid basis. Used as an error return value.",69,null],[13,"DQCS_BASIS_X","","The X basis.",69,null],[13,"DQCS_BASIS_Y","","The Y basis.",69,null],[13,"DQCS_BASIS_Z","","The Z basis.",69,null],[4,"dqcs_gate_type_t","","Types of DQCsim gates.",null,null],[13,"DQCS_GATE_TYPE_INVALID","","Invalid gate type. Used as an error return value.",70,null],[13,"DQCS_GATE_TYPE_UNITARY","","Unitary gates have one or more target qubits, zero or more…",70,null],[13,"DQCS_GATE_TYPE_MEASUREMENT","","Measurement gates have one or more measured qubits and a…",70,null],[13,"DQCS_GATE_TYPE_PREP","","Prep gates have one or more target qubits and a 2x2…",70,null],[13,"DQCS_GATE_TYPE_CUSTOM","","Custom gates perform a user-defined mixed…",70,null],[5,"dqcs_error_get","","Returns a pointer to the latest error message.",null,[[]]],[5,"dqcs_error_set","","Sets the latest error message string.",null,[[]]],[5,"dqcs_handle_type","","Returns the type of object associated with the given handle.",null,[[["dqcs_handle_t",6]],["dqcs_handle_type_t",4]]],[5,"dqcs_handle_dump","","Returns a debug dump of the object associated with the…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_handle_delete","","Destroys the object associated with a handle.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_handle_delete_all","","Deletes all handles for the current thread.",null,[[],["dqcs_return_t",4]]],[5,"dqcs_handle_leak_check","","Succeeds only if there are no live handles in the current…",null,[[],["dqcs_return_t",4]]],[5,"dqcs_arb_new","","Creates a new `ArbData` object.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_arb_json_set","","Sets the JSON/CBOR object of an `ArbData` object by means…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_json_get","","Returns the JSON/CBOR object of an `ArbData` object in the…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_arb_cbor_set","","Sets the JSON/CBOR object of an `ArbData` object by means…",null,[[["dqcs_handle_t",6],["size_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_cbor_get","","Returns the JSON/CBOR object of an `ArbData` object in the…",null,[[["dqcs_handle_t",6],["size_t",6]],["ssize_t",6]]],[5,"dqcs_arb_push_str","","Pushes an unstructured string argument to the back of the…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_push_raw","","Pushes an unstructured raw argument to the back of the list.",null,[[["dqcs_handle_t",6],["size_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_pop_str","","Pops an unstructured string argument from the back of the…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_arb_pop_raw","","Pops an unstructured raw argument from the back of the list.",null,[[["dqcs_handle_t",6],["size_t",6]],["ssize_t",6]]],[5,"dqcs_arb_pop","","Pops an unstructured argument from the back of the list…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_insert_str","","Inserts an unstructured string argument into the list at…",null,[[["dqcs_handle_t",6],["ssize_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_insert_raw","","Inserts an unstructured raw argument into the list at the…",null,[[["dqcs_handle_t",6],["size_t",6],["ssize_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_remove","","Removes the specified unstructured string argument from…",null,[[["dqcs_handle_t",6],["ssize_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_set_str","","Replaces the unstructured argument at the specified index…",null,[[["dqcs_handle_t",6],["ssize_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_set_raw","","Replaces the unstructured argument at the specified index…",null,[[["dqcs_handle_t",6],["size_t",6],["ssize_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_get_str","","Returns the unstructured string argument at the specified…",null,[[["dqcs_handle_t",6],["ssize_t",6]]]],[5,"dqcs_arb_get_raw","","Returns the unstructured string argument at the specified…",null,[[["dqcs_handle_t",6],["size_t",6],["ssize_t",6]],["ssize_t",6]]],[5,"dqcs_arb_get_size","","Returns the size in bytes of the unstructured string…",null,[[["dqcs_handle_t",6],["ssize_t",6]],["ssize_t",6]]],[5,"dqcs_arb_len","","Returns the number of unstructured arguments, or -1 to…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_arb_clear","","Clears the unstructured argument list.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_arb_assign","","Copies the data from one object to another.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_cmd_new","","Creates a new `ArbCmd` object.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_cmd_iface_get","","Returns the interface ID of an `ArbCmd`.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_cmd_iface_cmp","","Compares the interface ID of an `ArbCmd` with the given…",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_cmd_oper_get","","Returns the operation ID of an `ArbCmd`.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_cmd_oper_cmp","","Compares the operation ID of an `ArbCmd` with the given…",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_cq_new","","Creates a new `ArbCmd` queue object.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_cq_push","","Pushes an `ArbCmd` object into the given `ArbCmd` queue.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_cq_next","","Advances an `ArbCmd` queue to the next command.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_cq_len","","Returns the number of `ArbCmd` objects in the given…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_qbset_new","","Creates a new set of qubit references.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_qbset_contains","","Returns whether the given qubit set contains the given…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_qbset_push","","Pushes a qubit reference into a qubit reference set.",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_return_t",4]]],[5,"dqcs_qbset_pop","","Pops a qubit reference off of a qubit reference set.",null,[[["dqcs_handle_t",6]],["dqcs_qubit_t",6]]],[5,"dqcs_qbset_len","","Returns the number of qubits in the given set.",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_qbset_copy","","Returns a copy of the given qubit set, intended for…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_mat_new","","Constructs a new gate matrix. > > `num_qubits` must be set…",null,[[["size_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_mat_predef","","Constructs a new gate matrix for one of DQCsim\'s…",null,[[["dqcs_handle_t",6],["dqcs_predefined_gate_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_mat_basis","","Constructs a matrix with the eigenvectors of one of the…",null,[[["dqcs_basis_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_mat_len","","Returns the number of complex entries in the given matrix.…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_mat_dimension","","Returns the dimension (number of rows == number of…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_mat_num_qubits","","Returns the number of qubits targeted by the given matrix.…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_mat_get","","Returns a copy of the contained matrix as a C array. > >…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_mat_approx_eq","","Approximately compares two matrices. > > `a` and `b` are…",null,[[["dqcs_handle_t",6],["c_double",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_mat_basis_approx_eq","","Approximately compares two basis matrices. > > `a` and `b`…",null,[[["dqcs_handle_t",6],["c_double",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_mat_approx_unitary","","Returns whether the matrix is approximately unitary. > >…",null,[[["dqcs_handle_t",6],["c_double",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_mat_is_predef","","Returns whether this matrix is of the given predefined…",null,[[["dqcs_handle_t",6],["c_double",6],["dqcs_predefined_gate_t",4]],["dqcs_bool_return_t",4]]],[5,"dqcs_mat_add_controls","","Constructs a controlled matrix from the given matrix. > >…",null,[[["dqcs_handle_t",6],["size_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_mat_strip_control","","Splits a controlled matrix into its non-controlled…",null,[[["dqcs_handle_t",6],["c_double",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_predef","","Constructs a new predefined unitary gate.",null,[[["dqcs_handle_t",6],["dqcs_predefined_gate_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_predef_one","","Constructs a new predefined unitary one-qubit gate.",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6],["dqcs_predefined_gate_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_predef_two","","Constructs a new predefined unitary two-qubit gate.",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6],["dqcs_predefined_gate_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_predef_three","","Constructs a new predefined unitary three-qubit gate.",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6],["dqcs_predefined_gate_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_unitary","","Constructs a new unitary gate.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_measurement","","Constructs a new measurement gate.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_prep","","Constructs a new prep gate.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_new_custom","","Constructs a new custom gate.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_type","","Returns the gate type of the given gate.",null,[[["dqcs_handle_t",6]],["dqcs_gate_type_t",4]]],[5,"dqcs_gate_has_name","","Returns whether the specified gate has a name.",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gate_name","","Returns the name of a custom gate.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_gate_has_targets","","Returns whether the specified gate has target qubits.",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gate_targets","","Returns a handle to a new qubit reference set containing…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_has_controls","","Returns whether the specified gate has control qubits.",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gate_controls","","Returns a handle to a new qubit reference set containing…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_has_measures","","Returns whether the specified gate measures any qubits.",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gate_measures","","Returns a handle to a new qubit reference set containing…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_has_matrix","","Returns whether a unitary matrix is associated with this…",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gate_matrix","","Returns a copy of the unitary matrix associated with this…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_reduce_control","","Utility function that detects control qubits in the…",null,[[["dqcs_handle_t",6],["c_double",6]],["dqcs_handle_t",6]]],[5,"dqcs_gate_expand_control","","Utility function that expands a gate matrix to account for…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gm_new","","Constructs a new gate map. > > Returns a handle to a gate…",null,[[["option",4],["option",4]],["dqcs_handle_t",6]]],[5,"dqcs_gm_add_predef_unitary","","Adds a unitary gate mapping for the given DQCsim-defined…",null,[[["dqcs_handle_t",6],["option",4],["c_double",6],["dqcs_predefined_gate_t",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_add_fixed_unitary","","Adds a unitary gate mapping for the given gate matrix to…",null,[[["dqcs_handle_t",6],["c_double",6],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_add_custom_unitary","","Adds a custom unitary gate mapping to the given gate map.…",null,[[["dqcs_handle_t",6],["option",4],["option",4],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_add_measure","","Adds a measurement gate mapping to the given gate map. > >…",null,[[["dqcs_handle_t",6],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_add_prep","","Adds a prep gate mapping to the given gate map. > > `gm`…",null,[[["dqcs_handle_t",6],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_add_custom","","Adds a fully customizable gate mapping to the given gate…",null,[[["dqcs_handle_t",6],["option",4],["option",4],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_gm_detect","","Uses a gate map object to convert an incoming DQCsim gate…",null,[[["dqcs_handle_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_gm_construct","","Uses a gate map object to construct a multi-qubit DQCsim…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gm_construct_one","","Uses a gate map object to construct a one-qubit DQCsim…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gm_construct_two","","Uses a gate map object to construct a two-qubit DQCsim…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_gm_construct_three","","Uses a gate map object to construct a three-qubit DQCsim…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_meas_new","","Constructs a new measurement object.",null,[[["dqcs_qubit_t",6],["dqcs_measurement_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_meas_qubit_get","","Returns the qubit reference associated with a measurement…",null,[[["dqcs_handle_t",6]],["dqcs_qubit_t",6]]],[5,"dqcs_meas_qubit_set","","Sets the qubit reference associated with a measurement…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_return_t",4]]],[5,"dqcs_meas_value_get","","Returns the measurement value associated with a…",null,[[["dqcs_handle_t",6]],["dqcs_measurement_t",4]]],[5,"dqcs_meas_value_set","","Sets the measurement value associated with a measurement…",null,[[["dqcs_handle_t",6],["dqcs_measurement_t",4]],["dqcs_return_t",4]]],[5,"dqcs_mset_new","","Creates a new set of qubit measurement results.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_mset_len","","Returns the number of qubits measurements in the given…",null,[[["dqcs_handle_t",6]],["ssize_t",6]]],[5,"dqcs_mset_contains","","Returns whether the given qubit measurement set contains…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_bool_return_t",4]]],[5,"dqcs_mset_set","","Adds a measurement result to a measurement result set.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_mset_get","","Returns a copy of the measurement result for the given…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_mset_take","","Returns the measurement result for the given qubit from a…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_mset_remove","","Removes the measurement result for the given qubit from a…",null,[[["dqcs_handle_t",6],["dqcs_qubit_t",6]],["dqcs_return_t",4]]],[5,"dqcs_mset_take_any","","Returns the measurement result for any of the qubits…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_log_raw","","Primitive API for sending a log message using the current…",null,[[["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_new","","Creates a new plugin process configuration object using…",null,[[["dqcs_plugin_type_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_pcfg_new_raw","","Creates a new plugin process configuration object using…",null,[[["dqcs_plugin_type_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_pcfg_type","","Returns the type of the given plugin process configuration.",null,[[["dqcs_handle_t",6]],["dqcs_plugin_type_t",4]]],[5,"dqcs_pcfg_name","","Returns the configured name for the given plugin process.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pcfg_executable","","Returns the configured executable path for the given…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pcfg_script","","Returns the configured script path for the given plugin…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pcfg_init_cmd","","Appends an `ArbCmd` to the list of initialization commands…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_env_set","","Overrides an environment variable for the plugin process.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_env_unset","","Removes/unsets an environment variable for the plugin…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_work_set","","Overrides the working directory for the plugin process.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_work_get","","Returns the configured working directory for the given…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pcfg_verbosity_set","","Configures the logging verbosity for the given plugin…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_verbosity_get","","Returns the configured verbosity for the given plugin…",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_pcfg_tee","","Configures a plugin process to also output its log…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_stdout_mode_set","","Configures the capture mode for the stdout stream of the…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_stdout_mode_get","","Returns the configured stdout capture mode for the…",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_pcfg_stderr_mode_set","","Configures the capture mode for the stderr stream of the…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_stderr_mode_get","","Returns the configured stderr capture mode for the…",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_pcfg_accept_timeout_set","","Configures the timeout for the plugin process to connect…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_accept_timeout_get","","Returns the configured timeout for the plugin process to…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pcfg_shutdown_timeout_set","","Configures the timeout for the plugin process to shut down…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pcfg_shutdown_timeout_get","","Returns the configured timeout for the plugin process to…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_tcfg_new","","Creates a new plugin thread configuration object from a…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_tcfg_new_raw","","Creates a new plugin thread configuration object from a…",null,[[["option",4],["dqcs_plugin_type_t",4],["option",4]],["dqcs_handle_t",6]]],[5,"dqcs_tcfg_type","","Returns the type of the given plugin thread configuration.",null,[[["dqcs_handle_t",6]],["dqcs_plugin_type_t",4]]],[5,"dqcs_tcfg_name","","Returns the configured name for the given plugin thread.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_tcfg_init_cmd","","Appends an `ArbCmd` to the list of initialization commands…",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_tcfg_verbosity_set","","Configures the logging verbosity for the given plugin…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_tcfg_verbosity_get","","Returns the configured verbosity for the given plugin…",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_tcfg_tee","","Configures a plugin thread to also output its log messages…",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_new","","Constructs an empty simulation configuration.",null,[[],["dqcs_handle_t",6]]],[5,"dqcs_scfg_push_plugin","","Appends a plugin to a simulation configuration.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_scfg_seed_set","","Configures the random seed that the simulation should use.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_scfg_seed_get","","Returns the configured random seed.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_scfg_stderr_verbosity_set","","Configures the stderr sink verbosity for a simulation.",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_stderr_verbosity_get","","Returns the configured stderr sink verbosity for a…",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_scfg_tee","","Configures DQCsim to also output its log messages to a file.",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_log_callback","","Configures DQCsim to also output its log messages to…",null,[[["dqcs_handle_t",6],["option",4],["dqcs_loglevel_t",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_dqcsim_verbosity_set","","Configures the logging verbosity for DQCsim\'s own messages.",null,[[["dqcs_handle_t",6],["dqcs_loglevel_t",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_dqcsim_verbosity_get","","Returns the configured verbosity for DQCsim\'s own messages.",null,[[["dqcs_handle_t",6]],["dqcs_loglevel_t",4]]],[5,"dqcs_scfg_repro_path_style_set","","Sets the path style used when writing reproduction files.",null,[[["dqcs_handle_t",6],["dqcs_path_style_t",4]],["dqcs_return_t",4]]],[5,"dqcs_scfg_repro_path_style_get","","Returns the path style used when writing reproduction files.",null,[[["dqcs_handle_t",6]],["dqcs_path_style_t",4]]],[5,"dqcs_scfg_repro_disable","","Disables the reproduction logging system.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_sim_new","","Constructs a DQCsim simulation.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_sim_start","","Starts a program on the simulated accelerator.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_sim_wait","","Waits for the simulated accelerator to finish its current…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_sim_send","","Sends a message to the simulated accelerator.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_sim_recv","","Waits for the simulated accelerator to send a message to us.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_sim_yield","","Yields to the simulator.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_sim_arb","","Sends an `ArbCmd` message to one of the plugins,…",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_sim_arb_idx","","Sends an `ArbCmd` message to one of the plugins,…",null,[[["dqcs_handle_t",6],["ssize_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_sim_get_name","","Queries the implementation name of a plugin, referenced by…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_sim_get_name_idx","","Queries the implementation name of a plugin, referenced by…",null,[[["dqcs_handle_t",6],["ssize_t",6]]]],[5,"dqcs_sim_get_author","","Queries the author of a plugin, referenced by instance name.",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_sim_get_author_idx","","Queries the author of a plugin, referenced by index.",null,[[["dqcs_handle_t",6],["ssize_t",6]]]],[5,"dqcs_sim_get_version","","Queries the version of a plugin, referenced by instance…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_sim_get_version_idx","","Queries the version of a plugin, referenced by index.",null,[[["dqcs_handle_t",6],["ssize_t",6]]]],[5,"dqcs_sim_write_reproduction_file","","Writes a reproduction file for the simulation so far.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_pdef_new","","Creates a new `PluginDefinition` object.",null,[[["dqcs_plugin_type_t",4]],["dqcs_handle_t",6]]],[5,"dqcs_pdef_type","","Returns the plugin type for the given plugin definition…",null,[[["dqcs_handle_t",6]],["dqcs_plugin_type_t",4]]],[5,"dqcs_pdef_name","","Returns the plugin name for the given plugin definition…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pdef_author","","Returns the plugin author for the given plugin definition…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pdef_version","","Returns the plugin version for the given plugin definition…",null,[[["dqcs_handle_t",6]]]],[5,"dqcs_pdef_set_initialize_cb","","Sets the user logic initialization callback.",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_drop_cb","","Sets the user logic drop/cleanup callback.",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_run_cb","","Sets the run callback for frontends.",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_allocate_cb","","Sets the qubit allocation callback for operators and…",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_free_cb","","Sets the qubit deallocation callback for operators and…",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_gate_cb","","Sets the gate execution callback for operators and backends.",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_modify_measurement_cb","","Sets the measurement modification callback for operators.",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_advance_cb","","Sets the callback for advancing time for operators and…",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_upstream_arb_cb","","Sets the callback function for handling an arb from…",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_pdef_set_host_arb_cb","","Sets the callback function function for handling an arb…",null,[[["dqcs_handle_t",6],["option",4],["option",4]],["dqcs_return_t",4]]],[5,"dqcs_plugin_run","","Executes a plugin in the current thread.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_plugin_start","","Executes a plugin in a worker thread.",null,[[["dqcs_handle_t",6]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_wait","","Waits for a plugin worker thread to finish executing.",null,[[["dqcs_handle_t",6]],["dqcs_return_t",4]]],[5,"dqcs_plugin_send","","Sends a message to the host.",null,[[["dqcs_handle_t",6],["dqcs_plugin_state_t",3]],["dqcs_return_t",4]]],[5,"dqcs_plugin_recv","","Waits for a message from the host.",null,[[["dqcs_plugin_state_t",3]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_allocate","","Allocate the given number of downstream qubits.",null,[[["dqcs_handle_t",6],["dqcs_plugin_state_t",3]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_free","","Free the given downstream qubits.",null,[[["dqcs_handle_t",6],["dqcs_plugin_state_t",3]],["dqcs_return_t",4]]],[5,"dqcs_plugin_gate","","Tells the downstream plugin to execute a gate.",null,[[["dqcs_handle_t",6],["dqcs_plugin_state_t",3]],["dqcs_return_t",4]]],[5,"dqcs_plugin_get_measurement","","Returns the latest measurement of the given downstream…",null,[[["dqcs_qubit_t",6],["dqcs_plugin_state_t",3]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_get_cycles_since_measure","","Returns the number of downstream cycles since the latest…",null,[[["dqcs_qubit_t",6],["dqcs_plugin_state_t",3]],["dqcs_cycle_t",6]]],[5,"dqcs_plugin_get_cycles_between_measures","","Returns the number of downstream cycles between the last…",null,[[["dqcs_qubit_t",6],["dqcs_plugin_state_t",3]],["dqcs_cycle_t",6]]],[5,"dqcs_plugin_advance","","Tells the downstream plugin to run for the specified…",null,[[["dqcs_cycle_t",6],["dqcs_plugin_state_t",3]],["dqcs_cycle_t",6]]],[5,"dqcs_plugin_get_cycle","","Returns the current value of the downstream cycle counter.",null,[[["dqcs_plugin_state_t",3]],["dqcs_cycle_t",6]]],[5,"dqcs_plugin_arb","","Sends an arbitrary command downstream.",null,[[["dqcs_handle_t",6],["dqcs_plugin_state_t",3]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_random_u64","","Generates a random unsigned 64-bit number using the…",null,[[["dqcs_plugin_state_t",3]],["dqcs_handle_t",6]]],[5,"dqcs_plugin_random_f64","","Generates a random floating point number using the…",null,[[["dqcs_plugin_state_t",3]],["c_double",6]]],[11,"resolve","","",71,[[],[["result",6],["pluginstate",3]]]],[11,"into_capture_mode","","",63,[[],[["streamcapturemode",4],["result",6]]]],[11,"into_loglevel","","",63,[[],[["result",6],["loglevel",4]]]],[11,"into_loglevel_filter","","",63,[[],[["result",6],["loglevelfilter",4]]]],[6,"dqcs_handle_t","","Type for a handle.",null,null],[6,"dqcs_qubit_t","","Type for a qubit reference.",null,null],[6,"dqcs_cycle_t","","Type for a simulation cycle timestamp.",null,null],[14,"log","dqcsim","",null,null],[14,"fatal","","",null,null],[14,"error","","",null,null],[14,"warn","","",null,null],[14,"note","","",null,null],[14,"info","","",null,null],[14,"debug","","",null,null],[14,"trace","","",null,null],[14,"checked_rpc","","",null,null],[11,"from","dqcsim::common::converter","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","dqcsim::common::error","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"as_fail","","",86,[[],["fail",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"as_fail","","",9,[[],["fail",8]]],[11,"from","dqcsim::common::gates","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","dqcsim::common::log","",87,[[]]],[11,"into","","",87,[[]]],[11,"into_iter","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","dqcsim::common::log::callback","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","dqcsim::common::log::proxy","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","dqcsim::common::log::tee_file","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"as_fail","","",18,[[],["fail",8]]],[11,"from","dqcsim::common::log::thread","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","dqcsim::common::protocol","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","dqcsim::common::types","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"to_string","","",94,[[],["string",3]]],[11,"borrow","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"into_iter","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","dqcsim::host::configuration","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","dqcsim::host::plugin::process","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","dqcsim::host::plugin::thread","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","dqcsim::host::reproduction","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","dqcsim::host::simulation","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","dqcsim::host::simulator","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","dqcsim::plugin::connection","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","dqcsim::plugin::definition","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","dqcsim::plugin::state","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","dqcsim::bindings","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from_arb","dqcsim::common::types","",102,[[["arbdata",3]],["result",6]]],[11,"to_arb","","",102,[[["arbdata",3]]]],[11,"detect","dqcsim::common::converter","",80,[[],[["option",4],["result",6]]]],[11,"construct","","",80,[[],["result",6]]],[11,"detect","","",81,[[["gate",3]],[["option",4],["result",6]]]],[11,"construct","","",81,[[],[["gate",3],["result",6]]]],[11,"detect","","",82,[[["gate",3]],[["option",4],["result",6]]]],[11,"construct","","",82,[[],[["gate",3],["result",6]]]],[11,"detect","","",83,[[["gate",3]],[["option",4],["result",6]]]],[11,"construct","","",83,[[],[["gate",3],["result",6]]]],[11,"detect","","",84,[[],[["option",4],["result",6]]]],[11,"construct","","",84,[[],["result",6]]],[11,"detect","","",85,[[],[["option",4],["result",6]]]],[11,"construct","","",85,[[],["result",6]]],[11,"detect_matrix","","",72,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",72,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",73,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",73,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",74,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",74,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",75,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",75,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",76,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",76,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",77,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",77,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",78,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",78,[[],[["matrix",3],["result",6]]]],[11,"detect_matrix","","",79,[[["matrix",3]],[["result",6],["option",4]]]],[11,"construct_matrix","","",79,[[],[["matrix",3],["result",6]]]],[11,"name","dqcsim::common::log::callback","",15,[[]]],[11,"enabled","","",15,[[["loglevel",4]]]],[11,"log","","",15,[[["logrecord",3]]]],[11,"name","dqcsim::common::log::proxy","",91,[[]]],[11,"enabled","","",91,[[["loglevel",4]]]],[11,"log","","",91,[[["logrecord",3]]]],[11,"name","dqcsim::common::log::tee_file","",17,[[]]],[11,"enabled","","",17,[[["loglevel",4]]]],[11,"log","","",17,[[["logrecord",3]]]],[11,"start","dqcsim::host::simulation","Starts a program on the accelerator.",105,[[],["result",6]]],[11,"wait","","Waits for the accelerator to finish its current program.",105,[[],[["arbdata",3],["result",6]]]],[11,"send","","Sends a message to the accelerator.",105,[[],["result",6]]],[11,"recv","","Waits for the accelerator to send a message to us.",105,[[],[["arbdata",3],["result",6]]]],[11,"instantiate","dqcsim::host::configuration","",39,[[["box",3]],[["plugin",8],["box",3]]]],[11,"get_log_configuration","","",39,[[],["pluginlogconfiguration",3]]],[11,"get_type","","",39,[[],["plugintype",4]]],[11,"get_reproduction","","",39,[[["reproductionpathstyle",4]],[["pluginreproduction",3],["result",6]]]],[11,"limit_verbosity","","",39,[[["loglevelfilter",4]]]],[11,"set_default_name","","",39,[[["string",3]]]],[11,"instantiate","","",43,[[["box",3]],[["plugin",8],["box",3]]]],[11,"get_log_configuration","","",43,[[],["pluginlogconfiguration",3]]],[11,"get_type","","",43,[[],["plugintype",4]]],[11,"get_reproduction","","",43,[[["reproductionpathstyle",4]],[["pluginreproduction",3],["result",6]]]],[11,"limit_verbosity","","",43,[[["loglevelfilter",4]]]],[11,"set_default_name","","",43,[[["string",3]]]],[11,"spawn","dqcsim::host::plugin::process","Spawn the child process based on the plugin configuration.…",103,[[["logthread",3]],["result",6]]],[11,"plugin_type","","",103,[[],["plugintype",4]]],[11,"init_cmds","","",103,[[],[["vec",3],["arbcmd",3]]]],[11,"log_configuration","","",103,[[],["pluginlogconfiguration",3]]],[11,"rpc","","",103,[[["simulatortoplugin",4]],[["result",6],["plugintosimulator",4]]]],[11,"spawn","dqcsim::host::plugin::thread","",104,[[["logthread",3]],["result",6]]],[11,"rpc","","",104,[[["simulatortoplugin",4]],[["result",6],["plugintosimulator",4]]]],[11,"plugin_type","","",104,[[],["plugintype",4]]],[11,"init_cmds","","",104,[[],[["vec",3],["arbcmd",3]]]],[11,"log_configuration","","",104,[[],["pluginlogconfiguration",3]]],[11,"drop","dqcsim::common::log::thread","",92,[[]]],[11,"drop","dqcsim::host::plugin::process","",103,[[]]],[11,"drop","dqcsim::host::plugin::thread","",104,[[]]],[11,"drop","dqcsim::host::simulation","",105,[[]]],[11,"drop","dqcsim::host::simulator","",57,[[]]],[11,"drop","dqcsim::plugin::connection","",106,[[]]],[11,"from","dqcsim::common::converter","",72,[[["matrix",3]],["fixedmatrixconverter",3]]],[11,"from","","",81,[[]]],[11,"from","dqcsim::common::error","",86,[[["errorkind",4]],["error",3]]],[11,"from","","",86,[[["string",3],["context",3]],["error",3]]],[11,"from","","",86,[[["errorkind",4],["context",3]],["error",3]]],[11,"from","","",86,[[["error",3]],["error",3]]],[11,"from","","",86,[[["error",4]],["error",3]]],[11,"from","","",86,[[["senderror",3]],["error",3]]],[11,"from","","",86,[[["error",6]],["error",3]]],[11,"from","","",86,[[["ipcerror",4]],["error",3]]],[11,"from","","",86,[[["parseerror",4]],["error",3]]],[11,"from","","",86,[[["error",3]],["error",3]]],[11,"from","","",86,[[["error",3]],["error",3]]],[11,"from","","",86,[[["utf8error",3]],["error",3]]],[11,"from","","",86,[[["fromutf8error",3]],["error",3]]],[11,"from","","",86,[[["parsefloaterror",3]],["error",3]]],[11,"from","","",86,[[["nulerror",3]],["error",3]]],[11,"from","","",86,[[["recverror",3]],["error",3]]],[11,"from","dqcsim::common::gates","",11,[[["boundunitarygate",4]],["unboundunitarygate",4]]],[11,"from","","",10,[[["boundunitarygate",4]],["unitarygatetype",4]]],[11,"from","dqcsim::common::types","",102,[[["boundunitarygate",4]],["matrix",3]]],[11,"from","","",30,[[["boundunitarygate",4]],["gate",3]]],[11,"from","dqcsim::common::gates","",10,[[["unboundunitarygate",4]],["unitarygatetype",4]]],[11,"from","dqcsim::common::types","",102,[[["unboundunitarygate",4]],["matrix",3]]],[11,"from","dqcsim::common::log","",14,[[["loglevel",4]],["loglevelfilter",4]]],[11,"from","dqcsim::common::types","",33,[[["option",4]],["qubitmeasurementvalue",4]]],[11,"from","","",33,[[],["qubitmeasurementvalue",4]]],[11,"from","","",102,[[["basis",4]],["matrix",3]]],[11,"from","dqcsim::host::configuration","Turns a string into a seed. The string is parsed as a u64…",37,[[]]],[11,"from","","",38,[[["pluginprocessconfiguration",3]],["pluginlogconfiguration",3]]],[11,"from","dqcsim::bindings","Convert a plugin state reference to its FFI representation.",71,[[["pluginstate",3]],["dqcs_plugin_state_t",3]]],[11,"from","","",62,[[["plugintype",4]]]],[11,"from","","",63,[[["streamcapturemode",4]]]],[11,"from","","",63,[[["loglevel",4]]]],[11,"from","","",63,[[["loglevelfilter",4]]]],[11,"from","","",65,[[]]],[11,"from","","",66,[[["qubitmeasurementvalue",4]],["dqcs_measurement_t",4]]],[11,"from","","",67,[[["reproductionpathstyle",4]],["dqcs_path_style_t",4]]],[11,"from","","",70,[[["gatetype",4]],["dqcs_gate_type_t",4]]],[11,"into","dqcsim::common::log","",13,[[],["color",6]]],[11,"into","dqcsim::common::types","",100,[[],["simulatortoplugin",4]]],[11,"into","dqcsim::common::protocol","",21,[[],["simulatortoplugin",4]]],[11,"into","","",93,[[],["simulatortoplugin",4]]],[11,"into","","",22,[[],["simulatortoplugin",4]]],[11,"into","","",20,[[],["simulatortoplugin",4]]],[11,"into","dqcsim::common::types","",96,[[]]],[11,"into","","",96,[[]]],[11,"into","","",97,[[],["string",3]]],[11,"into","","",100,[[],["arbdata",3]]],[11,"into","","",33,[[],["option",4]]],[11,"into","dqcsim::host::configuration","",48,[[],["stdio",3]]],[11,"into","","Returns the embedded seed.",37,[[]]],[11,"into","","",39,[[],[["box",3],["pluginconfiguration",8]]]],[11,"into","","",43,[[],[["box",3],["pluginconfiguration",8]]]],[11,"into","dqcsim::bindings","Convert the FFI representation of a plugin state back to a…",71,[[],["pluginstate",3]]],[11,"into","","",62,[[],[["result",6],["plugintype",4]]]],[11,"into","","",63,[[],[["streamcapturemode",4],["result",6]]]],[11,"into","","",66,[[],[["option",4],["qubitmeasurementvalue",4]]]],[11,"into","","",67,[[],[["option",4],["reproductionpathstyle",4]]]],[11,"next_back","dqcsim::common::log","",87,[[],["option",4]]],[11,"next_back","","",88,[[],["option",4]]],[11,"len","","",87,[[]]],[11,"len","","",88,[[]]],[11,"into_iter","dqcsim::common::types","",102,[[]]],[11,"next","dqcsim::common::log","",87,[[],["option",4]]],[11,"size_hint","","",87,[[]]],[11,"nth","","",87,[[],["option",4]]],[11,"next","","",88,[[],["option",4]]],[11,"size_hint","","",88,[[]]],[11,"nth","","",88,[[],["option",4]]],[11,"clone","dqcsim::common::gates","",10,[[],["unitarygatetype",4]]],[11,"clone","","",11,[[],["unboundunitarygate",4]]],[11,"clone","","",12,[[],["boundunitarygate",4]]],[11,"clone","dqcsim::common::log::tee_file","",16,[[],["teefileconfiguration",3]]],[11,"clone","dqcsim::common::log","",13,[[],["loglevel",4]]],[11,"clone","","",87,[[],["logleveliter",3]]],[11,"clone","","",14,[[],["loglevelfilter",4]]],[11,"clone","","",88,[[],["loglevelfilteriter",3]]],[11,"clone","","",89,[[],["metadata",3]]],[11,"clone","","",90,[[],["logrecord",3]]],[11,"clone","dqcsim::common::types","",94,[[],["sequencenumber",3]]],[11,"clone","","",96,[[],["cycle",3]]],[11,"clone","","",97,[[],["qubitref",3]]],[11,"clone","","",99,[[],["arbdata",3]]],[11,"clone","","",100,[[],["arbcmd",3]]],[11,"clone","","",32,[[],["gatetype",4]]],[11,"clone","","",30,[[],["gate",3]]],[11,"clone","","",33,[[],["qubitmeasurementvalue",4]]],[11,"clone","","",31,[[],["qubitmeasurementresult",3]]],[11,"clone","","",34,[[],["plugintype",4]]],[11,"clone","","",101,[[],["pluginmetadata",3]]],[11,"clone","","",102,[[],["matrix",3]]],[11,"clone","","",35,[[],["basis",4]]],[11,"clone","dqcsim::host::configuration","",45,[[],["envmod",4]]],[11,"clone","","",48,[[],["streamcapturemode",4]]],[11,"clone","","",37,[[],["seed",3]]],[11,"clone","","",49,[[],["timeout",4]]],[11,"clone","","",38,[[],["pluginlogconfiguration",3]]],[11,"clone","","",42,[[],["pluginprocessspecification",3]]],[11,"clone","","",40,[[],["pluginprocessfunctionalconfiguration",3]]],[11,"clone","","",41,[[],["pluginprocessnonfunctionalconfiguration",3]]],[11,"clone","","",39,[[],["pluginprocessconfiguration",3]]],[11,"clone","","",50,[[],["reproductionpathstyle",4]]],[11,"clone","dqcsim::host::reproduction","",56,[[],["hostcall",4]]],[11,"clone","","",53,[[],["pluginreproduction",3]]],[11,"clone","","",55,[[],["reproduction",3]]],[11,"clone","dqcsim::bindings","",71,[[],["dqcs_plugin_state_t",3]]],[11,"clone","","",61,[[],["dqcs_handle_type_t",4]]],[11,"clone","","",62,[[],["dqcs_plugin_type_t",4]]],[11,"clone","","",63,[[],["dqcs_loglevel_t",4]]],[11,"clone","","",64,[[],["dqcs_return_t",4]]],[11,"clone","","",65,[[],["dqcs_bool_return_t",4]]],[11,"clone","","",66,[[],["dqcs_measurement_t",4]]],[11,"clone","","",67,[[],["dqcs_path_style_t",4]]],[11,"clone","","",68,[[],["dqcs_predefined_gate_t",4]]],[11,"clone","","",69,[[],["dqcs_basis_t",4]]],[11,"clone","","",70,[[],["dqcs_gate_type_t",4]]],[11,"default","dqcsim::common::converter","",73,[[],["rxmatrixconverter",3]]],[11,"default","","",74,[[],["rymatrixconverter",3]]],[11,"default","","",75,[[],["rzmatrixconverter",3]]],[11,"default","","",76,[[],["phasematrixconverter",3]]],[11,"default","","",77,[[],["phasekmatrixconverter",3]]],[11,"default","","",78,[[],["rmatrixconverter",3]]],[11,"default","","",85,[[]]],[11,"default","dqcsim::common::types","",95,[[]]],[11,"default","","",98,[[]]],[11,"default","","Constructs an ArbData with JSON object {} and zero…",99,[[]]],[11,"default","dqcsim::host::configuration","Returns a randomly generated seed using the random crate.",37,[[]]],[11,"default","","",40,[[],["pluginprocessfunctionalconfiguration",3]]],[11,"default","","",41,[[],["pluginprocessnonfunctionalconfiguration",3]]],[11,"default","","Generates a default configuration.",44,[[],["simulatorconfiguration",3]]],[11,"eq","dqcsim::common::error","",9,[[["errorkind",4]]]],[11,"ne","","",9,[[["errorkind",4]]]],[11,"eq","dqcsim::common::gates","",10,[[["unitarygatetype",4]]]],[11,"ne","","",10,[[["unitarygatetype",4]]]],[11,"eq","","",11,[[["unboundunitarygate",4]]]],[11,"ne","","",11,[[["unboundunitarygate",4]]]],[11,"eq","","",12,[[["boundunitarygate",4]]]],[11,"ne","","",12,[[["boundunitarygate",4]]]],[11,"eq","dqcsim::common::log::tee_file","",18,[[["teefileerror",4]]]],[11,"ne","","",18,[[["teefileerror",4]]]],[11,"eq","","",16,[[["teefileconfiguration",3]]]],[11,"ne","","",16,[[["teefileconfiguration",3]]]],[11,"eq","dqcsim::common::log","",13,[[["loglevel",4]]]],[11,"eq","","",14,[[["loglevelfilter",4]]]],[11,"eq","dqcsim::common::protocol","",25,[[["simulatortoplugin",4]]]],[11,"ne","","",25,[[["simulatortoplugin",4]]]],[11,"eq","","",21,[[["plugininitializerequest",3]]]],[11,"eq","","",22,[[["pluginuserinitializerequest",3]]]],[11,"ne","","",22,[[["pluginuserinitializerequest",3]]]],[11,"eq","","",20,[[["frontendrunrequest",3]]]],[11,"ne","","",20,[[["frontendrunrequest",3]]]],[11,"eq","","",26,[[["plugintosimulator",4]]]],[11,"ne","","",26,[[["plugintosimulator",4]]]],[11,"eq","","",24,[[["plugininitializeresponse",3]]]],[11,"ne","","",24,[[["plugininitializeresponse",3]]]],[11,"eq","","",23,[[["frontendrunresponse",3]]]],[11,"ne","","",23,[[["frontendrunresponse",3]]]],[11,"eq","","",27,[[["gatestreamdown",4]]]],[11,"ne","","",27,[[["gatestreamdown",4]]]],[11,"eq","","",28,[[["pipelinedgatestreamdown",4]]]],[11,"ne","","",28,[[["pipelinedgatestreamdown",4]]]],[11,"eq","","",29,[[["gatestreamup",4]]]],[11,"ne","","",29,[[["gatestreamup",4]]]],[11,"eq","dqcsim::common::types","",94,[[["sequencenumber",3]]]],[11,"ne","","",94,[[["sequencenumber",3]]]],[11,"eq","","",96,[[["cycle",3]]]],[11,"ne","","",96,[[["cycle",3]]]],[11,"eq","","",97,[[["qubitref",3]]]],[11,"ne","","",97,[[["qubitref",3]]]],[11,"eq","","",99,[[["arbdata",3]]]],[11,"ne","","",99,[[["arbdata",3]]]],[11,"eq","","",100,[[["arbcmd",3]]]],[11,"ne","","",100,[[["arbcmd",3]]]],[11,"eq","","",32,[[["gatetype",4]]]],[11,"ne","","",32,[[["gatetype",4]]]],[11,"eq","","",30,[[["gate",3]]]],[11,"ne","","",30,[[["gate",3]]]],[11,"eq","","",33,[[["qubitmeasurementvalue",4]]]],[11,"eq","","",31,[[["qubitmeasurementresult",3]]]],[11,"ne","","",31,[[["qubitmeasurementresult",3]]]],[11,"eq","","",34,[[["plugintype",4]]]],[11,"eq","","",101,[[["pluginmetadata",3]]]],[11,"ne","","",101,[[["pluginmetadata",3]]]],[11,"eq","","",102,[[]]],[11,"eq","dqcsim::host::configuration","",45,[[["envmod",4]]]],[11,"ne","","",45,[[["envmod",4]]]],[11,"eq","","",48,[[["streamcapturemode",4]]]],[11,"ne","","",48,[[["streamcapturemode",4]]]],[11,"eq","","",37,[[["seed",3]]]],[11,"ne","","",37,[[["seed",3]]]],[11,"eq","","",49,[[["timeout",4]]]],[11,"ne","","",49,[[["timeout",4]]]],[11,"eq","","",38,[[["pluginlogconfiguration",3]]]],[11,"ne","","",38,[[["pluginlogconfiguration",3]]]],[11,"eq","","",42,[[["pluginprocessspecification",3]]]],[11,"ne","","",42,[[["pluginprocessspecification",3]]]],[11,"eq","","",40,[[["pluginprocessfunctionalconfiguration",3]]]],[11,"ne","","",40,[[["pluginprocessfunctionalconfiguration",3]]]],[11,"eq","","",41,[[["pluginprocessnonfunctionalconfiguration",3]]]],[11,"ne","","",41,[[["pluginprocessnonfunctionalconfiguration",3]]]],[11,"eq","","",39,[[["pluginprocessconfiguration",3]]]],[11,"ne","","",39,[[["pluginprocessconfiguration",3]]]],[11,"eq","","",50,[[["reproductionpathstyle",4]]]],[11,"eq","dqcsim::host::reproduction","",56,[[["hostcall",4]]]],[11,"ne","","",56,[[["hostcall",4]]]],[11,"eq","","",53,[[["pluginreproduction",3]]]],[11,"ne","","",53,[[["pluginreproduction",3]]]],[11,"eq","","",55,[[["reproduction",3]]]],[11,"ne","","",55,[[["reproduction",3]]]],[11,"eq","dqcsim::plugin::connection","",58,[[["incomingmessage",4]]]],[11,"ne","","",58,[[["incomingmessage",4]]]],[11,"eq","","",59,[[["outgoingmessage",4]]]],[11,"ne","","",59,[[["outgoingmessage",4]]]],[11,"eq","dqcsim::bindings","",61,[[["dqcs_handle_type_t",4]]]],[11,"eq","","",62,[[["dqcs_plugin_type_t",4]]]],[11,"eq","","",63,[[["dqcs_loglevel_t",4]]]],[11,"eq","","",64,[[["dqcs_return_t",4]]]],[11,"eq","","",65,[[["dqcs_bool_return_t",4]]]],[11,"eq","","",66,[[["dqcs_measurement_t",4]]]],[11,"eq","","",67,[[["dqcs_path_style_t",4]]]],[11,"eq","","",68,[[["dqcs_predefined_gate_t",4]]]],[11,"eq","","",69,[[["dqcs_basis_t",4]]]],[11,"eq","","",70,[[["dqcs_gate_type_t",4]]]],[11,"partial_cmp","dqcsim::common::log","",13,[[["loglevel",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["loglevelfilter",4]],[["option",4],["ordering",4]]]],[11,"fmt","dqcsim::common::error","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::gates","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log::callback","",15,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log::proxy","",91,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log::tee_file","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log::thread","",92,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::protocol","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::types","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::configuration","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::plugin::process","",103,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::plugin::thread","",104,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::reproduction","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::simulation","",105,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::simulator","",57,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::plugin::connection","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::plugin::definition","",60,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::bindings","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log::tee_file","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","Turns the TeeFile object into a string representation that…",16,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::log","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::common::types","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","Turns the ArbData object into a string representation that…",99,[[["formatter",3]],["result",6]]],[11,"fmt","","Turns the ArbCmd object into a string representation that…",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","dqcsim::host::configuration","Turns the EnvMod object into a string representation that…",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","Turns the Timeout object into a string representation that…",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","dqcsim::host::reproduction","Turns the HostCall object into a string representation…",56,[[["formatter",3]],["result",6]]],[11,"sub","dqcsim::common::types","",96,[[["cycledelta",6]],["cycle",3]]],[11,"sub","","",96,[[["cycle",3]],["cycledelta",6]]],[11,"add","","",96,[[["cycledelta",6]],["cycle",3]]],[11,"index","","",102,[[]]],[11,"index","","",102,[[]]],[11,"index_mut","","",102,[[]]],[11,"index_mut","","",102,[[]]],[11,"hash","dqcsim::common::gates","",10,[[]]],[11,"hash","dqcsim::common::types","",94,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",102,[[]]],[11,"try_from","dqcsim::common::gates","",11,[[["unitarygatetype",4]],["result",4]]],[11,"try_from","dqcsim::common::types","",102,[[["unitarygatetype",4]],["result",4]]],[11,"try_from","","",102,[[["complex64",6],["vec",3]],["result",6]]],[11,"try_from","dqcsim::common::gates","",10,[[["dqcs_predefined_gate_t",4]],["result",6]]],[11,"try_from","dqcsim::common::types","",35,[[["dqcs_basis_t",4]],["result",6]]],[11,"from_str","dqcsim::common::log::tee_file","Constructs a TeeFile from its string representation, which…",16,[[],["result",4]]],[11,"from_str","dqcsim::common::log","",13,[[],[["loglevel",4],["result",4]]]],[11,"from_str","","",14,[[],[["result",4],["loglevelfilter",4]]]],[11,"from_str","dqcsim::common::types","Constructs an ArgData from its string representation.",99,[[],["result",4]]],[11,"from_str","","Constructs an ArbCmd from its string representation. The…",100,[[],["result",4]]],[11,"from_str","dqcsim::host::configuration","Constructs an EnvMod from its string representation, which…",45,[[],["result",4]]],[11,"from_str","","",48,[[],["result",4]]],[11,"from_str","","Constructs a Timeout from its string representation.",49,[[],["result",4]]],[11,"from_str","","",50,[[],[["reproductionpathstyle",4],["result",4]]]],[11,"from_str","dqcsim::host::reproduction","Constructs a HostCall from its string representation,…",56,[[],["result",4]]],[11,"serialize","dqcsim::common::log::tee_file","",16,[[],["result",4]]],[11,"serialize","dqcsim::common::log","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","dqcsim::common::protocol","",25,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","dqcsim::common::types","",94,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",99,[[],["result",4]]],[11,"serialize","","",100,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",101,[[],["result",4]]],[11,"serialize","","",102,[[],["result",4]]],[11,"serialize","dqcsim::host::configuration","",45,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","dqcsim::host::reproduction","",56,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"deserialize","dqcsim::common::log::tee_file","",16,[[],["result",4]]],[11,"deserialize","dqcsim::common::log","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",89,[[],["result",4]]],[11,"deserialize","","",90,[[],["result",4]]],[11,"deserialize","dqcsim::common::protocol","",25,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","dqcsim::common::types","",94,[[],["result",4]]],[11,"deserialize","","",96,[[],["result",4]]],[11,"deserialize","","",97,[[],["result",4]]],[11,"deserialize","","",99,[[],["result",4]]],[11,"deserialize","","",100,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",101,[[],["result",4]]],[11,"deserialize","","",102,[[],["result",4]]],[11,"deserialize","dqcsim::host::configuration","",45,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","dqcsim::host::reproduction","",56,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"name","dqcsim::common::error","",9,[[],["option",4]]],[11,"cause","","",9,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",9,[[],[["option",4],["backtrace",3]]]],[11,"cause","","",86,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",86,[[],[["backtrace",3],["option",4]]]],[11,"name","dqcsim::common::log::tee_file","",18,[[],["option",4]]],[11,"cause","","",18,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",18,[[],[["option",4],["backtrace",3]]]],[11,"iter","dqcsim::common::log","",13,[[],["logleveliter",3]]],[11,"iter","","",14,[[],["loglevelfilteriter",3]]],[11,"iter","dqcsim::host::configuration","",50,[[],["reproductionpathstyleiter",3]]],[11,"new","dqcsim::common::converter","",79,[[["option",4]],["umatrixconverter",3]]],[11,"new","","",80,[[["option",4]]]],[11,"new","","",82,[[["option",4],["matrix",3]]]],[11,"new","","",83,[[["option",4],["matrix",3]]]],[11,"new","","",84,[[],["customgateconverter",3]]],[11,"new","","Constructs a new empty ConverterMap.",85,[[["option",4],["box",3]]]],[11,"push","","Appends a Converter with the specified key to the back of…",85,[[["box",3],["converter",8]]]],[11,"insert","","Inserts a Converter at position index within the…",85,[[["box",3],["converter",8]]]],[11,"with","","Appends the specified Converter with the corresponding…",85,[[["box",3],["converter",8]]]],[11,"clear_cache","","Clears the cache.",85,[[]]],[11,"len","","Returns the number of Detectors in the collection.",85,[[]]],[11,"is_empty","","Returns true if the collection contains no Detectors.",85,[[]]],[11,"into_gate_converter","dqcsim::common::gates","",10,[[["option",4]],[["box",3],["converter",8]]]],[11,"new","dqcsim::common::log::callback","Constructs a new LogCallback.",15,[[["fn",8],["loglevelfilter",4],["box",3]],["logcallback",3]]],[11,"boxed","dqcsim::common::log::proxy","Return a new boxed LogProxy for the provided sender and…",91,[[["loglevelfilter",4]],[["logproxy",3],["box",3]]]],[11,"new","dqcsim::common::log::tee_file","Constructs a new TeeFileConfiguration with the provided…",16,[[],["teefileconfiguration",3]]],[11,"new","","Constructs a new tee file. Consumes the provided…",17,[[["teefileconfiguration",3]],[["result",6],["teefile",3]]]],[11,"spawn","dqcsim::common::log::thread","Spawn a [`LogThread`].",92,[[["option",4],["teefileconfiguration",3],["vec",3],["loglevelfilter",4],["logcallback",3]],[["logthread",3],["result",6]]]],[11,"get_sender","","",92,[[],[["sender",3],["logrecord",3]]]],[11,"get_ipc_sender","","",92,[[],[["ipcsender",3],["logrecord",3]]]],[11,"try_from","dqcsim::common::log","Attempt to convert a LoglevelFilter to a Loglevel.",13,[[["loglevelfilter",4]],[["result",4],["loglevel",4]]]],[11,"payload","","",90,[[]]],[11,"level","","",90,[[],["loglevel",4]]],[11,"module_path","","",90,[[],["option",4]]],[11,"file","","",90,[[],["option",4]]],[11,"line","","",90,[[],["option",4]]],[11,"timestamp","","",90,[[],["systemtime",3]]],[11,"process","","",90,[[]]],[11,"thread","","",90,[[]]],[11,"logger","","",90,[[]]],[11,"new","","",90,[[["loglevel",4]],["logrecord",3]]],[11,"acknowledges","dqcsim::common::types","Returns true if receiving this sequence number in a…",94,[[["sequencenumber",3]]]],[11,"after","","Returns true if this sequence number comes after the given…",94,[[["sequencenumber",3]]]],[11,"preceding","","Returns the sequence number that comes before this one.",94,[[],["sequencenumber",3]]],[11,"none","","\\\"None\\\" value for sequence numbers, used to indicate that…",94,[[],["sequencenumber",3]]],[11,"new","","Constructs a new sequence number generator.",95,[[],["sequencenumbergenerator",3]]],[11,"get_next","","Acquires the next sequence number.",95,[[],["sequencenumber",3]]],[11,"get_previous","","Returns the previously acquired sequence number.",95,[[],["sequencenumber",3]]],[11,"t_zero","","Returns the first simulation cycle.",96,[[],["cycle",3]]],[11,"advance","","Advances by the specified number of cycles.",96,[[["cycles",6]],["cycle",3]]],[11,"null","","Returns a null qubit reference.",97,[[],["qubitref",3]]],[11,"is_null","","Returns whether this reference is null.",97,[[]]],[11,"from_foreign","","Converts the foreign representation of a qubit reference…",97,[[],[["qubitref",3],["option",4]]]],[11,"to_foreign","","Converts the type-safe Rust representation of a qubit…",97,[[],["result",6]]],[11,"option_to_foreign","","Converts the type-safe Rust representation of a qubit…",97,[[["qubitref",3],["option",4]],["result",6]]],[11,"new","","Constructs a new reference generator.",98,[[],["qubitrefgenerator",3]]],[11,"allocate","","\\\"Allocates\\\" a number of qubit references.",98,[[],[["vec",3],["qubitref",3]]]],[11,"free","","\\\"Frees\\\" a number of qubit references.",98,[[]]],[11,"from_str_args_only","","Constructs an ArgData from a string containing only one or…",99,[[],["result",6]]],[11,"from_args","","Construct an `ArbData` with just binary arguments and {}…",99,[[]]],[11,"from_cbor","","Construct an `ArbData` from a CBOR object and binary…",99,[[],["result",6]]],[11,"from_json","","Construct an `ArbData` from a JSON object and binary…",99,[[],["result",6]]],[11,"get_json","","Returns the JSON/CBOR data field as a JSON string.",99,[[],[["string",3],["result",6]]]],[11,"get_cbor","","Returns the JSON/CBOR data field as a CBOR string.",99,[[]]],[11,"get_args","","Provides a reference to the binary argument vector.",99,[[]]],[11,"get_args_mut","","Provides a mutable reference to the binary argument vector.",99,[[],["vec",3]]],[11,"set_json","","Sets the JSON/CBOR data field by means of a JSON string.",99,[[],["result",6]]],[11,"set_cbor","","Sets the JSON/CBOR data field by means of a CBOR string.",99,[[],["result",6]]],[11,"set_args","","Provides a reference to the binary argument vector.",99,[[]]],[11,"clear_cbor","","Resets the CBOR to an empty object.",99,[[]]],[11,"clear_args","","Clears the binary arguments vector.",99,[[]]],[11,"clear","","Clears the CBOR object and binary arguments vector.",99,[[]]],[11,"copy_from","","Copies the data from another ArbData to this one.",99,[[["arbdata",3]]]],[11,"new","","Constructs an ArbCmd.",100,[[["arbdata",3]],["arbcmd",3]]],[11,"try_from","","Constructs an ArbCmd.",100,[[["arbdata",3]],[["result",6],["arbcmd",3]]]],[11,"interface_identifier","","Returns a reference to the interface identifier for this…",100,[[]]],[11,"operation_identifier","","Returns a reference to the operation identifier for this…",100,[[]]],[11,"data","","Returns a reference to the data for this ArbCmd.",100,[[],["arbdata",3]]],[11,"data_mut","","Returns a mutable reference to the data for this ArbCmd.",100,[[],["arbdata",3]]],[11,"new_unitary","","Constructs a new unitary gate.",30,[[],[["gate",3],["result",6]]]],[11,"new_measurement","","Constructs a new measurement gate.",30,[[],[["gate",3],["result",6]]]],[11,"new_prep","","Constructs a new prep gate.",30,[[],[["gate",3],["result",6]]]],[11,"new_custom","","Constructs a new implementation-defined gate.",30,[[["option",4]],[["gate",3],["result",6]]]],[11,"get_type","","Returns the gate type.",30,[[],["gatetype",4]]],[11,"get_name","","Returns the name of the gate, if any.",30,[[],["option",4]]],[11,"get_targets","","Returns the list of target qubits.",30,[[]]],[11,"get_controls","","Returns the list of control qubits.",30,[[]]],[11,"get_measures","","Returns the list of measured qubits.",30,[[]]],[11,"get_matrix","","Returns the gate matrix.",30,[[],[["option",4],["matrix",3]]]],[11,"with_matrix_controls","","Returns a new Gate with its controls moved to the matrix.",30,[[]]],[11,"with_gate_controls","","Returns a new Gate with controls encoded in the matrix…",30,[[]]],[11,"without_qubit_refs","","Replaces all qubit references in the gate with undefined…",30,[[]]],[11,"is_undefined","","",33,[[]]],[11,"is_zero","","",33,[[]]],[11,"is_one","","",33,[[]]],[11,"new","","",31,[[],["qubitmeasurementresult",3]]],[11,"new","","Constructs a new plugin metadata record.",101,[[],["pluginmetadata",3]]],[11,"get_name","","Returns the name of the plugin implementation.",101,[[]]],[11,"get_author","","Returns the author of the plugin.",101,[[]]],[11,"get_version","","Returns the plugin version.",101,[[]]],[11,"new","","Returns a new Matrix with provided elements.",102,[[],["result",6]]],[11,"new_identity","","Returns a new identity Matrix with given dimension.",102,[[]]],[11,"approx_eq","","Approximately compares this Matrix with another Matrix.…",102,[[["matrix",3]]]],[11,"basis_approx_eq","","Approximately compares two matrices representing bases…",102,[[["matrix",3]]]],[11,"approx_unitary","","Checks whether this Matrix is approximately unitary by…",102,[[]]],[11,"add_controls","","Returns new Matrix with `number_of_control` qubits added.",102,[[]]],[11,"strip_control","","Returns new Matrix with control behavior removed from the…",102,[[]]],[11,"len","","Returns the number of elements in the Matrix.",102,[[]]],[11,"is_empty","","Returns true if the Matrix is empty.",102,[[]]],[11,"dimension","","Returns the dimension of the Matrix. The dimension equals…",102,[[]]],[11,"num_qubits","","Returns the number of qubits for this Matrix.",102,[[],["option",4]]],[11,"get","","Returns the element at given row and colum index. Returns…",102,[[],[["complex64",6],["option",4]]]],[11,"set","dqcsim::host::configuration","Convenience method for building EnvMod::Set.",45,[[],["envmod",4]]],[11,"remove","","Convenience method for building EnvMod::Remove.",45,[[],["envmod",4]]],[11,"from_seconds","","Creates a timeout from an integer time in seconds.",49,[[],["timeout",4]]],[11,"from_millis","","Creates a timeout from an integer time in milliseconds.",49,[[],["timeout",4]]],[11,"infinite","","Creates an infinite timeout.",49,[[],["timeout",4]]],[11,"try_from_double","","Creates a timeout from an floating point time in seconds.",49,[[],[["timeout",4],["result",6]]]],[11,"to_double","","Returns the timeout as a floating point time in seconds.",49,[[]]],[11,"new","","Returns a new PluginLogConfiguration.…",38,[[["loglevelfilter",4]],["pluginlogconfiguration",3]]],[11,"new","","Constructs a new plugin specification.",42,[[["option",4]],["pluginprocessspecification",3]]],[11,"from_sugar","","Constructs a plugin specification from a \\\"sugared\\\"…",42,[[["plugintype",4]],[["result",6],["pluginprocessspecification",3]]]],[11,"new","","Creates a new plugin configuration.",39,[[["pluginprocessspecification",3]],["pluginprocessconfiguration",3]]],[11,"new","","Creates a new plugin configuration.",43,[[["plugindefinition",3],["pluginlogconfiguration",3]],["pluginthreadconfiguration",3]]],[11,"new_raw","","Creates a new plugin through a custom closure.",43,[[["pluginlogconfiguration",3],["pluginthreadclosure",6],["plugintype",4]],["pluginthreadconfiguration",3]]],[11,"with_init_cmd","","Adds an init cmd to the list, builder style.",43,[[],["pluginthreadconfiguration",3]]],[11,"get_name","","",51,[[],["string",3]]],[11,"convert_path","","Converts a path as specified by the underlying…",50,[[["path",3]],[["result",6],["pathbuf",3]]]],[11,"convert_path_option","","Convenience function that applies `convert_path()` on the…",50,[[["option",4]],[["result",6],["option",4]]]],[11,"with_seed","","Sets the random seed.",44,[[],["simulatorconfiguration",3]]],[11,"with_stderr_level","","Sets the stderr loglevel.",44,[[],["simulatorconfiguration",3]]],[11,"with_tee_file","","Adds a tee file.",44,[[],["simulatorconfiguration",3]]],[11,"with_log_callback","","Sets the log callback.",44,[[],["simulatorconfiguration",3]]],[11,"with_dqcsim_level","","Sets the verbosity for DQCsim itself.",44,[[],["simulatorconfiguration",3]]],[11,"with_plugin","","Adds a new plugin to the pipeline.",44,[[],["simulatorconfiguration",3]]],[11,"with_reproduction_path_style","","Sets the reproduction path style.",44,[[],["simulatorconfiguration",3]]],[11,"without_reproduction","","Disables the reproduction logging system.",44,[[],["simulatorconfiguration",3]]],[11,"without_logging","","Disables all logging methods by setting `stderr_level` and…",44,[[],["simulatorconfiguration",3]]],[11,"optimize_loglevels","","Optimizes the source verbosity levels, such that they are…",44,[[]]],[11,"check_plugin_list","","Verifies that the plugins are specified correctly.",44,[[],["result",6]]],[11,"new","dqcsim::host::plugin::process","Constructs a new PluginProcess based on a…",103,[[["pluginprocessconfiguration",3]],["pluginprocess",3]]],[11,"new","dqcsim::host::plugin::thread","Constructs a plugin thread from a plugin definition and…",104,[[["pluginthreadconfiguration",3]],["pluginthread",3]]],[11,"name","dqcsim::host::plugin","Returns the name of this plugin from its logging…",52,[[],["string",3]]],[11,"initialize","","Sends an `PluginInitializeRequest` to this plugin.",52,[[["logthread",3],["option",4]],[["plugininitializeresponse",3],["result",6]]]],[11,"accept_upstream","","Requests that the plugin waits for the upstream plugin to…",52,[[],["result",6]]],[11,"user_initialize","","Send user initialize request to the plugin. This invokes…",52,[[],["result",6]]],[11,"arb","","Sends an `ArbCmd` message to this plugin.",52,[[],[["arbdata",3],["result",6]]]],[11,"apply","dqcsim::host::reproduction","Applies this plugin modification to a plugin definition…",54,[[["vec",3]],["result",6]]],[11,"new_logger","","Constructs a reproduction structure for tracking a…",55,[[["simulatorconfiguration",3]],[["reproduction",3],["result",6]]]],[11,"record","","Records a host call to the reproduction log.",55,[[["hostcall",4]]]],[11,"to_run","","Turns this reproduction structure into a configuration and…",55,[[["simulatorconfiguration",3]],[["vec",3],["result",6]]]],[11,"from_file","","Constructs a reproduction structure from a file.",55,[[],[["reproduction",3],["result",6]]]],[11,"to_file","","Writes a reproduction structure to a file.",55,[[],["result",6]]],[11,"new","dqcsim::host::simulation","Constructs a Simulation from a collection of…",105,[[["pipeline",6],["logthread",3],["reproduction",3],["option",4],["seed",3]],[["result",6],["simulation",3]]]],[11,"drop_plugins","","Drains the plugin pipeline so their drop() implementations…",105,[[]]],[11,"accelerator","","",105,[[],["box",3]]],[11,"accelerator_mut","","",105,[[],["box",3]]],[11,"yield_to_accelerator","","Yields to the accelerator.",105,[[],["result",6]]],[11,"arb","","Sends an `ArbCmd` message to one of the plugins,…",105,[[],[["arbdata",3],["result",6]]]],[11,"arb_idx","","Sends an `ArbCmd` message to one of the plugins,…",105,[[],[["arbdata",3],["result",6]]]],[11,"get_metadata","","Returns a reference to the metadata object belonging to…",105,[[],[["result",6],["pluginmetadata",3]]]],[11,"get_metadata_idx","","Returns a reference to the metadata object belonging to…",105,[[],[["result",6],["pluginmetadata",3]]]],[11,"write_reproduction_file","","Writes a the reproduction log to a file.",105,[[],["result",6]]],[11,"new","dqcsim::host::simulator","Constructs a Simulator driver.",57,[[["simulatorconfiguration",3]],[["simulator",3],["result",6]]]],[11,"new","dqcsim::plugin::connection","Construct a Connection wrapper instance.",106,[[],[["connection",3],["result",6]]]],[11,"connect_downstream","","Connects to a downstream plugin.",106,[[],["result",6]]],[11,"serve_upstream","","Creates a one-shot server for an upstream plugin to…",106,[[],[["string",3],["result",6]]]],[11,"accept_upstream","","Waits for an upstream plugin to connect to our one-shot…",106,[[],["result",6]]],[11,"send","","Send an OutgoingMessage.",106,[[["outgoingmessage",4]],["result",6]]],[11,"next_request","","Fetch next request from either the Simulator request…",106,[[],[["option",4],["result",6]]]],[11,"next_downstream_request","","Fetch next downstream request.",106,[[],[["option",4],["result",6]]]],[11,"new","dqcsim::plugin::definition","Constructs a new plugin definition with default callbacks.",60,[[["plugintype",4]],["plugindefinition",3]]],[11,"get_type","","Returns the plugin type.",60,[[],["plugintype",4]]],[11,"set_type","","Sets the type of the plugin.",60,[[["plugintype",4]]]],[11,"get_metadata","","Returns the plugin metadata.",60,[[],["pluginmetadata",3]]],[11,"run","dqcsim::plugin::state","Executes a plugin described by `definition` within the…",107,[[["plugindefinition",3]],["result",6]]],[11,"send","","Sends a message to the host.",107,[[["arbdata",3]],["result",6]]],[11,"recv","","Waits for a message from the host.",107,[[],[["arbdata",3],["result",6]]]],[11,"allocate","","Allocate the given number of downstream qubits.",107,[[["vec",3],["arbcmd",3]],[["vec",3],["result",6]]]],[11,"free","","Free the given downstream qubits.",107,[[["vec",3],["qubitref",3]],["result",6]]],[11,"gate","","Tells the downstream plugin to execute a gate.",107,[[["gate",3]],["result",6]]],[11,"get_measurement","","Returns the latest measurement of the given downstream…",107,[[["qubitref",3]],[["qubitmeasurementresult",3],["result",6]]]],[11,"get_cycles_since_measure","","Returns the number of downstream cycles since the latest…",107,[[["qubitref",3]],["result",6]]],[11,"get_cycles_between_measures","","Returns the number of downstream cycles between the last…",107,[[["qubitref",3]],["result",6]]],[11,"advance","","Tells the downstream plugin to run for the specified…",107,[[["cycles",6]],[["cycle",3],["result",6]]]],[11,"get_cycle","","Returns the current value of the downstream cycle counter.",107,[[],[["cycle",3],["result",6]]]],[11,"arb","","Sends an arbitrary command downstream.",107,[[["arbcmd",3]],[["arbdata",3],["result",6]]]],[11,"random_u64","","Generates a random unsigned 64-bit number using the…",107,[[]]],[11,"random_f64","","Generates a random floating point number using the…",107,[[]]]],"p":[[8,"Channel"],[8,"Sender"],[8,"Receiver"],[8,"FromArb"],[8,"ToArb"],[8,"Converter"],[8,"MatrixConverter"],[8,"MatrixConverterArb"],[8,"ResultExt"],[4,"ErrorKind"],[4,"UnitaryGateType"],[4,"UnboundUnitaryGate"],[4,"BoundUnitaryGate"],[4,"Loglevel"],[4,"LoglevelFilter"],[3,"LogCallback"],[3,"TeeFileConfiguration"],[3,"TeeFile"],[4,"TeeFileError"],[8,"Log"],[3,"FrontendRunRequest"],[3,"PluginInitializeRequest"],[3,"PluginUserInitializeRequest"],[3,"FrontendRunResponse"],[3,"PluginInitializeResponse"],[4,"SimulatorToPlugin"],[4,"PluginToSimulator"],[4,"GatestreamDown"],[4,"PipelinedGatestreamDown"],[4,"GatestreamUp"],[3,"Gate"],[3,"QubitMeasurementResult"],[4,"GateType"],[4,"QubitMeasurementValue"],[4,"PluginType"],[4,"Basis"],[8,"Accelerator"],[3,"Seed"],[3,"PluginLogConfiguration"],[3,"PluginProcessConfiguration"],[3,"PluginProcessFunctionalConfiguration"],[3,"PluginProcessNonfunctionalConfiguration"],[3,"PluginProcessSpecification"],[3,"PluginThreadConfiguration"],[3,"SimulatorConfiguration"],[4,"EnvMod"],[13,"Set"],[13,"Remove"],[4,"StreamCaptureMode"],[4,"Timeout"],[4,"ReproductionPathStyle"],[8,"PluginConfiguration"],[8,"Plugin"],[3,"PluginReproduction"],[3,"PluginModification"],[3,"Reproduction"],[4,"HostCall"],[3,"Simulator"],[4,"IncomingMessage"],[4,"OutgoingMessage"],[3,"PluginDefinition"],[4,"dqcs_handle_type_t"],[4,"dqcs_plugin_type_t"],[4,"dqcs_loglevel_t"],[4,"dqcs_return_t"],[4,"dqcs_bool_return_t"],[4,"dqcs_measurement_t"],[4,"dqcs_path_style_t"],[4,"dqcs_predefined_gate_t"],[4,"dqcs_basis_t"],[4,"dqcs_gate_type_t"],[3,"dqcs_plugin_state_t"],[3,"FixedMatrixConverter"],[3,"RxMatrixConverter"],[3,"RyMatrixConverter"],[3,"RzMatrixConverter"],[3,"PhaseMatrixConverter"],[3,"PhaseKMatrixConverter"],[3,"RMatrixConverter"],[3,"UMatrixConverter"],[3,"UnitaryConverter"],[3,"UnitaryGateConverter"],[3,"MeasurementGateConverter"],[3,"PrepGateConverter"],[3,"CustomGateConverter"],[3,"ConverterMap"],[3,"Error"],[3,"LoglevelIter"],[3,"LoglevelFilterIter"],[3,"Metadata"],[3,"LogRecord"],[3,"LogProxy"],[3,"LogThread"],[3,"PluginAcceptUpstreamRequest"],[3,"SequenceNumber"],[3,"SequenceNumberGenerator"],[3,"Cycle"],[3,"QubitRef"],[3,"QubitRefGenerator"],[3,"ArbData"],[3,"ArbCmd"],[3,"PluginMetadata"],[3,"Matrix"],[3,"PluginProcess"],[3,"PluginThread"],[3,"Simulation"],[3,"Connection"],[3,"PluginState"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);