---
kind: pipeline
name: python-3-5

steps:
- name: test
  image: python:3.5
  commands:
  - apt-get update && apt-get install -y swig
  - python setup.py build test bdist_wheel

---
kind: pipeline
name: python-3-6

steps:
- name: test
  image: python:3.6
  commands:
  - apt-get update && apt-get install -y swig
  - python setup.py build test bdist_wheel

---
kind: pipeline
name: python-3-7

steps:
- name: test
  image: python:3.7
  commands:
  - apt-get update && apt-get install -y swig
  - python setup.py build test bdist_wheel

---
kind: pipeline
name: coverage

steps:
- name: install
  image: rust:1
  commands:
  - apt-get update && apt-get install -y swig python3-pip libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev
  - mkdir -p target/drone
  - cd target/drone
  - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
  - tar xzf master.tar.gz
  - cd kcov-master
  - mkdir -p build
  - cd build
  - cmake ../
  - make
  - export PATH=$PATH:`pwd`/src
  - cd ../..
  - cargo build --tests --all-features
  - cargo test --no-default-features --features kcov cli -- --test-threads 1
  - |
    for file in target/debug/{dqcsim-*,core-*}; do
      [ -x "${file}" ] || continue; 
      mkdir -p "target/cov/$(basename $file)"; 
      kcov --exclude-pattern=/.cargo,/usr/lib,/tests/ --exclude-region='#[cfg(test)]' --verify "target/cov/$(basename $file)" "$file";
    done
  # # Python coverage
  # - python3 setup.py build
  # - kcov --python-parser=python3 --include-pattern=/python/dqcsim/ --exclude-line=no_kcoverage target/cov setup.py test
  # # C++ coverage
  # - python3 setup.py install
  # - |
  #   mkdir build &&
  #   cd build &&
  #   cmake ../cpp/ &&
  #   make &&
  #   cd ../ &&
  #   for file in `build/test_* -executable -and -type f`; 
  #     do [ -x "${file}" ] || continue; 
  #     mkdir -p "target/cov/$(basename $file)";
  #     kcov --exclude-pattern=/.cargo,/usr/lib,/cpp/test_,/build/ --exclude-region='#[cfg(test)]' --verify "target/cov/$(basename $file)" "$file";
  #   done
  # # Upload to codecov.io
  # - bash <(curl -s https://codecov.io/bash)
