name: Coverage

on:
  push:
    paths:
    - 'rust/**'
    - '**/Cargo.toml'
    - '**/Cargo.lock'
    - 'cpp/**'
    - '**/CMakeLists.txt'
    - 'python/**'
    - '**/setup.py'
  pull_request:

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --no-default-features --features null-plugins --bins --manifest-path rust/Cargo.toml
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --no-run --all-features --all-targets
    - uses: docker://kcov/kcov:v37
      with:
        entrypoint: true
    - name: Kcov
      run: |
        docker run --rm --security-opt seccomp=unconfined \
          --workdir /home/runner/work/dqcsim/dqcsim \
          -e INPUT_ENTRYPOINT \
          -e INPUT_ARGS \
          -e HOME \
          -e GITHUB_REF \
          -e GITHUB_SHA \
          -e GITHUB_REPOSITORY \
          -e GITHUB_ACTOR \
          -e GITHUB_WORKFLOW \
          -e GITHUB_HEAD_REF \
          -e GITHUB_BASE_REF \
          -e GITHUB_EVENT_NAME \
          -e GITHUB_WORKSPACE \
          -e GITHUB_ACTION \
          -e GITHUB_EVENT_PATH \
          -e RUNNER_OS \
          -e RUNNER_TOOL_CACHE \
          -e RUNNER_TEMP \
          -e RUNNER_WORKSPACE \
          -e ACTIONS_RUNTIME_URL \
          -e ACTIONS_RUNTIME_TOKEN \
          -e GITHUB_ACTIONS=true \
          -v "/var/run/docker.sock":"/var/run/docker.sock" \
          -v "/home/runner/work/_temp/_github_home":"/github/home" \
          -v "/home/runner/work/_temp/_github_workflow":"/github/workflow" \
          -v "/home/runner/work/dqcsim/dqcsim":"/home/runner/work/dqcsim/dqcsim" \
          --entrypoint "/bin/bash" \
          kcov/kcov:v37 \
          -c "mkdir -p target/cov/rust && find target/debug/{dqcsim-*,core-*} -type f -executable | xargs -l kcov --include-path=rust/ --exclude-region='#[cfg(test)]' target/cov/rust"
    - name: Filter output
      run: |
        mkdir -p rust-cov
        find target/cov/rust -type f -name "cobertura.xml" -o -name "coverage.json" | xargs tar -cf rust-cov/rust-cov.tar
    - uses: actions/upload-artifact@v1
      with:
        name: rust-cov
        path: rust-cov

  upload:
    name: Codecov.io
    runs-on: ubuntu-latest
    needs: [rust] #, cpp, python]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: rust-cov
    - name: Extract
      run: |
        find . -name "*-cov.tar" | xargs -l tar -xf
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
